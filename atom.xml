<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>软件测试技术分享</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-06-30T02:55:54.186Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>yulong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HTML5 示例</title>
    <link href="http://example.com/01_%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/03_%E5%89%8D%E7%AB%AFhtml/02_html%E5%9F%BA%E7%A1%80%20-%20%E7%A4%BA%E4%BE%8B/"/>
    <id>http://example.com/01_%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/03_%E5%89%8D%E7%AB%AFhtml/02_html%E5%9F%BA%E7%A1%80%20-%20%E7%A4%BA%E4%BE%8B/</id>
    <published>2022-06-30T02:30:53.912Z</published>
    <updated>2022-06-30T02:55:54.186Z</updated>
    
    <content type="html"><![CDATA[<p>HTML+CSS+JS实现十款好看的登录注册界面，赶紧收藏起来吧！<br>需要的小伙伴关注评论区留言哦</p><p>界面一：</p><p><img src="/assets/2/image-20220630103223-xrfo3w0.png" alt="image.png"></p><p>代码如下：</p><pre><code> &lt;div class=&quot;demo form-bg&quot;&gt; &lt;div class=&quot;container&quot;&gt;       &lt;div class=&quot;row&quot;&gt;                 &lt;div class=&quot;col-md-offset-4 col-md-4 col-sm-offset-3 col-sm-6&quot;&gt;                     &lt;form class=&quot;form-horizontal&quot;&gt;                         &lt;div class=&quot;heading&quot;&gt;注册页面&lt;/div&gt;                         &lt;div class=&quot;form-group&quot;&gt;                             &lt;i class=&quot;fa fa-user&quot;&gt;&lt;/i&gt;&lt;input required name=&quot;login[username]&quot; type=&quot;email&quot; class=&quot;form-control&quot; placeholder=&quot;Username&quot; id=&quot;exampleInputEmail1&quot;&gt;                         &lt;/div&gt;                         &lt;div class=&quot;form-group&quot;&gt;                             &lt;i class=&quot;fa fa-lock&quot;&gt;&lt;/i&gt;&lt;input required name=&quot;login[password]&quot; type=&quot;password&quot; class=&quot;form-control&quot; placeholder=&quot;Password&quot; /&gt;                         &lt;/div&gt;                         &lt;div class=&quot;form-group&quot;&gt;                             &lt;button type=&quot;submit&quot; class=&quot;btn btn-default&quot;&gt;&lt;i class=&quot;fa fa-arrow-right&quot;&gt;&lt;/i&gt;&lt;/button&gt;                             &lt;span&gt;&lt;a href=&quot;&quot; class=&quot;create_account&quot;&gt;注册&lt;/a&gt;&lt;/span&gt;                         &lt;/div&gt;                     &lt;/form&gt;                 &lt;/div&gt;             &lt;/div&gt;         &lt;/div&gt;     &lt;/div&gt;</code></pre><p>界面二</p><p><img src="/assets/2/image-20220630103235-eymmqnm.png" alt="image.png"></p><p>部分代码如下：</p><pre><code> &lt;body&gt; &lt;!--User-Login--&gt; &lt;h1&gt;用户登录&lt;/h1&gt; &lt;div class=&quot;avtar&quot;&gt;     &lt;img src=&quot;images/avtar.png&quot; /&gt; &lt;/div&gt;     &lt;div class=&quot;login-form&quot;&gt;         &lt;p&gt;新用户?&lt;a href=&quot;#&quot;&gt;在这注册!&lt;/a&gt;&lt;/p&gt;             &lt;form&gt;                 &lt;div class=&quot;form-text&quot;&gt;                     &lt;input type=&quot;text&quot; class=&quot;text&quot; value=&quot;用户名&quot; οnfοcus=&quot;this.value = &#39;&#39;;&quot; οnblur=&quot;if (this.value == &#39;&#39;) &#123;this.value = &#39;USERNAME&#39;;&#125;&quot; &gt;                     &lt;input type=&quot;password&quot; value=&quot;密码&quot; οnfοcus=&quot;this.value = &#39;&#39;;&quot; οnblur=&quot;if (this.value == &#39;&#39;) &#123;this.value = &#39;Password&#39;;&#125;&quot;&gt;                 &lt;/div&gt;                     &lt;input type=&quot;submit&quot;value=&quot;GO&quot; &gt;             &lt;/form&gt;     &lt;/div&gt;</code></pre><p>界面三</p><p><img src="/assets/2/image-20220630103247-gbbympw.png" alt="image.png"></p><p>代码如下：</p><pre><code> &lt;body&gt; &lt;div id=&quot;window&quot; style=&quot;display:none;&quot;&gt;     &lt;div class=&quot;page page-front&quot;&gt;         &lt;div class=&quot;page-content&quot;&gt;             &lt;div class=&quot;input-row&quot;&gt;                 &lt;label class=&quot;label fadeIn&quot;&gt;用户名&lt;/label&gt;                 &lt;input id=&quot;username&quot; type=&quot;text&quot; data-fyll=&quot;pineapple&quot; class=&quot;input fadeIn delay1&quot;/&gt;             &lt;/div&gt;             &lt;div class=&quot;input-row&quot;&gt;                 &lt;label class=&quot;label fadeIn delay2&quot;&gt;密码&lt;/label&gt;                 &lt;input id=&quot;password&quot; type=&quot;password&quot; data-fyll=&quot;hackmeplease&quot; class=&quot;input fadeIn delay3&quot;/&gt;             &lt;/div&gt;             &lt;div class=&quot;input-row perspective&quot;&gt;                 &lt;button id=&quot;submit&quot; class=&quot;button load-btn fadeIn delay4&quot;&gt;                     &lt;span class=&quot;default&quot;&gt;&lt;i class=&quot;ion-arrow-right-b&quot;&gt;&lt;/i&gt;登录&lt;/span&gt;                     &lt;div class=&quot;load-state&quot;&gt;                         &lt;div class=&quot;ball&quot;&gt;&lt;/div&gt;                         &lt;div class=&quot;ball&quot;&gt;&lt;/div&gt;                         &lt;div class=&quot;ball&quot;&gt;&lt;/div&gt;                     &lt;/div&gt;                 &lt;/button&gt;             &lt;/div&gt;         &lt;/div&gt;     &lt;/div&gt;</code></pre><p>界面四</p><p><img src="/assets/2/image-20220630103259-ydihacb.png" alt="image.png"></p><p>部分代码如下：</p><pre><code> &lt;div class=&quot;main&quot;&gt;             &lt;div class=&quot;login&quot;&gt;                 &lt;div class=&quot;log-con&quot;&gt;                     &lt;span&gt;登录&lt;/span&gt;                     &lt;input type=&quot;text&quot; class=&quot;name&quot; placeholder=&quot;请输入用户名&quot;/&gt;                     &lt;input type=&quot;text&quot; class=&quot;password&quot; placeholder=&quot;请输入密码&quot;/&gt;                     &lt;input type=&quot;text&quot; class=&quot;code&quot; placeholder=&quot;请输入验证码&quot;/&gt;                     &lt;input type=&quot;button&quot; id=&quot;code&quot; οnclick=&quot;change();&quot;/&gt;                     &lt;a&gt;立即登录&lt;/a&gt;                 &lt;/div&gt;             &lt;/div&gt;         &lt;/div&gt;</code></pre><p>界面五</p><p><img src="/assets/2/image-20220630103308-th3xunj.png" alt="image.png"></p><p>部分代码如下：</p><pre><code> &lt;div class=&quot;limiter&quot;&gt;        &lt;div class=&quot;container-login100&quot;&gt;            &lt;div class=&quot;wrap-login100&quot;&gt;                &lt;div class=&quot;login100-form-title&quot; style=&quot;background-image: url(images/bg-01.jpg);&quot;&gt;                    &lt;span class=&quot;login100-form-title-1&quot;&gt;登 录&lt;/span&gt;                &lt;/div&gt;                &lt;form class=&quot;login100-form validate-form&quot;&gt;                    &lt;div class=&quot;wrap-input100 validate-input m-b-26&quot; data-validate=&quot;用户名不能为空&quot;&gt;                        &lt;span class=&quot;label-input100&quot;&gt;用户名&lt;/span&gt;                        &lt;input class=&quot;input100&quot; type=&quot;text&quot; name=&quot;username&quot; placeholder=&quot;请输入用户名&quot;&gt;                        &lt;span class=&quot;focus-input100&quot;&gt;&lt;/span&gt;                    &lt;/div&gt;                    &lt;div class=&quot;wrap-input100 validate-input m-b-18&quot; data-validate=&quot;密码不能为空&quot;&gt;                        &lt;span class=&quot;label-input100&quot;&gt;密码&lt;/span&gt;                        &lt;input class=&quot;input100&quot; type=&quot;password&quot; name=&quot;pass&quot; placeholder=&quot;请输入用户名&quot;&gt;                        &lt;span class=&quot;focus-input100&quot;&gt;&lt;/span&gt;                    &lt;/div&gt;                    &lt;div class=&quot;flex-sb-m w-full p-b-30&quot;&gt;                        &lt;div class=&quot;contact100-form-checkbox&quot;&gt;                            &lt;input class=&quot;input-checkbox100&quot; id=&quot;ckb1&quot; type=&quot;checkbox&quot; name=&quot;remember-me&quot;&gt;                            &lt;label class=&quot;label-checkbox100&quot; for=&quot;ckb1&quot;&gt;记住我&lt;/label&gt;                        &lt;/div&gt;                &lt;div&gt;                            &lt;a href=&quot;javascript:&quot; class=&quot;txt1&quot;&gt;忘记密码？&lt;/a&gt;                        &lt;/div&gt;                    &lt;/div&gt;                    &lt;div class=&quot;container-login100-form-btn&quot;&gt;                        &lt;button class=&quot;login100-form-btn&quot;&gt;登 录&lt;/button&gt;                    &lt;/div&gt;                &lt;/form&gt;            &lt;/div&gt;        &lt;/div&gt;    &lt;/div&gt;</code></pre><p>界面六</p><p><img src="/assets/2/image-20220630103323-c3gvdxh.png" alt="image.png"></p><p><img src="/assets/2/image-20220630103332-9bkvb73.png" alt="image.png"></p><pre><code>&lt;div class=&quot;container right-panel-active&quot;&gt;            &lt;!-- Sign Up --&gt;            &lt;div class=&quot;container__form container--signup&quot;&gt;                &lt;form action=&quot;#&quot; class=&quot;form&quot; id=&quot;form1&quot;&gt;                    &lt;h2 class=&quot;form__title&quot;&gt;注 册&lt;/h2&gt;                    &lt;input type=&quot;text&quot; placeholder=&quot;用户名&quot; class=&quot;input&quot; /&gt;                    &lt;input type=&quot;email&quot; placeholder=&quot;Email&quot; class=&quot;input&quot; /&gt;                    &lt;input type=&quot;password&quot; placeholder=&quot;密码&quot; class=&quot;input&quot; /&gt;                    &lt;button class=&quot;btn&quot;&gt;注 册&lt;/button&gt;                &lt;/form&gt;            &lt;/div&gt;            &lt;!-- Sign In --&gt;            &lt;div class=&quot;container__form container--signin&quot;&gt;                &lt;form action=&quot;#&quot; class=&quot;form&quot; id=&quot;form2&quot;&gt;                    &lt;h2 class=&quot;form__title&quot;&gt;登 录&lt;/h2&gt;                    &lt;input type=&quot;email&quot; placeholder=&quot;Email&quot; class=&quot;input&quot; /&gt;                    &lt;input type=&quot;password&quot; placeholder=&quot;密码&quot; class=&quot;input&quot; /&gt;                    &lt;a href=&quot;#&quot; class=&quot;link&quot;&gt;忘记密码?&lt;/a&gt;                    &lt;button class=&quot;btn&quot;&gt;注 册&lt;/button&gt;                &lt;/form&gt;            &lt;/div&gt;&lt;!-- Overlay --&gt;            &lt;div class=&quot;container__overlay&quot;&gt;                &lt;div class=&quot;overlay&quot;&gt;                    &lt;div class=&quot;overlay__panel overlay--left&quot;&gt;                        &lt;button class=&quot;btn&quot; id=&quot;signIn&quot;&gt;登 录&lt;/button&gt;                    &lt;/div&gt;                    &lt;div class=&quot;overlay__panel overlay--right&quot;&gt;                        &lt;button class=&quot;btn&quot; id=&quot;signUp&quot;&gt;注 册&lt;/button&gt;                    &lt;/div&gt;                &lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;</code></pre><blockquote></blockquote><p>界面七</p><p><img src="/assets/2/image-20220630103345-czoe6ri.png" alt="image.png"></p><pre><code>&lt;div class=&quot;dowebok&quot;&gt;        &lt;div class=&quot;logo&quot;&gt;&lt;/div&gt;        &lt;div class=&quot;form-item&quot;&gt;            &lt;input id=&quot;username&quot; type=&quot;text&quot; autocomplete=&quot;off&quot; placeholder=&quot;邮箱&quot;&gt;            &lt;p class=&quot;tip&quot;&gt;请输入合法的邮箱地址&lt;/p&gt;        &lt;/div&gt;        &lt;div class=&quot;form-item&quot;&gt;            &lt;input id=&quot;password&quot; type=&quot;password&quot; autocomplete=&quot;off&quot; placeholder=&quot;登录密码&quot;&gt;            &lt;p class=&quot;tip&quot;&gt;邮箱或密码不正确&lt;/p&gt;        &lt;/div&gt;        &lt;div class=&quot;form-item&quot;&gt;&lt;button id=&quot;submit&quot;&gt;登 录&lt;/button&gt;&lt;/div&gt;        &lt;div class=&quot;reg-bar&quot;&gt;            &lt;a class=&quot;reg&quot; href=&quot;#&quot; target=&quot;_blank&quot;&gt;立即注册&lt;/a&gt;            &lt;a class=&quot;forget&quot; href=&quot;#&quot; target=&quot;_blank&quot;&gt;忘记密码&lt;/a&gt;        &lt;/div&gt;&lt;/div&gt;</code></pre><p>界面八</p><p><img src="/assets/2/image-20220630103354-tb6guvg.png" alt="image.png"></p><pre><code>&lt;div class=&quot;dowebok&quot;&gt;    &lt;div class=&quot;container-login100&quot;&gt;        &lt;div class=&quot;wrap-login100&quot;&gt;            &lt;div class=&quot;login100-pic js-tilt&quot; data-tilt&gt;                &lt;img src=&quot;images/img-01.png&quot; alt=&quot;IMG&quot;&gt;            &lt;/div&gt;            &lt;form class=&quot;login100-form validate-form&quot;&gt;                &lt;span class=&quot;login100-form-title&quot;&gt;                    会员登陆                &lt;/span&gt;                &lt;div class=&quot;wrap-input100 validate-input&quot;&gt;                    &lt;input class=&quot;input100&quot; type=&quot;text&quot; name=&quot;email&quot; placeholder=&quot;邮箱&quot;&gt;                    &lt;span class=&quot;focus-input100&quot;&gt;&lt;/span&gt;                    &lt;span class=&quot;symbol-input100&quot;&gt;                        &lt;i class=&quot;fa fa-envelope&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;                    &lt;/span&gt;                &lt;/div&gt;&lt;div class=&quot;wrap-input100 validate-input&quot;&gt;                    &lt;input class=&quot;input100&quot; type=&quot;password&quot; name=&quot;pass&quot; placeholder=&quot;密码&quot;&gt;                    &lt;span class=&quot;focus-input100&quot;&gt;&lt;/span&gt;                    &lt;span class=&quot;symbol-input100&quot;&gt;                        &lt;i class=&quot;fa fa-lock&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;                    &lt;/span&gt;                &lt;/div&gt;                &lt;div class=&quot;container-login100-form-btn&quot;&gt;                    &lt;button class=&quot;login100-form-btn&quot;&gt;                        登陆                    &lt;/button&gt;                &lt;/div&gt;                &lt;div class=&quot;text-center p-t-12&quot;&gt;                    &lt;a class=&quot;txt2&quot; href=&quot;javascript:&quot;&gt;                        忘记密码？                    &lt;/a&gt;                &lt;/div&gt;&lt;div class=&quot;text-center p-t-136&quot;&gt;                    &lt;a class=&quot;txt2&quot; href=&quot;#&quot; &gt;                            还没有账号？立即注册                        &lt;i class=&quot;fa fa-long-arrow-right m-l-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;                    &lt;/a&gt;                &lt;/div&gt;            &lt;/form&gt;        &lt;/div&gt;    &lt;/div&gt;&lt;/div&gt;</code></pre><p>界面九</p><p><img src="/assets/2/image-20220630103406-9p5am9k.png" alt="image.png"></p><pre><code>&lt;div id=&quot;header&quot;&gt;    &lt;div class=&quot;header_title&quot;&gt;        &lt;span class=&quot;title_con&quot;&gt;学工系统&lt;/span&gt;    &lt;/div&gt;&lt;/div&gt;&lt;div id=&quot;content&quot;&gt;    &lt;center&gt;        &lt;div class=&quot;con&quot;&gt;        &lt;div class=&quot;con_title&quot;&gt;            &lt;span class=&quot;con_title_sp&quot;&gt;欢迎登录学工系统&lt;/span&gt;        &lt;/div&gt;        &lt;div class=&quot;con_panel&quot;&gt;            &lt;div class=&quot;con_input&quot;&gt;                &lt;span&gt;用户名：&lt;/span&gt;&lt;input type=&quot;text&quot; placeholder=&quot;学号/工号&quot;/&gt;            &lt;/div&gt;            &lt;div class=&quot;con_input&quot;&gt;                &lt;span&gt;密`&amp;nbsp;&amp;nbsp;``&amp;nbsp;&amp;nbsp;`码：&lt;/span&gt;&lt;input type=&quot;text&quot; placeholder=&quot;密码&quot;/&gt;            &lt;/div&gt;            &lt;div class=&quot;con_select&quot;&gt;                &lt;input type=&quot;radio&quot; name=&quot;t1&quot; value=&quot;学生&quot; /&gt;学生                &lt;input type=&quot;radio&quot; name=&quot;t1&quot; value=&quot;教师&quot; /&gt;教师                &lt;input type=&quot;radio&quot; name=&quot;t1&quot; value=&quot;管理员&quot; /&gt;管理员            &lt;/div&gt;            &lt;input type=&quot;submit&quot; value=&quot;登录&quot; class=&quot;submit-btn&quot;/&gt;        &lt;/div&gt;    &lt;/div&gt;    &lt;/center&gt;&lt;/div&gt;&lt;/body&gt;</code></pre><p>界面十</p><p><img src="/assets/2/image-20220630103417-q6ovkdp.png" alt="image.png"></p><pre><code>&lt;div class=&quot;main&quot;&gt;        &lt;div class=&quot;login-form&quot;&gt;            &lt;h2&gt;SignIn Form&lt;/h2&gt;            &lt;div class=&quot;agileits-top&quot;&gt;                &lt;form action=&quot;#&quot; method=&quot;post&quot;&gt;                    &lt;div class=&quot;styled-input&quot;&gt;                        &lt;input type=&quot;text&quot; name=&quot;User Name&quot; required=&quot;&quot;/&gt;                        &lt;label&gt;User Name&lt;/label&gt;                        &lt;span&gt;&lt;/span&gt;                    &lt;/div&gt;                    &lt;div class=&quot;styled-input&quot;&gt;                        &lt;input type=&quot;password&quot; name=&quot;Password&quot; required=&quot;&quot;&gt;                        &lt;label&gt;Password&lt;/label&gt;                        &lt;span&gt;&lt;/span&gt;                    &lt;/div&gt;                    &lt;div class=&quot;wthree-text&quot;&gt;                        &lt;ul&gt;                            &lt;li&gt;                                &lt;input type=&quot;checkbox&quot; id=&quot;brand&quot; value=&quot;&quot;&gt;                                &lt;label for=&quot;brand&quot;&gt;&lt;span&gt;&lt;/span&gt; Remember me ?&lt;/label&gt;&lt;br /&gt;&lt;/li&gt;                            &lt;li&gt; &lt;a href=&quot;#&quot;&gt;Forgot password?&lt;/a&gt; &lt;/li&gt;                        &lt;/ul&gt;                        &lt;div class=&quot;clear&quot;&gt; &lt;/div&gt;                    &lt;/div&gt;&lt;br /&gt;&lt;/form&gt;            &lt;/div&gt;            &lt;div class=&quot;agileits-bottom&quot;&gt;                &lt;form action=&quot;#&quot; method=&quot;post&quot;&gt;                    &lt;input type=&quot;submit&quot; value=&quot;Sign In&quot;&gt;                &lt;/form&gt;            &lt;/div&gt;        &lt;/div&gt;    &lt;/div&gt;&lt;br /&gt;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;HTML+CSS+JS实现十款好看的登录注册界面，赶紧收藏起来吧！&lt;br&gt;需要的小伙伴关注评论区留言哦&lt;/p&gt;
&lt;p&gt;界面一：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/2/image-20220630103223-xrfo3w0.png&quot; alt=&quot;image.p</summary>
      
    
    
    
    <category term="01_测试初阶" scheme="http://example.com/categories/01-%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/"/>
    
    <category term="03_前端html" scheme="http://example.com/categories/01-%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/03-%E5%89%8D%E7%AB%AFhtml/"/>
    
    
    <category term="html前端" scheme="http://example.com/tags/html%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>HTML5 简介</title>
    <link href="http://example.com/01_%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/03_%E5%89%8D%E7%AB%AFhtml/01_html%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/01_%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/03_%E5%89%8D%E7%AB%AFhtml/01_html%E5%9F%BA%E7%A1%80/</id>
    <published>2022-06-30T01:52:19.280Z</published>
    <updated>2022-06-30T02:20:04.589Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a></h2><h1 id="HTML5简介-amp-教程"><a href="#HTML5简介-amp-教程" class="headerlink" title="HTML5简介&amp;教程"></a><a href="https://www.runoob.com/html/html-tutorial.html">HTML5简介&amp;教程</a></h1><p><img src="https://www.runoob.com/wp-content/uploads/2013/07/pic_html5.gif" alt="HTML">HTML5是HTML最新的修订版本，2014年10月由万维网联盟（W3C）完成标准制定。</p><p>HTML5的设计目的是为了在移动设备上支持多媒体。</p><p>HTML5 简单易学。</p><hr><h2 id="什么是-HTML5"><a href="#什么是-HTML5" class="headerlink" title="什么是 HTML5?"></a>什么是 HTML5?</h2><p>HTML5 是下一代 HTML 标准。</p><p>HTML , HTML 4.01的上一个版本诞生于 1999 年。自从那以后，Web 世界已经经历了巨变。</p><p>HTML5 仍处于完善之中。然而，大部分现代浏览器已经具备了某些 HTML5 支持。</p><hr><h2 id="HTML5-是如何起步的？"><a href="#HTML5-是如何起步的？" class="headerlink" title="HTML5 是如何起步的？"></a>HTML5 是如何起步的？</h2><p>HTML5 是 W3C 与 WHATWG 合作的结果,WHATWG 指 Web Hypertext Application Technology Working Group。</p><p>WHATWG 致力于 web 表单和应用程序，而 W3C 专注于 XHTML 2.0。在 2006 年，双方决定进行合作，来创建一个新版本的 HTML。</p><p>HTML5 中的一些有趣的新特性：</p><ul><li>用于绘画的 canvas 元素</li><li>用于媒介回放的 video 和 audio 元素</li><li>对本地离线存储的更好的支持</li><li>新的特殊内容元素，比如 article、footer、header、nav、section</li><li>新的表单控件，比如 calendar、date、time、email、url、search</li></ul><hr><h2 id="HTML5-lt-DOCTYPE-gt"><a href="#HTML5-lt-DOCTYPE-gt" class="headerlink" title="HTML5 &lt;!DOCTYPE&gt;"></a>HTML5 &lt;!DOCTYPE&gt;</h2><!doctype><p> 声明必须位于 HTML5 文档中的第一行,使用非常简单:</p><p><strong>&lt;**!**DOCTYPE**html**&gt;</strong></p><hr><h2 id="最小的HTML5文档"><a href="#最小的HTML5文档" class="headerlink" title="最小的HTML5文档"></a>最小的HTML5文档</h2><p>下面是一个简单的HTML5文档：</p><p><strong>&lt;**!**DOCTYPE**html**&gt;</strong><br><strong>&lt;**html**&gt;</strong><br><strong>&lt;**head**&gt;</strong><br><strong>&lt;**meta**charset**&#x3D;**”**utf-8**”**&gt;</strong><br><strong>&lt;**title**&gt;<strong>文档标题</strong>&lt;&#x2F;**title**&gt;</strong><br><strong>&lt;&#x2F;**head**&gt;</strong></p><p><strong>&lt;**body**&gt;</strong><br>文档内容……<br><strong>&lt;&#x2F;**body**&gt;</strong></p><p>**&lt;&#x2F;**html**&gt;</p><blockquote><p><strong>注意：</strong> 对于中文网页需要使用 <strong><meta charset="utf-8"></strong> 声明编码，否则会出现乱码。</p></blockquote><hr><h2 id="HTML5-的改进"><a href="#HTML5-的改进" class="headerlink" title="HTML5 的改进"></a>HTML5 的改进</h2><ul><li>新元素</li><li>新属性</li><li>完全支持 CSS3</li><li>Video 和 Audio</li><li>2D&#x2F;3D 制图</li><li>本地存储</li><li>本地 SQL 数据</li><li>Web 应用</li></ul><hr><h2 id="HTML5-多媒体"><a href="#HTML5-多媒体" class="headerlink" title="HTML5 多媒体"></a>HTML5 多媒体</h2><p>使用 HTML5 你可以简单的在网页中播放 视频(video)与音频 (audio) 。</p><ul><li>HTML5 <a href="https://www.runoob.com/html/html5-video.html"><code>&amp;lt;&lt;</code>video<code>&amp;gt;&gt;</code></a></li><li>HTML5 <a href="https://www.runoob.com/html/html5-audio.html"><code>&amp;lt;&lt;</code>audio<code>&amp;gt;&gt;</code></a></li></ul><hr><h2 id="HTML5-应用"><a href="#HTML5-应用" class="headerlink" title="HTML5 应用"></a>HTML5 应用</h2><p>使用 HTML5 你可以简单地开发应用</p><ul><li>本地数据存储</li><li>访问本地文件</li><li>本地 SQL 数据</li><li>缓存引用</li><li>Javascript 工作者</li><li>XHTMLHttpRequest 2</li></ul><hr><h2 id="HTML5-图形"><a href="#HTML5-图形" class="headerlink" title="HTML5 图形"></a>HTML5 图形</h2><p>使用 HTML5 你可以简单的绘制图形:</p><ul><li>使用 <a href="https://www.runoob.com/html/html5-canvas.html"><code>&amp;lt;&lt;</code>canvas<code>&amp;gt;&gt;</code></a> 元素。</li><li>使用内联 <a href="https://www.runoob.com/html/html5-svg.html">SVG</a>。</li><li>使用 <a href="https://www.runoob.com/css3/css3-2dtransforms.html">CSS3 2D 转换</a>、<a href="https://www.runoob.com/css3/css3-3dtransforms.html">CSS3 3D 转换</a>。</li></ul><hr><h2 id="HTML5-使用-CSS3"><a href="#HTML5-使用-CSS3" class="headerlink" title="HTML5 使用 CSS3"></a>HTML5 使用 CSS3</h2><ul><li>新选择器</li><li>新属性</li><li>动画</li><li>2D&#x2F;3D 转换</li><li>圆角</li><li>阴影效果</li><li>可下载的字体</li></ul><p>了解更多CSS3知识请查看本站的 <a href="https://www.runoob.com/css3/css3-tutorial.html">CSS3 教程。</a></p><hr><h2 id="语义元素"><a href="#语义元素" class="headerlink" title="语义元素"></a>语义元素</h2><p>HTML5 添加了很多语义元素如下所示：</p><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td>&lt;article&gt;</td><td>定义页面独立的内容区域。</td></tr><tr><td>&lt;aside&gt;</td><td>定义页面的侧边栏内容。</td></tr><tr><td>&lt;bdi&gt;</td><td>允许您设置一段文本，使其脱离其父元素的文本方向设置。</td></tr><tr><td>&lt;command&gt;</td><td>定义命令按钮，比如单选按钮、复选框或按钮</td></tr><tr><td>&lt;details&gt;</td><td>用于描述文档或文档某个部分的细节</td></tr><tr><td>&lt;dialog&gt;</td><td>定义对话框，比如提示框</td></tr><tr><td>&lt;summary&gt;</td><td>标签包含 details 元素的标题</td></tr><tr><td>&lt;figure&gt;</td><td>规定独立的流内容（图像、图表、照片、代码等等）。</td></tr><tr><td>&lt;figcaption&gt;</td><td>定义 &lt;figure&gt; 元素的标题</td></tr><tr><td>&lt;footer&gt;</td><td>定义 section 或 document 的页脚。</td></tr><tr><td>&lt;header&gt;</td><td>定义了文档的头部区域</td></tr><tr><td>&lt;mark&gt;</td><td>定义带有记号的文本。</td></tr><tr><td>&lt;meter&gt;</td><td>定义度量衡。仅用于已知最大和最小值的度量。</td></tr><tr><td>&lt;nav&gt;</td><td>定义导航链接的部分。</td></tr><tr><td>&lt;progress&gt;</td><td>定义任何类型的任务的进度。</td></tr><tr><td>&lt;ruby&gt;</td><td>定义 ruby 注释（中文注音或字符）。</td></tr><tr><td>&lt;rt&gt;</td><td>定义字符（中文注音或字符）的解释或发音。</td></tr><tr><td>&lt;rp&gt;</td><td>在 ruby 注释中使用，定义不支持 ruby 元素的浏览器所显示的内容。</td></tr><tr><td>&lt;section&gt;</td><td>定义文档中的节（section、区段）。</td></tr><tr><td>&lt;time&gt;</td><td>定义日期或时间。</td></tr><tr><td>&lt;wbr&gt;</td><td>规定在文本中的何处适合添加换行符。</td></tr></tbody></table><h2 id="HTML5-表单"><a href="#HTML5-表单" class="headerlink" title="HTML5 表单"></a>HTML5 表单</h2><p>新表单元素, 新属性，新输入类型，自动验证。</p><hr><h2 id="已移除元素"><a href="#已移除元素" class="headerlink" title="已移除元素"></a>已移除元素</h2><p>以下的 HTML 4.01 元素在HTML5中已经被删除:</p><ul><li>&lt;acronym&gt;</li><li>&lt;applet&gt;</li><li>&lt;basefont&gt;</li><li>&lt;big&gt;</li><li>&lt;center&gt;</li><li>&lt;dir&gt;</li><li>&lt;font&gt;</li><li>&lt;frame&gt;</li><li>&lt;frameset&gt;</li><li>&lt;noframes&gt;</li><li>&lt;strike&gt;</li></ul><hr><h2 id="每一章中的实例"><a href="#每一章中的实例" class="headerlink" title="每一章中的实例"></a>每一章中的实例</h2><p>通过我们的 HTML 编辑器，您能够编辑 HTML，然后点击按钮来查看结果。</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt; &lt;/head&gt;&lt;body&gt; &lt;video width=&quot;320&quot; height=&quot;240&quot; controls&gt;  &lt;source src=&quot;movie.mp4&quot; type=&quot;video/mp4&quot;&gt;  &lt;source src=&quot;movie.ogg&quot; type=&quot;video/ogg&quot;&gt;  你的浏览器不支持 video 标签。&lt;/video&gt; &lt;/body&gt;&lt;/html&gt;</code></pre><p><a href="https://www.runoob.com/try/try.php?filename=tryhtml5_video_bear">尝试一下 »</a></p><p><strong>点击 “尝试一下” 按钮查看在线运行结果。</strong></p><hr><h2 id="HTML5-浏览器支持"><a href="#HTML5-浏览器支持" class="headerlink" title="HTML5 浏览器支持"></a>HTML5 浏览器支持</h2><p>最新版本的 Safari、Chrome、Firefox 以及 Opera 支持某些 HTML5 特性。Internet Explorer 9 将支持某些 HTML5 特性。</p><p><img src="https://www.runoob.com/wp-content/uploads/2013/07/browsers_say.png"></p><p>IE9 以下版本浏览器兼容HTML5的方法，使用本站的静态资源的html5shiv包：</p><pre><code>&lt;!--[if lt IE 9]&gt;    &lt;script src=&quot;http://cdn.static.runoob.com/libs/html5shiv/3.7/html5shiv.min.js&quot;&gt;&lt;/script&gt;&lt;![endif]--&gt;</code></pre><p>载入后，初始化新标签的CSS：</p><pre><code>/*html5*/article,aside,dialog,footer,header,section,nav,figure,menu&#123;display:block&#125;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h1 id=&quot;HTML5简介-amp-教程&quot;&gt;&lt;a href=&quot;#HTML5简介-amp-教程&quot; class=&quot;headerlink&quot; title=&quot;HTML5</summary>
      
    
    
    
    <category term="01_测试初阶" scheme="http://example.com/categories/01-%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/"/>
    
    <category term="03_前端html" scheme="http://example.com/categories/01-%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/03-%E5%89%8D%E7%AB%AFhtml/"/>
    
    
    <category term="html前端" scheme="http://example.com/tags/html%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>python爬取抖音app</title>
    <link href="http://example.com/05_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06_%E8%87%AA%E5%8A%A8%E5%8C%96/02_%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/03_APP%E8%87%AA%E5%8A%A8%E5%8C%96/01_appium/02_2/"/>
    <id>http://example.com/05_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06_%E8%87%AA%E5%8A%A8%E5%8C%96/02_%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/03_APP%E8%87%AA%E5%8A%A8%E5%8C%96/01_appium/02_2/</id>
    <published>2022-06-06T17:12:20.963Z</published>
    <updated>2022-06-06T17:44:08.305Z</updated>
    
    <content type="html"><![CDATA[<ol><li>准备<br> 安装夜神模拟器<br> 安装Xposed<a href="assets/3/android.xposed.installer.apk">xposed.installer</a><br> <a href="https://blog.csdn.net/weixin_48140105/article/details/118359568">因Xposed服务不能访问，本地方法：</a><br> 安装包：<a href="assets/3/xposed-v89-sdk22-x86.zip">xposed-v89-sdk22-x86</a><br> <a href="assets/3/JustTrustMe.apk">JustTrustMe</a><br> 安装mitmproxy： pip install mitmproxy<br> 查看mitmproxy是否安装的命令：mitmdimp –version<br> 安装 mongdb数据库<br> <a href="https://fastdl.mongodb.org/windows/mongodb-windows-x86_64-5.0.9.zip">官网下载地址（zip）</a><br> <a href="https://fastdl.mongodb.org/windows/mongodb-windows-x86_64-5.0.9-signed.msi">官网下载地址（msi）</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;准备&lt;br&gt; 安装夜神模拟器&lt;br&gt; 安装Xposed&lt;a href=&quot;assets/3/android.xposed.installer.apk&quot;&gt;xposed.installer&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://blog.csdn.net/</summary>
      
    
    
    
    <category term="05_测试工具" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="06_自动化" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="02_自动化实操" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/"/>
    
    <category term="03_APP自动化" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/03-APP%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="01_appium" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/03-APP%E8%87%AA%E5%8A%A8%E5%8C%96/01-appium/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>4位验证码识别</title>
    <link href="http://example.com/05_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06_%E8%87%AA%E5%8A%A8%E5%8C%96/02_%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01_UI%E8%87%AA%E5%8A%A8%E5%8C%96/python%E6%8F%92%E4%BB%B6/4%E4%BD%8D%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB/"/>
    <id>http://example.com/05_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06_%E8%87%AA%E5%8A%A8%E5%8C%96/02_%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01_UI%E8%87%AA%E5%8A%A8%E5%8C%96/python%E6%8F%92%E4%BB%B6/4%E4%BD%8D%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB/</id>
    <published>2022-06-02T16:37:50.709Z</published>
    <updated>2022-06-02T16:39:37.515Z</updated>
    
    <content type="html"><![CDATA[<pre><code>#!/usr/bin/evn python# -*- coding: utf-8 -*-# @Time          ： 2022/05/30 21:21# @Author        ： YuLong# @site          ： # @file          ： server.py# @explanation   ： ddddocr 验证码验证模型# @software      : PyCharm Community Editionimport osimport ddddocrfrom time import sleepfrom PIL import Imagefrom selenium import webdriverfrom selenium.webdriver.common.by import Byclass GetVerificationCode:    def __init__(self):        self.res = None        # 德尚商城登录页面        url = &#39;https://dsshop.csdeshang.com/home/Login/login.html&#39;        self.driver = webdriver.Chrome()        self.driver.maximize_window()  # 将浏览器最大化        self.driver.get(url)    # 获取验证码信息    def getVerification(self):        # 获取当前文件的位置、并获取保存截屏的位置        current_location = os.path.dirname(__file__)        screenshot_path = os.path.join(current_location, &quot;&quot;, &quot;VerificationCode&quot;)        # 截取当前网页并放到自定义目录下，并命名为printscreen，该截图中有我们需要的验证码        sleep(1)        self.driver.save_screenshot(screenshot_path + &#39;/&#39; + &#39;printscreen.png&#39;)        sleep(1)        # 定位验证码        imgelement = self.driver.find_element(By.XPATH, &#39;//*[@id=&quot;codeimage&quot;]&#39;)        # 获取验证码x,y轴坐标        location = imgelement.location        # 获取验证码的长宽        size = imgelement.size        # 写成我们需要截取的位置坐标        rangle = (int(location[&#39;x&#39;] +257),                  int(location[&#39;y&#39;]+125 ),                  int(location[&#39;x&#39;] + size[&#39;width&#39;]+ 300 ),                  int(location[&#39;y&#39;] + size[&#39;height&#39;]+140 ))        # 打开截图        i = Image.open(screenshot_path + &#39;/&#39; + &#39;printscreen.png&#39;)        # 使用Image的crop函数，从截图中再次截取我们需要的区域        fimg = i.crop(rangle)        fimg = fimg.convert(&#39;RGB&#39;)        # 保存我们截下来的验证码图片，并读取验证码内容        fimg.save(screenshot_path + &#39;/&#39; + &#39;code.png&#39;)        ocr = ddddocr.DdddOcr()        with open(screenshot_path + &#39;/&#39; + &#39;code.png&#39;, &#39;rb&#39;) as f:            img_bytes = f.read()        self.res = ocr.classification(img_bytes)        print(&#39;识别出的验证码为：&#39; + self.res)        # 判断验证码错误时的提示信息是否存在    def isElementPresent(self, by, value):        try:            element = self.driver.find_element(by=by, value=value)        except NoSuchElementException:            pass            # 发生了NoSuchElementException异常，说明页面中未找到该元素，返回False            return False        else:            # 没有发生异常，表示在页面中找到了该元素，返回True            return True    # 登录    def login(self):        self.getVerification()        self.driver.find_element(By.XPATH, &#39;//*[@id=&quot;member_name&quot;]&#39;).send_keys(&#39;用户名&#39;)        self.driver.find_element(By.XPATH, &#39;//*[@id=&quot;member_password&quot;]&#39;).send_keys(&#39;密码&#39;)        self.driver.find_element(By.XPATH, &#39;//*[@id=&quot;captcha_normal&quot;]&#39;).send_keys(self.res)        sleep(1)        self.driver.find_element(By.XPATH, &#39;//*[@id=&quot;login_normal_form&quot;]/div[5]/input[2]&#39;).click()        sleep(2)        isFlag = True        while isFlag:            try:                isPresent = self.isElementPresent(By.XPATH, &#39;//*[@id=&quot;captcha_normal-error&quot;]&#39;)                if isPresent is True:                    codeText = self.driver.find_element(By.XPATH, &#39;//*[@id=&quot;captcha_normal-error&quot;]&#39;).text                    if codeText == &quot;验证码不正确&quot;:                        self.getVerification()                        sleep(2)                        self.driver.find_element(By.XPATH, &#39;//*[@id=&quot;captcha_normal&#39;).clear()                        sleep(1)                        self.driver.find_element(By.XPATH, &#39;//*[@id=&quot;captcha_normal&#39;).send_keys(self.res)                        sleep(1)                        self.driver.find_element(By.XPATH, &#39;//*[@id=&quot;login_normal_form&quot;]/div[5]/input[2]&#39;).click()                        sleep(2)                    tips = self.driver.find_element(By.XPATH,&#39;//*[@id=&quot;captcha_normal-error&quot;]&#39;).text                    if tips == &quot;验证码不能为空&quot;:                        self.getVerification()                        sleep(2)                        self.driver.find_element(By.XPATH, &#39;//*[@id=&quot;captcha_normal&quot;]&#39;).click()                        sleep(1)                        self.driver.find_element(By.XPATH, &#39;//*[@id=&quot;captcha_normal&quot;]&#39;).send_keys(self.res)                        sleep(1)                        self.driver.find_element(By.XPATH, &#39;//*[@id=&quot;login_normal_form&quot;]/div[5]/input[2]&#39;).click()                        sleep(2)                    continue                else:                    print(&quot;验证码正确，登录成功！&quot;)            except NoSuchElementException:                pass            else:                isFlag = False            sleep(5)            self.driver.quit()if __name__ == &#39;__main__&#39;:    GetVerificationCode().login()&#39;&#39;&#39;ERROR: pip&#39;s dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.paddlepaddle 2.2.2 requires numpy&lt;=1.19.3,&gt;=1.13; python_version &gt;= &quot;3.5&quot; and platform_system == &quot;Windows&quot;, but you have numpy 1.21.6 which is incompatible.错误：pip 的依赖解析器当前不考虑所有已安装的包。此行为是以下依赖冲突的根源。 paddlepaddle 2.2.2 需要 numpy&lt;=1.19.3,&gt;=1.13; python_version &gt;= &quot;3.5&quot; 和 platform_system == &quot;Windows&quot;，但是你有不兼容的 numpy 1.21.6。ERROR: pip&#39;s dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.onnxruntime 1.11.1 requires numpy&gt;=1.21.6, but you have numpy 1.19.3 which is incompatible.错误：pip 的依赖解析器当前不考虑所有已安装的包。此行为是以下依赖冲突的根源。 onnxruntime 1.11.1 需要 numpy&gt;=1.21.6，但你有 numpy 1.19.3，这是不兼容的。&#39;&#39;&#39;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre&gt;&lt;code&gt;#!/usr/bin/evn python
# -*- coding: utf-8 -*-
# @Time          ： 2022/05/30 21:21
# @Author        ： YuLong
# @site          ： 
#</summary>
      
    
    
    
    <category term="05_测试工具" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="06_自动化" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="02_自动化实操" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/"/>
    
    <category term="01_UI自动化" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01-UI%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="python插件" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01-UI%E8%87%AA%E5%8A%A8%E5%8C%96/python%E6%8F%92%E4%BB%B6/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>pytesseract安装使用</title>
    <link href="http://example.com/05_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06_%E8%87%AA%E5%8A%A8%E5%8C%96/02_%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01_UI%E8%87%AA%E5%8A%A8%E5%8C%96/python%E6%8F%92%E4%BB%B6/pytesseract%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/05_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06_%E8%87%AA%E5%8A%A8%E5%8C%96/02_%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01_UI%E8%87%AA%E5%8A%A8%E5%8C%96/python%E6%8F%92%E4%BB%B6/pytesseract%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</id>
    <published>2022-05-30T12:30:31.411Z</published>
    <updated>2022-05-30T12:41:58.176Z</updated>
    
    <content type="html"><![CDATA[<ol><li>安装配置和测试<br> pytesseract是google的tesseract的一个python版本的接口库，想要真正使用，首先需要安装tesseract</li></ol><p>1.1 tesseract安装<br>下载安装tesseract，去这个网址下载：<a href="https://digi.bib.uni-mannheim.de/tesseract/%E3%80%82%EF%BC%88%E6%88%96%E8%80%85%E5%9C%A8github%E7%9A%84wiki%E9%A1%B5%E9%9D%A2%E4%B8%8A%E4%B9%9F%E5%8F%AF%E4%BB%A5%E6%89%BE%E5%88%B0%E8%BF%99%E4%B8%AA%E9%A1%B5%E9%9D%A2%E8%BF%9B%E8%A1%8C%E4%B8%8B%E8%BD%BD%EF%BC%89%EF%BC%8C%E6%A0%B9%E6%8D%AETesseract">https://digi.bib.uni-mannheim.de/tesseract/。（或者在github的wiki页面上也可以找到这个页面进行下载），根据Tesseract</a> document可知，Tesseract4.0及以上配备了LSTM网络，之前的低版本是没有的，所以按照自己需求去找相应的版本。<br>双击安装，记得勾选中文包（这个下载比较慢）</p><p><img src="/assets/2/image-20220530203405-z3znqfw.png" alt="image.png"></p><p>配置系统环境变量，只要配置到tesseract.exe所在的文件夹那一级就行</p><p><img src="/assets/2/image-20220530203414-zej2ozj.png" alt="image.png"></p><p>测试是否安装成功，在命令行输入tesseract –help查看是否会返回一些提示信息。</p><p><img src="/assets/2/image-20220530203421-i5eoze7.png" alt="image.png"></p><p>或者可以直接测试一张含有文字的图片，看看效果，tesseract image.png result</p><pre><code>tesseract 9450.jpg resultTesseract Open Source OCR Engine v5.0.0.20190623 with LeptonicaWarning: Invalid resolution 0 dpi. Using 70 instead. Estimating resolution as 319#     然后会在当前命令路径下看到一个result.txt，其中存放在识别结果</code></pre><p>1.2 pytessract安装<br>上面那个搞好了，这个就很好搞，直接</p><pre><code>pip install pytesseract #     或者通过conda安装conda  install -c conda-forge pytesseract</code></pre><ol start="2"><li>简单使用和参数说明</li></ol><p>2.1 无法调用<br>如果报错：</p><pre><code>XXXXFileNotFoundError: [WinError 2] 系统找不到指定的文件。XXXXpytesseract.pytesseract.TesseractNotFoundError: tesseract is not installed or it&#39;s not in your path</code></pre><p>有两种解决方案，</p><p>一种是在pytessercat.py脚本中更改tesseract_cmd路径为tesseract安装路径，要具体到tesseract.exe文件，但是不用写.exe这个后缀</p><p><img src="/assets/2/image-20220530203835-c39zwl4.png" alt="image.png"></p><p>另一种就是每次在代码中加入以下代码，指明tesseract_cmd命令的位置，方便pytesseract调用：</p><pre><code>tesseract_cmd = r&#39;C:\Program Files (x86)\Tesseract-OCR\tesseract&#39;pytesseract.pytesseract.tesseract_cmd =tesseract_cmd</code></pre><p>2.2 基本用法<br>以下代码粘贴自jupyter notebook文件，</p><pre><code>from PIL import Imageimport pytesseractimport matplotlib.pyplot as plt&lt;br /&gt;%matplotlib inlinepath=&quot;9450.jpg&quot;&quot;&quot;&quot;指明tesseract命令位置&quot;&quot;&quot;tesseract_cmd = r&#39;C:\Program Files (x86)\Tesseract-OCR\tesseract&#39;pytesseract.pytesseract.tesseract_cmd =tesseract_cmd&quot;&quot;&quot; 基础的图片转换为文字&quot;&quot;&quot;# 显示image=Image.open(path)plt.figure(figsize=(2,2))plt.axis(&#39;off&#39;)plt.imshow(image)print(pytesseract.image_to_string(image))&quot;&quot;&quot;当前支持的语言 osd On Screen Display 屏幕显示字符&quot;&quot;&quot;print(pytesseract.get_languages(config=&#39;&#39;))&quot;&quot;&quot;尝试修改语言参数&quot;&quot;&quot;print(pytesseract.image_to_string(image, lang=&#39;osd&#39;))&quot;&quot;&quot;🐱👓识别超时就停止&quot;&quot;&quot;try:    print(pytesseract.image_to_string(image, timeout=2)) # Timeout after 2 seconds    print(pytesseract.image_to_string(image, timeout=0.5)) # Timeout after half a secondexcept RuntimeError as timeout_error:    # Tesseract processing is terminated    pass&quot;&quot;&quot;将识别结果导出成文字可选的pdf这个达成的效果，就是会把图片转成pdf，同时其中的文字会是可编辑/可选的&quot;&quot;&quot;pdf = pytesseract.image_to_pdf_or_hocr(Image.open(&quot;1.png&quot;), extension=&#39;pdf&#39;)with open(&#39;test.pdf&#39;, &#39;w+b&#39;) as f:    f.write(pdf) # pdf type is bytes by default&quot;&quot;&quot;修改参数&quot;&quot;&quot;configdigit=&#39;--psm 6 --oem 1&#39;print(pytesseract.image_to_string(img_cv,config=configdigit))configdigit=&#39;--psm 6 --oem 3  -c tessedit_char_whitelist=0123456789&#39;print(pytesseract.image_to_string(img_cv,config=configdigit))&quot;&quot;&quot;关于其中的psm参数和oem参数，可以查看帮助文档&quot;&quot;&quot;! tesseract --help-extraPage segmentation modes:0    Orientation and script detection (OSD) only.1    Automatic page segmentation with OSD.2    Automatic page segmentation, but no OSD, or OCR. (not implemented)3    Fully automatic page segmentation, but no OSD. (Default)4    Assume a single column of text of variable sizes.5    Assume a single uniform block of vertically aligned text.6    Assume a single uniform block of text.7    Treat the image as a single text line.8    Treat the image as a single word.9    Treat the image as a single word in a circle.10    Treat the image as a single character.11    Sparse text. Find as much text as possible in no particular order.12    Sparse text with OSD.13    Raw line. Treat the image as a single text line,    bypassing hacks that are Tesseract-specific.OCR Engine modes:0    Legacy engine only.1    Neural nets LSTM engine only.2    Legacy + LSTM engines.3    Default, based on what is available.</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;安装配置和测试&lt;br&gt; pytesseract是google的tesseract的一个python版本的接口库，想要真正使用，首先需要安装tesseract&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;1.1 tesseract安装&lt;br&gt;下载安装tesseract，去这个网址</summary>
      
    
    
    
    <category term="05_测试工具" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="06_自动化" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="02_自动化实操" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/"/>
    
    <category term="01_UI自动化" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01-UI%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="python插件" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01-UI%E8%87%AA%E5%8A%A8%E5%8C%96/python%E6%8F%92%E4%BB%B6/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>scrapy_gerapy爬虫管理框架</title>
    <link href="http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/05_scrapy_gerapy%E7%88%AC%E8%99%AB%E7%AE%A1%E7%90%86%E6%A1%86%E6%9E%B6/"/>
    <id>http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/05_scrapy_gerapy%E7%88%AC%E8%99%AB%E7%AE%A1%E7%90%86%E6%A1%86%E6%9E%B6/</id>
    <published>2022-05-23T06:57:07.077Z</published>
    <updated>2022-05-27T07:09:56.753Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-gerapy介绍"><a href="#1-gerapy介绍" class="headerlink" title="1. gerapy介绍"></a>1. gerapy介绍</h2><p>gerapy 是一款分布式爬虫管理框架，支持Python3，基于scrapy、scrapyd<br>scrapyd-client、scrapy-redis、scrapyd-api、scrapy-splash、jinjia2、django、vue.js开发、gerapy可以帮助我们：<br>    1. 更方便的控制爬虫运行<br>    2. 更直观的查看爬虫状态<br>    3. 更实时的查看爬去结果<br>    4. 更简单的实现项目部署<br>    5. 更统一地实现主机管理</p><h2 id="2-gerapy的安装"><a href="#2-gerapy的安装" class="headerlink" title="2. gerapy的安装"></a>2. gerapy的安装</h2><pre><code>1. 执行如下命令，等待安装完毕    pip install gerapy2. 验证gerapy是否安装成功    在终端中执行gerapy 会出现如下信息    ![wer](2232)3. gerapy 配置启动    1. 新建一个项目        gerapy init        执行完该命令之后在当前目录下生成一个gerapy文件夹，进入该文件夹，会找到一个名为projects 的文件    2. 对数据库进行初始化（在gerapy目录中操作），执行如下命令        gerapy migrate        ![image.png](assets/2/image-20220527144809-zun804x.png)        对数据库初始化之后会生成一个SQLite数据库，数据库保存主机配置和部署版本等        ![image.png](assets/2/image-20220527144834-crdotse.png)    3. 启动gerapy服务        此时启动gerapy服务的这台机器的8000端口上开启了gerapy服务，在浏览器中输入http://localhost:8000就能进入gerapy管理界面，在管理界面就可以进行主机管理和界面管理        ![image.png](assets/2/image-20220527145151-fkkxt6b.png)    4. 通过gerapy配置管理scrapy项目    5. 配置project        1. 我们可以将scrapy项目直接放到/gerapy/projects下        2. 可以在gerapy后台看到有个项目        ![image.png](assets/2/image-20220527145500-k99cqu4.png)        3. 点击部署点击部署按钮进行打包和部署，在右下角我么可以输入打包时的描述信息，类似于git的commit信息，        ![image.png](assets/2/image-20220527145743-ls1oklb.png)        然后点击打包按钮，即可发现gerapy会提示打包成功，同时在右侧显示打包的结果和打包名称        ![image.png](assets/2/image-20220527145820-tdw8if1.png)        4. 选择一个站点，点击右侧部署，将该项目部署到该站点上        ![image.png](assets/2/image-20220527150104-my849n7.png)        5. 成功部署之后会显示描述和部署时间        ![image.png](assets/2/image-20220527150307-9u2rn2l.png)        6. 来到client界面，找到部署该项目的节点，点击调度        ![image.png](assets/2/image-20220527150412-68g8gf6.png)        7. 在该节点中的项目列表中找到项目，点击右侧run运行项目        ![image.png](assets/2/image-20220527150528-q4ueh1u.png)    6. 补充        1.gerapy 与scrad有什么联系            我们仅仅使用scrapyd 是可以调用scrapy进行爬虫，只是需要使用命令进行开启爬虫 curl http://127.0.0.1:6800/schedule.json -d project=工程名 -d spider=爬虫名 使用gerapy就是将使用命令进行开启爬虫变成“小手一点”，我们在gerapy中配置scrad后，不需要使用命令行，可以通过图形化界面直接开启爬虫</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-gerapy介绍&quot;&gt;&lt;a href=&quot;#1-gerapy介绍&quot; class=&quot;headerlink&quot; title=&quot;1. gerapy介绍&quot;&gt;&lt;/a&gt;1. gerapy介绍&lt;/h2&gt;&lt;p&gt;gerapy 是一款分布式爬虫管理框架，支持Python3，基于scra</summary>
      
    
    
    
    <category term="03_测试高阶" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
    <category term="01_爬虫技术" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/"/>
    
    <category term="scrapy框架" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/"/>
    
    <category term="学习笔记" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="测试高阶" scheme="http://example.com/tags/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>scrapy_scrapyd部署</title>
    <link href="http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/04_scrapy_scrapyd%E9%83%A8%E7%BD%B2/"/>
    <id>http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/04_scrapy_scrapyd%E9%83%A8%E7%BD%B2/</id>
    <published>2022-05-23T06:57:06.809Z</published>
    <updated>2022-05-27T06:32:45.789Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-scrapyd的介绍"><a href="#1-scrapyd的介绍" class="headerlink" title="1. scrapyd的介绍"></a>1. scrapyd的介绍</h3><p>scrapyd是一个用于部署和运行scrapy爬虫的程序，它允许你通过json api 来部署爬虫项目和控制爬虫运行，scrapyd 是一个守护进程，监听爬虫的运行和请求，然后启动进程来执行他们</p><blockquote><p>所谓json api本质就是post请求的webapi</p></blockquote><h3 id="2-scrapyd的安装"><a href="#2-scrapyd的安装" class="headerlink" title="2. scrapyd的安装"></a>2. scrapyd的安装</h3><p>scrapyd 服务 ： pip install scrapyd<br>scrapyd 客户端： pip install scrapyd-client</p><h3 id="3-启动scrapyd服务"><a href="#3-启动scrapyd服务" class="headerlink" title="3. 启动scrapyd服务"></a>3. 启动scrapyd服务</h3><ol><li>在scrapy项目路径下 启动scrapyd 的命令： sudo scrapyd 或scrapyd</li><li>启动之后可以在本地打开运行的scrapyd，浏览器中访问本地6800端口可以查看scrapyd 的监控界面</li><li><img src="/111" alt="为配图，待截图"></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-scrapyd的介绍&quot;&gt;&lt;a href=&quot;#1-scrapyd的介绍&quot; class=&quot;headerlink&quot; title=&quot;1. scrapyd的介绍&quot;&gt;&lt;/a&gt;1. scrapyd的介绍&lt;/h3&gt;&lt;p&gt;scrapyd是一个用于部署和运行scrapy爬虫的程序</summary>
      
    
    
    
    <category term="03_测试高阶" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
    <category term="01_爬虫技术" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/"/>
    
    <category term="scrapy框架" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/"/>
    
    <category term="学习笔记" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="测试高阶" scheme="http://example.com/tags/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>03_scrapy_splash框架问题分析</title>
    <link href="http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03_scrapy_splash%E6%A1%86%E6%9E%B6%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90/"/>
    <id>http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03_scrapy_splash%E6%A1%86%E6%9E%B6%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90/</id>
    <published>2022-05-23T06:57:06.429Z</published>
    <updated>2022-05-28T10:10:32.961Z</updated>
    
    <content type="html"><![CDATA[<h2 id="启动splash服务"><a href="#启动splash服务" class="headerlink" title="启动splash服务"></a>启动splash服务</h2><h2 id="1-sittings-py-文件配置："><a href="#1-sittings-py-文件配置：" class="headerlink" title="1. sittings.py 文件配置："></a>1. sittings.py 文件配置：</h2><h5 id="1-修改settings-py，配置SPLASH-URL。在这里我们的Splash是在本地运行的，所以可以直接配置本地的地址："><a href="#1-修改settings-py，配置SPLASH-URL。在这里我们的Splash是在本地运行的，所以可以直接配置本地的地址：" class="headerlink" title="1. 修改settings.py，配置SPLASH_URL。在这里我们的Splash是在本地运行的，所以可以直接配置本地的地址："></a>1. 修改settings.py，配置SPLASH_URL。在这里我们的Splash是在本地运行的，所以可以直接配置本地的地址：</h5><pre><code>SPLASH_URL = &#39;http://localhost:8050&#39;</code></pre><h5 id="如果Splash是在远程服务器运行的，那此处就应该配置为远程的地址。例如运行在IP为120-27-34-25的服务器上，则此处应该配置为："><a href="#如果Splash是在远程服务器运行的，那此处就应该配置为远程的地址。例如运行在IP为120-27-34-25的服务器上，则此处应该配置为：" class="headerlink" title="如果Splash是在远程服务器运行的，那此处就应该配置为远程的地址。例如运行在IP为120.27.34.25的服务器上，则此处应该配置为："></a>如果Splash是在远程服务器运行的，那此处就应该配置为远程的地址。例如运行在IP为120.27.34.25的服务器上，则此处应该配置为：</h5><pre><code>SPLASH_URL = &#39;http://120.27.34.25:8050&#39;</code></pre><h5 id="2-还需要配置几个Middleware，代码如下所示："><a href="#2-还需要配置几个Middleware，代码如下所示：" class="headerlink" title="2. 还需要配置几个Middleware，代码如下所示："></a>2. 还需要配置几个Middleware，代码如下所示：</h5><pre><code>DOWNLOADER_MIDDLEWARES = &#123;   &#39;scrapy_splash.SplashCookiesMiddleware&#39;: 723,   &#39;scrapy_splash.SplashMiddleware&#39;: 725,   &#39;scrapy.downloadermiddlewares.httpcompression.HttpCompressionMiddleware&#39;: 810,&#125;SPIDER_MIDDLEWARES = &#123;   &#39;scrapy_splash.SplashDeduplicateArgsMiddleware&#39;: 100,&#125;</code></pre><p>这里配置了三个Downloader Middleware和一个Spider Middleware，这是Scrapy-Splash的核心部分。我们不再需要像对接Selenium那样实现一个Downloader Middleware，Scrapy-Splash库都为我们准备好了，直接配置即可。</p><h5 id="3-还需要配置一个去重的类DUPEFILTER-CLASS，代码如下所示："><a href="#3-还需要配置一个去重的类DUPEFILTER-CLASS，代码如下所示：" class="headerlink" title="3. 还需要配置一个去重的类DUPEFILTER_CLASS，代码如下所示："></a>3. 还需要配置一个去重的类DUPEFILTER_CLASS，代码如下所示：</h5><pre><code>DUPEFILTER_CLASS = &#39;scrapy_splash.SplashAwareDupeFilter&#39;1</code></pre><h5 id="4-最后配置一个Cache存储HTTPCACHE-STORAGE，代码如下所示："><a href="#4-最后配置一个Cache存储HTTPCACHE-STORAGE，代码如下所示：" class="headerlink" title="4. 最后配置一个Cache存储HTTPCACHE_STORAGE，代码如下所示："></a>4. 最后配置一个Cache存储HTTPCACHE_STORAGE，代码如下所示：</h5><pre><code>HTTPCACHE_STORAGE = &#39;scrapy_splash.SplashAwareFSCacheStorage&#39;</code></pre><h2 id="2-使用过程中遇到的问题分析"><a href="#2-使用过程中遇到的问题分析" class="headerlink" title="2. 使用过程中遇到的问题分析"></a>2. 使用过程中遇到的问题分析</h2><h3 id="1-错误演示-如图"><a href="#1-错误演示-如图" class="headerlink" title="1. 错误演示  如图"></a>1. 错误演示  如图</h3><p>spider文件编写代码错误</p><pre><code>    def start_requests(self):         yield SplashRequest(             url=self.start_urls[0],       # 这是一个错误的演示， 必须使用for循环取值，不能使用下标获取值，使用下标的话 会报 404的错误，找不到原因             callback=self.parse,             args=&#123;&quot;wait&quot;:10&#125;, # 最大超时时间，单位：s             endpoint=&quot;reader.html&quot;         )</code></pre><p><img src="/assets/2/image-20220526211507-asoegu2.png" alt="image.png"></p><h4 id="正确演示："><a href="#正确演示：" class="headerlink" title="正确演示："></a>正确演示：</h4><pre><code>    def start_requests(self):         for start_url in self.start_urls:             yield SplashRequest(start_url,                                 callback=self.parse,                                 args=&#123;&#39;wait&#39;: 10&#125;,  # 最大超时时间，单位：秒                                 endpoint=&#39;render.html&#39;)  # 使用splash服务的固定参数</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;启动splash服务&quot;&gt;&lt;a href=&quot;#启动splash服务&quot; class=&quot;headerlink&quot; title=&quot;启动splash服务&quot;&gt;&lt;/a&gt;启动splash服务&lt;/h2&gt;&lt;h2 id=&quot;1-sittings-py-文件配置：&quot;&gt;&lt;a href=&quot;#1-</summary>
      
    
    
    
    <category term="03_测试高阶" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
    <category term="01_爬虫技术" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/"/>
    
    <category term="scrapy框架" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/"/>
    
    <category term="学习笔记" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="测试高阶" scheme="http://example.com/tags/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>python第-scrapy框架_概念和流程</title>
    <link href="http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/01_scrapy_%E6%A6%82%E5%BF%B5%E5%92%8C%E6%B5%81%E7%A8%8B/"/>
    <id>http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/01_scrapy_%E6%A6%82%E5%BF%B5%E5%92%8C%E6%B5%81%E7%A8%8B/</id>
    <published>2022-05-23T06:56:21.085Z</published>
    <updated>2022-05-23T06:58:05.331Z</updated>
    
    <content type="html"><![CDATA[<h1 id="scrapy-的概念和流程"><a href="#scrapy-的概念和流程" class="headerlink" title="scrapy 的概念和流程"></a>scrapy 的概念和流程</h1><h2 id="第一讲"><a href="#第一讲" class="headerlink" title="第一讲"></a>第一讲</h2><h3 id="学习目的"><a href="#学习目的" class="headerlink" title="学习目的"></a>学习目的</h3><ol><li>了解scrapy的概念</li><li>了解dcrapy框架的作用</li><li>掌握scrapy框架的运行流程</li><li>掌握scrapy中的每个模块的作用</li></ol><h3 id="1-scrapy的概念"><a href="#1-scrapy的概念" class="headerlink" title="1.scrapy的概念"></a>1.scrapy的概念</h3><h4 id="scrapy是一个python编写的开源网络爬虫框架，他是一个被设计-用于爬取网络数据、提取结构性数据的框架"><a href="#scrapy是一个python编写的开源网络爬虫框架，他是一个被设计-用于爬取网络数据、提取结构性数据的框架" class="headerlink" title="scrapy是一个python编写的开源网络爬虫框架，他是一个被设计 用于爬取网络数据、提取结构性数据的框架"></a>scrapy是一个python编写的开源网络爬虫框架，他是一个被设计 用于爬取网络数据、提取结构性数据的框架</h4><pre><code> scrapy使用了twisted异步网络框架，可以加快我们的下载速度</code></pre><p>scrapy文档：<a href="https://scrapy-chs.readthedocs.io/zh_CN/0.24/">https://scrapy-chs.readthedocs.io/zh_CN&#x2F;0.24&#x2F;</a></p><h3 id="2-scrapy框架的作用"><a href="#2-scrapy框架的作用" class="headerlink" title="2.scrapy框架的作用"></a>2.scrapy框架的作用</h3><h4 id="少量的代码，就能够快速的抓取"><a href="#少量的代码，就能够快速的抓取" class="headerlink" title="少量的代码，就能够快速的抓取"></a>少量的代码，就能够快速的抓取</h4><h3 id="3-scrapy的工作流程"><a href="#3-scrapy的工作流程" class="headerlink" title="3.scrapy的工作流程"></a>3.scrapy的工作流程</h3><h4 id="3-1-回顾之前的爬虫流程"><a href="#3-1-回顾之前的爬虫流程" class="headerlink" title="3.1 回顾之前的爬虫流程"></a>3.1 回顾之前的爬虫流程</h4><p> <img src="/assets/2/image-20220523141200-qq1ar39.png" alt="image.png"></p><h4 id="3-2-上面流程可以修改为"><a href="#3-2-上面流程可以修改为" class="headerlink" title="3.2 上面流程可以修改为"></a>3.2 上面流程可以修改为</h4><p> <img src="/assets/2/image-20220523142540-r3yhln7.png" alt="image.png"></p><h4 id="3-3-scrapy-的流程"><a href="#3-3-scrapy-的流程" class="headerlink" title="3.3 scrapy 的流程"></a>3.3 scrapy 的流程</h4><p><img src="/assets/2/scrapy1.jpg" alt="image.png"><br><img src="/assets/2/image-20220523142912-6lkduyf.png" alt="image.png"><br>其流程可以描述如下：<br>    1. 爬虫中起始的url构造成request对象–&gt;爬虫中间件–&gt;迎请–&gt;调度器<br>    2.  调度器把request–&gt;迎请–&gt;下载中间件–&gt;下载器<br>    3.  下载器发送请求，获取response 响应–&gt;下载中间件–&gt;引擎–&gt;爬虫<br>    4.  爬虫提取url地址，组装成request对象–&gt;爬虫中间件–&gt;引擎–&gt;调度器，重复步骤2<br>    5.  爬虫提取数据–&gt;引擎–&gt;管道处理和保存数据<br>注意：<br>    * 图中中文是为了方便理解后加上去的<br>    * 图中绿色线条的表示数据的传递<br>    * 注意中间件的位置，决定其作用<br>    * 注意其中引擎的位置，所有的模块之间相互独立，只和引擎进行交互</p><h4 id="3-4-scrapy的三个内组织对象"><a href="#3-4-scrapy的三个内组织对象" class="headerlink" title="3.4 scrapy的三个内组织对象"></a>3.4 scrapy的三个内组织对象</h4><pre><code>* request请求对象：由url method post_data headers 等构成* response响应对象：由url body status headers等构成* item数据对象：本质是个字典</code></pre><h4 id="3-5-scrapy中的每个模块的具体作用"><a href="#3-5-scrapy中的每个模块的具体作用" class="headerlink" title="3.5 scrapy中的每个模块的具体作用"></a>3.5 scrapy中的每个模块的具体作用</h4><p>![image.png](assets&#x2F;2&#x2F;  image-20220523144758-47dlg2q.png)<br>注意：<br>    * 爬虫中间件和下载中间件知识运行逻辑的位置不同，作用是重复的：如替换UA等</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;scrapy-的概念和流程&quot;&gt;&lt;a href=&quot;#scrapy-的概念和流程&quot; class=&quot;headerlink&quot; title=&quot;scrapy 的概念和流程&quot;&gt;&lt;/a&gt;scrapy 的概念和流程&lt;/h1&gt;&lt;h2 id=&quot;第一讲&quot;&gt;&lt;a href=&quot;#第一讲&quot; c</summary>
      
    
    
    
    <category term="03_测试高阶" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
    <category term="01_爬虫技术" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/"/>
    
    <category term="scrapy框架" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/"/>
    
    <category term="学习笔记" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="测试高阶" scheme="http://example.com/tags/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>python第-scrapy框架_入门使用</title>
    <link href="http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/02_scrapy_%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/02_scrapy_%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8/</id>
    <published>2022-05-23T06:02:15.176Z</published>
    <updated>2022-05-26T13:10:16.665Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习目标："><a href="#学习目标：" class="headerlink" title="学习目标："></a>学习目标：</h2><pre><code>1. 掌握scrapy的安装2. 应用创建scrapy的项目3. 应用创建scrapy爬虫4. 应用运行scrapy爬虫5. 应用scrapy定位以及提取数据或属性值得方法6. 掌握response响应对象的常用属性</code></pre><h2 id="1-安装scrapy"><a href="#1-安装scrapy" class="headerlink" title="1. 安装scrapy"></a>1. 安装scrapy</h2><h4 id="命令："><a href="#命令：" class="headerlink" title="命令："></a>命令：</h4><blockquote><p>sudo apt-get install scrapy</p></blockquote><h4 id="或者"><a href="#或者" class="headerlink" title="或者"></a>或者</h4><blockquote><p>pip&#x2F;pip3 install  scrapy</p></blockquote><h2 id="2-scrapy-项目开发流程"><a href="#2-scrapy-项目开发流程" class="headerlink" title="2. scrapy 项目开发流程"></a>2. scrapy 项目开发流程</h2><pre><code>1.创建项目：    scrapy startoject mySpider2.生成一个爬虫    scrapy genspider itcast itcast.cn3.提取数据    根据网站结果在spider中实现数据采集相关内容4.保存数据    使用pipeline进行数据后续处理和保存</code></pre><h2 id="3-创建项目"><a href="#3-创建项目" class="headerlink" title="3. 创建项目"></a>3. 创建项目</h2><blockquote><p>通过命令将scrapy项目的文件生成出来，后续步骤都是在项目文件中进行相关操作，下面抓取传智师资库来学习scrapy的入门使用：<a href="http://www.itcast.cn/channel/teacher.shtml">http://www.itcast.cn/channel/teacher.shtml</a><br>创建scrapy项目的命令：<br>scrapy startpoject &lt;项目名称&gt;<br>示例：<br>scrapy startproject myspider<br>生成的目录和文件结构如图：<br><img src="/assets/image-20220523151330-kj8lufa.png" alt="image.png"></p></blockquote><h2 id="4-创建爬虫"><a href="#4-创建爬虫" class="headerlink" title="4. 创建爬虫"></a>4. 创建爬虫</h2><h3 id="通过命令创建出爬虫文件，爬虫文件为主要的代码作业文件通常一个网站的爬虫动作都会在爬虫文件中进行编写"><a href="#通过命令创建出爬虫文件，爬虫文件为主要的代码作业文件通常一个网站的爬虫动作都会在爬虫文件中进行编写" class="headerlink" title="通过命令创建出爬虫文件，爬虫文件为主要的代码作业文件通常一个网站的爬虫动作都会在爬虫文件中进行编写"></a>通过命令创建出爬虫文件，爬虫文件为主要的代码作业文件通常一个网站的爬虫动作都会在爬虫文件中进行编写</h3><h4 id="命令：-1"><a href="#命令：-1" class="headerlink" title="命令："></a>命令：</h4><pre><code>在项目路径下执行：    &gt; scrapy genspider &lt;爬虫名字&gt;&lt;允许爬取的域名&gt;</code></pre><h4 id="爬虫名字：作为爬虫运行时的参数"><a href="#爬虫名字：作为爬虫运行时的参数" class="headerlink" title="爬虫名字：作为爬虫运行时的参数"></a>爬虫名字：作为爬虫运行时的参数</h4><h4 id="允许爬取的域名：为对于爬虫设置的爬取范围，设置之后用于过滤要爬取的url，如果爬取的url与允许的域不同则被过滤掉"><a href="#允许爬取的域名：为对于爬虫设置的爬取范围，设置之后用于过滤要爬取的url，如果爬取的url与允许的域不同则被过滤掉" class="headerlink" title="允许爬取的域名：为对于爬虫设置的爬取范围，设置之后用于过滤要爬取的url，如果爬取的url与允许的域不同则被过滤掉"></a>允许爬取的域名：为对于爬虫设置的爬取范围，设置之后用于过滤要爬取的url，如果爬取的url与允许的域不同则被过滤掉</h4><h4 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h4><blockquote><p>cd myspider<br>scrapy genspider itcast  itcast.cn</p></blockquote><p>生成的目录和文件结果如下：<br><img src="/assets/2/image-20220523153511-rqee69q.png" alt="image.png"></p><h3 id="5-完善爬虫"><a href="#5-完善爬虫" class="headerlink" title="5. 完善爬虫"></a>5. 完善爬虫</h3><blockquote><p>“””<br>filename:itcast.py<br>“””<br>import scrapy</p></blockquote><blockquote><p>class ItcastSpider(scrapy.Spider):</p><h1 id="爬虫名称"><a href="#爬虫名称" class="headerlink" title="爬虫名称"></a>爬虫名称</h1><p>   name &#x3D; ‘itcast’</p><h1 id="允许爬取的范围"><a href="#允许爬取的范围" class="headerlink" title="允许爬取的范围"></a>允许爬取的范围</h1><p>   allowed_domains &#x3D; [‘itcast.cn’]</p><h1 id="开始爬取的url地址"><a href="#开始爬取的url地址" class="headerlink" title="开始爬取的url地址"></a>开始爬取的url地址</h1><h1 id="start-urls-x3D-‘http-itcast-cn-39"><a href="#start-urls-x3D-‘http-itcast-cn-39" class="headerlink" title="start_urls &#x3D; [‘http://itcast.cn/&#39;]"></a>start_urls &#x3D; [‘<a href="http://itcast.cn/&#39;]">http://itcast.cn/&#39;]</a></h1><h1 id="修改开始爬取的地址"><a href="#修改开始爬取的地址" class="headerlink" title="修改开始爬取的地址"></a>修改开始爬取的地址</h1><p>   start_urls &#x3D; [‘<a href="http://www.itcast.cn/channel/teacher.shtml#ajavaee&#39;]">http://www.itcast.cn/channel/teacher.shtml#ajavaee&#39;]</a></p></blockquote><blockquote><h1 id="数据提取的方法，接受下载中间件传过来的response"><a href="#数据提取的方法，接受下载中间件传过来的response" class="headerlink" title="数据提取的方法，接受下载中间件传过来的response"></a>数据提取的方法，接受下载中间件传过来的response</h1><p>   def parse(self, response):<br>       #  获取所有教师节点<br>       node_list &#x3D; response.xpath(‘&#x2F;&#x2F;div[@class &#x3D; “li_txt”]’)<br>       # 遍历所有教师节点<br>       for  node   in   node_list:<br>           temp &#x3D; {}<br>           # xpath 方法返回的是选择器对象列表，<br>           # extract()用于从选择器兑现中提取数据<br>           #extract_first()  就不需要前面的索引[0],可能返回空列表可以处理，给None，列表只有一个值时使用<br>           temp[“name”] &#x3D; node.xpath(‘.&#x2F;h3&#x2F;text()’)[0].extract()<br>           temp[“title”] &#x3D; node.xpath(‘.&#x2F;h4&#x2F;text()’)[0].extract()<br>           temp[“desc”] &#x3D; node.xpath(‘.&#x2F;p&#x2F;text()’)[0].extract()<br>           # xpath 结果为只有一个值得列表可以使用extract_first()<br>           # xpath 结果如果有多个值时使用extract()<br>           yield  temp</p></blockquote><h4 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h4><pre><code>* scrapy.Spider爬虫类中必须有名为parse的解析* 如果网站结果层次比较负载，也可以自定义其他解析函数* 在解析函数中提取的url地址如果要发送请求，则必须属于allowed_domains范围内，但是start_urls中的url地址不受这个限制，我们会在后续课程中学习如何在解析函数中构造发送请求* 启动爬虫的时候注意启动的位置，是在项目路径下启动* parse()函数中使用yield返回数据，注意：解析函数中的yield能够传递对象只能是：Baseltem，Request，dict，None</code></pre><h4 id="5-2-定位元素以及提取数据、属性值的方法"><a href="#5-2-定位元素以及提取数据、属性值的方法" class="headerlink" title="5.2 定位元素以及提取数据、属性值的方法"></a>5.2 定位元素以及提取数据、属性值的方法</h4><blockquote><p>解析并获取scrapy爬虫中的数据，利用xpath规则字符串进行定位和提取<br>    1. response.xpath方法的返回结果是一个类似list的类型，其中包含的是selector对象，操作和列表一样<br>    2. 额外方法extract():返回一个包含字符串的列表<br>    3. 额外方法extract_first():返回列表中的第一个字符串，列表为空返回None</p></blockquote><h4 id="5-3-response响应对象的常见属性"><a href="#5-3-response响应对象的常见属性" class="headerlink" title="5.3 response响应对象的常见属性"></a>5.3 response响应对象的常见属性</h4><pre><code>* response.url：当前响应的url地址* response.request.url：当前响应对应的请求的url地址* response.headers：响应头* response.requests.headers:当前响应的请求头* response.body ：响应体，也就是html代码，byte类型</code></pre><h3 id="7-运行scrapy"><a href="#7-运行scrapy" class="headerlink" title="7. 运行scrapy"></a>7. 运行scrapy</h3><h4 id="命令：在项目目录下执行scrapy-crawl-lt-爬虫名字-gt"><a href="#命令：在项目目录下执行scrapy-crawl-lt-爬虫名字-gt" class="headerlink" title="命令：在项目目录下执行scrapy crawl&lt;爬虫名字&gt;"></a>命令：在项目目录下执行scrapy crawl&lt;爬虫名字&gt;</h4><blockquote><p>scrapy crawl itcast</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;学习目标：&quot;&gt;&lt;a href=&quot;#学习目标：&quot; class=&quot;headerlink&quot; title=&quot;学习目标：&quot;&gt;&lt;/a&gt;学习目标：&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;1. 掌握scrapy的安装
2. 应用创建scrapy的项目
3. 应用创建scrapy爬虫
4.</summary>
      
    
    
    
    <category term="03_测试高阶" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
    <category term="01_爬虫技术" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/"/>
    
    <category term="scrapy框架" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/"/>
    
    <category term="学习笔记" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="测试高阶" scheme="http://example.com/tags/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>Jupyter Notebook安装（Windows）</title>
    <link href="http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/03_python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/02_python%E6%8F%92%E4%BB%B6_jupyter/"/>
    <id>http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/03_python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/02_python%E6%8F%92%E4%BB%B6_jupyter/</id>
    <published>2022-05-20T18:07:37.681Z</published>
    <updated>2022-06-02T17:14:12.965Z</updated>
    
    <content type="html"><![CDATA[<p>Jupyter Notebook安装（Windows）</p><ol><li><p>下载Jupyter Notebook<br> （1）打开cmd（如果没有把Python安装目录添加到Path，就需要切换到Python安装目录的Scripts目录下，不过大多数的Python安装教程都会有这一步）；</p><p> <img src="/assets/2/image-20220521020425-aftpk03.png" alt="image.png"></p></li></ol><p>（2）输入pip install jupyter；</p><ol start="2"><li><p>启动Juypter Notebook<br> （1）命令行窗口输入jupyter notebook；</p><p> <img src="/assets/2/image-20220521020437-ydugrs8.png" alt="image.png"></p></li></ol><p>同时，默认浏览器会打开Jupyter Notebook窗口，说明Jupyter Notebook安装成功。</p><p><img src="/assets/2/image-20220521020447-b4gi4oq.png" alt="image.png"></p><ol start="3"><li><p>配置Jupyter Notebook<br> （1）命令行窗口输入jupyter notebook –generate-config，会发现C:\Users\用户名\ .jupyter下多出了一个配置文件jupyter_notebook_config.py；</p><p> <img src="/assets/2/image-20220521020459-2dhd2aa.png" alt="image.png"></p></li></ol><p>（2）打开这个配置文件，找到下面这句#c.NotebookApp.notebook_dir &#x3D; ‘’。</p><p><img src="/assets/2/image-20220521020506-0fcek2s.png" alt="image.png"></p><p>可以把它修改成c.NotebookApp.notebook_dir &#x3D; ‘D:\jupyter-notebook’，当然具体的目录由自己创建的文件夹决定（需要自己创建）。</p><p><img src="/assets/2/image-20220521020519-vll8ozo.png" alt="image.png"></p><p>配置文件修改完成后，以后在jupyter notebook中写的代码都会保存在该目录下。现在重新启动jupyter notebook，就进入了新的工作目录；</p><p><img src="/assets/2/image-20220521020528-wexy3m4.png" alt="image.png"></p><ol start="4"><li>添加代码自动补全功能（可选）<br> （1）打开cmd，输入pip install jupyter_contrib_nbextensions，等待安装成功；</li></ol><p>（2）安装完之后需要配置nbextension（配置前要确保已关闭jupyter notebook），在cmd中输入jupyter contrib nbextension install –user –skip-running-check，等待配置成功；</p><p>（3）在前两步成功的情况下，启动jupyter notebook，会发现在选项栏中多出了Nbextension的选项，点开该选项，并勾选Hinterland，即可添加代码自动补全功能。</p><p><img src="/assets/2/image-20220521020535-pwhm2y0.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Jupyter Notebook安装（Windows）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;下载Jupyter Notebook&lt;br&gt; （1）打开cmd（如果没有把Python安装目录添加到Path，就需要切换到Python安装目录的Scripts目录下，不过大多数的Pyth</summary>
      
    
    
    
    <category term="03_测试高阶" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
    <category term="03_python数据分析" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/03-python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    
    <category term="测试高阶" scheme="http://example.com/tags/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>python数据分析入门实例-pandas_matplotlib</title>
    <link href="http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/03_python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/01_pandas_matplotlib/"/>
    <id>http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/03_python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/01_pandas_matplotlib/</id>
    <published>2022-05-20T16:49:23.564Z</published>
    <updated>2022-06-02T17:14:07.412Z</updated>
    
    <content type="html"><![CDATA[<pre><code># 1. 读取csv文件道程序中，用一个合适的变量存储它# 2. 清洗，处理# 3. 可视化，画图# 安装 第三方库   jupyter# series  一维数据,dataframe  二维数据（csv）# 打开jupyter服务import pandas as pddf = pd.read_csv(&quot;文件名.csv&quot;)  #  读取所有的数据type(df)# pandas.core.frame.DateFramedf# 表格文件df.info()    # 文件属性df.columns   # 获取所有的列名# 删除无用列del(df[&quot;需要删除的列名&quot;]) # 删除原数据   df.列名(列名不能包含空格)dfhead()# df.drop(删除一行或者一列) df.drop_duplicates(删除重复数据)  df.dropna(删除空白数据) # df.drop([&quot;列名1&quot;,&quot;列名2&quot;]，axis = 1,inplace = True)# 一列表的形式删除列    inplace 是否在原数据上执行df.columns   # 获取所有的列名df.columns = [要修改的列名]   # 修改列名df.place #  假设此列为出版地# 先分组，然后数每组有多少数据count_df = df.groupby([&quot;place&quot;,&quot;date&quot;])    # 分组place_count = count_df[&quot;Identifier&quot;].count()  # 统计place_sorted = place_count.sort_values(ascending = False)    # False  降序   True  升序# 数据可视化，画图# 画什么图？？# 趋势，规律  画线图# 分布占比图  饼图@matplotlib inlineimport matplotlib.pyplot  as  pltlabels = place_sorted.index[:6]   #  取前六位values = place_sorted.values[:6]  #  取前六位plt.pie(calues,labels = labels,autopct=&quot;%.1f%%&quot;)plt.axis(&quot;equal&quot;)</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre&gt;&lt;code&gt;# 1. 读取csv文件道程序中，用一个合适的变量存储它
# 2. 清洗，处理
# 3. 可视化，画图
# 安装 第三方库   jupyter
# series  一维数据,dataframe  二维数据（csv）
# 打开jupyter服务
import </summary>
      
    
    
    
    <category term="03_测试高阶" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
    <category term="03_python数据分析" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/03-python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    
    <category term="测试高阶" scheme="http://example.com/tags/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>python_tkinter_图形界面编程</title>
    <link href="http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/02_python_tkinter/01_tkinter/"/>
    <id>http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/02_python_tkinter/01_tkinter/</id>
    <published>2022-05-20T16:06:49.695Z</published>
    <updated>2022-06-02T17:14:00.838Z</updated>
    
    <content type="html"><![CDATA[<h2 id="系统登录"><a href="#系统登录" class="headerlink" title="系统登录"></a>系统登录</h2><pre><code># 安装  pip install tkinterfrom tkinter import *from tkinter import messageboxwindow = TK()window.title(&quot;灵犀教育管理系统&quot;)window.geometry(&quot;300x300+400+400&quot;)name_label = Lable(window,text = &quot;用户名&quot;)pwd_label = Lable(window,text = &quot;密码&quot;)name_entry=Entry(window)pwd_entry = Entry(window,show = &quot;*&quot;)uesrs = &#123;    &quot;admin&quot;:&quot;123&quot;&#125;def login()    # 获取用户名密码    name=name_entry.get()    pwd = pwd_entry.get()    if name ==&quot;&quot;:        messagebox.showerror(title= &quot;错误提示&quot;，message = &quot;用户名不能为空&quot;)    elif pwd ==&quot;&quot;:        messagebox.showerror(title= &quot;错误提示&quot;，message = &quot;密码不能为空&quot;)    else:        # 判断用户名是否存在，以及密码是否正确        if useer.get(name) == pwd:            messagebos.showinfo(title= &quot;提示&quot;，message = &quot;登陆成功&quot;)        else:            messagebox.showerror(title= &quot;错误提示&quot;，message = &quot;登陆失败&quot;)            login_btn = Button(window,text = &quot;登录&quot;，width = 8, command =login )#name_label.pack()  #  pack 居中顺序排列#pwd_label.pack()#name_entry.pack()#pwd_entry.pack()#login_btn.pack()# place(x,y)  #  详细位置布局# grid 表格形式name_label.grid(row = 0,column = 0,padx = 30,pady = 20)name_entry.grid(row = 0,column = 1)pwd_label.grid(row = 1,column = 0)pwd_entry.grid(row = 1,column = 1)login_btn.grid(row = 2,colimn = 1,pady = 20,stick = E)window.mainloop()</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;系统登录&quot;&gt;&lt;a href=&quot;#系统登录&quot; class=&quot;headerlink&quot; title=&quot;系统登录&quot;&gt;&lt;/a&gt;系统登录&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;# 安装  pip install tkinter
from tkinter import *
from t</summary>
      
    
    
    
    <category term="03_测试高阶" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
    <category term="02_python_tkinter" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/02-python-tkinter/"/>
    
    
    <category term="测试高阶" scheme="http://example.com/tags/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>python第三方库-scrapy爬虫框架</title>
    <link href="http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/01_python_scrapy%E6%A1%86%E6%9E%B6/"/>
    <id>http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/01_python_scrapy%E6%A1%86%E6%9E%B6/</id>
    <published>2022-05-20T13:12:06.336Z</published>
    <updated>2022-05-23T07:30:52.268Z</updated>
    
    <content type="html"><![CDATA[<h1 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a><a href="https://scrapy-chs.readthedocs.io/zh_CN/0.24/">官方文档</a></h1><h2 id="爬虫原理"><a href="#爬虫原理" class="headerlink" title="爬虫原理"></a>爬虫原理</h2><h3 id="基础库的使用，"><a href="#基础库的使用，" class="headerlink" title="基础库的使用，"></a>基础库的使用，</h3><h3 id="进阶，"><a href="#进阶，" class="headerlink" title="进阶，"></a>进阶，</h3><h3 id="反爬虫，"><a href="#反爬虫，" class="headerlink" title="反爬虫，"></a>反爬虫，</h3><h3 id="单线程爬虫，"><a href="#单线程爬虫，" class="headerlink" title="单线程爬虫，"></a>单线程爬虫，</h3><h3 id="多线程爬虫，"><a href="#多线程爬虫，" class="headerlink" title="多线程爬虫，"></a>多线程爬虫，</h3><h3 id="scrapy（异步并发），"><a href="#scrapy（异步并发），" class="headerlink" title="scrapy（异步并发），"></a>scrapy（异步并发），</h3><h3 id="分布式爬虫"><a href="#分布式爬虫" class="headerlink" title="分布式爬虫"></a>分布式爬虫</h3><h2 id="框架："><a href="#框架：" class="headerlink" title="框架："></a>框架：</h2><h3 id="抓取，解析，保存"><a href="#抓取，解析，保存" class="headerlink" title="抓取，解析，保存"></a>抓取，解析，保存</h3><h3 id="域名，ip地址"><a href="#域名，ip地址" class="headerlink" title="域名，ip地址"></a>域名，ip地址</h3><h4 id="1-scrapy-异步并发-安装第三方库：pip-install-scrapy"><a href="#1-scrapy-异步并发-安装第三方库：pip-install-scrapy" class="headerlink" title="1. scrapy__异步并发 安装第三方库：pip install scrapy"></a>1. scrapy__异步并发 安装第三方库：pip install scrapy</h4><p>cmd 进入空白文件 通过scrapy 创建框架<br>    命令： </p><blockquote><p>scrapy startproject demo0520_scrapy（文件名,项目的名字）  回车<br><img src="/assets/2/20220520_1.jpg"><br>cd  demo0520_scrapy<br><img src="/assets/2/20220520_2.jpg"><br><img src="/assets/2/20220520_3.jpg"><br>scrapy genspider  movies（爬虫的类型，爬虫的名字） donban.com（域名）  # 需要加两个参数<br><img src="/assets/2/20220520_4.jpg"></p></blockquote><ol start="2"><li>打开pycharm<br> 打开项目：  项目位置</li></ol><p><img src="/assets/2/scrapy1.jpg"></p><ol start="3"><li>运行爬虫<br> 进入项目文件—&gt;&gt;&gt; cmd 或者pycharm 控制台<br> 输入 scrapy  crawl movies（爬虫的名字）</li></ol><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;官方文档&quot;&gt;&lt;a href=&quot;#官方文档&quot; class=&quot;headerlink&quot; title=&quot;官方文档&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://scrapy-chs.readthedocs.io/zh_CN/0.24/&quot;&gt;官方文档&lt;/a&gt;&lt;/h1&gt;&lt;h2 i</summary>
      
    
    
    
    <category term="03_测试高阶" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
    <category term="01_爬虫技术" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/"/>
    
    <category term="scrapy框架" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/"/>
    
    
    <category term="测试高阶" scheme="http://example.com/tags/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>python常用编码_整理</title>
    <link href="http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/02_python%E5%B8%B8%E7%94%A8%E7%BC%96%E7%A0%81/"/>
    <id>http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/02_python%E5%B8%B8%E7%94%A8%E7%BC%96%E7%A0%81/</id>
    <published>2022-05-19T06:43:08.855Z</published>
    <updated>2022-06-02T17:13:51.494Z</updated>
    
    <content type="html"><![CDATA[<pre><code># 去掉web页面自动化提醒标识- 自动化标识from selenium.webdriver.chrome.options import Optionoption = Options()option.add_experimental_option(&#39;excludeSwitches&#39;,[&#39;enable-automation&#39;])option.add_argument(&#39;--disable-blink-features-AutomationControlled&#39;)driver = webdriver.Chrome(options=option)</code></pre><pre><code># 关掉密码弹窗from selenium.webdriver.chrome.options import Optionprefs = &#123;&#125;prefs[&#39;credentials_enable_service&#39;] = Falseprefs[&#39;profile.password_manger_enabled&#39;] = Falseoption.add_experimental_option(&#39;prefs&#39;,prefs)</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre&gt;&lt;code&gt;# 去掉web页面自动化提醒标识- 自动化标识
from selenium.webdriver.chrome.options import Option
option = Options()
option.add_experimental_option(&amp;#</summary>
      
    
    
    
    <category term="03_测试高阶" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
    <category term="01_爬虫技术" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="测试高阶" scheme="http://example.com/tags/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>测试高阶</title>
    <link href="http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/"/>
    <id>http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/</id>
    <published>2022-05-19T02:39:37.332Z</published>
    <updated>2022-06-02T17:13:46.636Z</updated>
    
    <content type="html"><![CDATA[<ul><li>爬虫技术接单平台<ul><li><a href="https://www.jfh.com/serviceProvider.html">解放号</a></li><li><a href="https://www.yuanjisong.com/job">猿急送</a></li><li><a href="https://www.proginn.com/?loginbox=show">程序员客栈</a></li><li><a href="https://codemart.com/">码市</a></li><li><a href="http://rrkf.com/">人人开发</a></li><li><a href="https://task.zbj.com/">猪八戒</a></li><li><a href="https://task.epwk.com/task/">一品威客</a></li><li><a href="https://zb.oschina.net/projects/list.html">开源众包</a></li><li><a href="https://www.taskcity.com/">智城外包网</a></li><li><a href="https://shixian.com/cases">实现网</a></li><li><a href="https://eleduck.com/categories/6/tags/0-18">电鸭社区</a></li><li><a href="https://remoteok.com/">Remoteok</a></li><li><a href="https://www.toptal.com/">Toptal</a></li><li><a href="https://angel.co/">AngelList</a></li><li><a href="https://www.yingxuan.io/">英选</a></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;爬虫技术接单平台&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.jfh.com/serviceProvider.html&quot;&gt;解放号&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.yuanjisong.com/job&quot;&gt;猿急送&lt;/</summary>
      
    
    
    
    <category term="03_测试高阶" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
    <category term="01_爬虫技术" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="测试高阶" scheme="http://example.com/tags/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>python+requests+pytest接口自动化</title>
    <link href="http://example.com/05_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06_%E8%87%AA%E5%8A%A8%E5%8C%96/02_%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/02_API%E8%87%AA%E5%8A%A8%E5%8C%96/api%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6/03_python+requests+pytest%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    <id>http://example.com/05_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06_%E8%87%AA%E5%8A%A8%E5%8C%96/02_%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/02_API%E8%87%AA%E5%8A%A8%E5%8C%96/api%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6/03_python+requests+pytest%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96/</id>
    <published>2022-05-16T12:53:10.913Z</published>
    <updated>2022-06-02T17:10:14.247Z</updated>
    
    <content type="html"><![CDATA[<p>1、发送get请求</p><blockquote><p>#导包<br>import requests<br>#定义一个urlurl &#x3D; “<a href="http://xxxxxxx&quot;/">http://xxxxxxx&quot;</a><br>#传递参数payload&#x3D;”{&quot;head&quot;:{&quot;accessToken&quot;:&quot;&quot;,&quot;lastnotice&quot;:0,&quot;msgid&quot;:&quot;&quot;},&quot;body&quot;:{&quot;user_name&quot;:&quot;super_admin&quot;,&quot;password&quot;:&quot;b50c34503a97e7d0d44c38f72d2e91ad&quot;,&quot;role_type&quot;:1}}”<br>headers &#x3D; {‘Content-Type’: ‘text&#x2F;plain’,<br>‘Cookie’: ‘akpsysessionid&#x3D;bafc0ad457d5a99f3a4e53a1d4b32519’<br>}#发送get请求r &#x3D; requests.get( url&#x3D;url,headers&#x3D;headers, data&#x3D;payload)#打印结果print(r.text)<br>#解码print(r.encoding)<br>print(r.text.encode(‘utf-8’).decode(‘unicode_escape’))#先把返回的结果转换成utf-8，再去解码成中文的编码</p></blockquote><h1 id=""><a href="#" class="headerlink" title=""></a></h1><h1 id="-1"><a href="#-1" class="headerlink" title=""></a></h1><p>2、发送post请求</p><blockquote><p>#导包<br>import requests<br>#定义一个urlurl &#x3D; “<a href="http://xxxxxxx&quot;/">http://xxxxxxx&quot;</a><br>#传递参数payload&#x3D;”{&quot;head&quot;:{&quot;accessToken&quot;:&quot;&quot;,&quot;lastnotice&quot;:0,&quot;msgid&quot;:&quot;&quot;},&quot;body&quot;:{&quot;user_name&quot;:&quot;super_admin&quot;,&quot;password&quot;:&quot;b50c34503a97e7d0d44c38f72d2e91ad&quot;,&quot;role_type&quot;:1}}”<br>headers &#x3D; {‘Content-Type’: ‘text&#x2F;plain’,<br>‘Cookie’: ‘akpsysessionid&#x3D;bafc0ad457d5a99f3a4e53a1d4b32519’<br>}#发送post请求r &#x3D; requests.post( url&#x3D;url,headers&#x3D;headers, data&#x3D;payload)#打印结果print(r.text)</p></blockquote><h1 id="-2"><a href="#-2" class="headerlink" title=""></a></h1><h1 id="-3"><a href="#-3" class="headerlink" title=""></a></h1><p>3、发送https请求</p><blockquote><p>import requests<br>url&#x3D;’<a href="https://www.ctrip.com/&#39;">https://www.ctrip.com/&#39;</a><br>#第一种解决方案，发送请求的时候忽略证书，证书的参数verify用的比较多r&#x3D;requests.post(url&#x3D;url,verify&#x3D;False)#verify参数默认为True，值为False，表示忽略证书#第二张解决方案，verify里面添加证书的路径r&#x3D;requests.post(url&#x3D;url,verify&#x3D;’证书的路径’)#verify参数默认为True，值为False，表示忽略证书<br>print(r.text)</p></blockquote><p>4、文件上传</p><blockquote><p>import requests<br>file &#x3D; {‘filename’:open(‘文件名称’,’rb’)<br>}response &#x3D; requests.post(“网址”,file)<br>print(response.text)</p></blockquote><p>5、文件下载</p><blockquote><p>#小文件下载<br>import requests<br>r &#x3D; requests.get(“<a href="https://img.sitven.cn/Tencent_blog_detail.jpg&quot;">https://img.sitven.cn/Tencent_blog_detail.jpg&quot;</a>)<br>with open(r”D:\a.jpg”, “wb”) as f:<br>f.write(r.content)#大文件下载import requests<br>def test_downloads(url, file):s &#x3D; requests.sessionr &#x3D; s.get(url, stream&#x3D;True, verify&#x3D;False)<br>with open(file, “wb”) as f:<br>for chunk in r.iter_content(chunk_size&#x3D;512):<br>f.write(chunk)if <strong>name</strong> &#x3D;&#x3D; “<strong>main</strong>“:<br>url &#x3D; “<a href="https://www.url.com/test/export&quot;">https://www.url.com/test/export&quot;</a><br>file &#x3D; “D:\a.xlsx”<br>test_downloads(url&#x3D;url, file&#x3D;file)#转载至：<a href="https://blog.csdn.net/weixin_43507959/article/details/107326912">https://blog.csdn.net/weixin_43507959/article/details/107326912</a></p></blockquote><p>6、timeout超时</p><blockquote><p>#导包<br>import requests<br>#循环10次<br>for i in range(0,10):<br>try:url&#x3D;”<a href="http://xxxxxxxxxxxxxxxx&quot;/">http://xxxxxxxxxxxxxxxx&quot;</a><br>data&#x3D;{“head”:{“lastnotice”:0,”msgid”:””,”accessToken”:”89a08bff-15d7-4d7a-9967-0b5f4fb699ce”},<br>“body”:{“clinicid”:”978f661e-1782-43bd-8675-b0ff1138ab7c”,”deptid”:”09b8515b-b01b-4771-9356-aed6b5aa01bf”,”doctorid”:”65ac0251-10ff-473a-af8a-20e8969176f7”,”registtype”:0,”card_num”:””,”bcc334”:””,”patientopt”:1,”bkc368”:”1”,”patient”:{“cardid”:””,”medicalcardid”:””,”label”:””,”sourcetype”:1,”nationid”:”01”,”maritalstatus”:0,”address”:””,”company”:””,”jobname”:””,”email”:””,”remark”:””,”bcc334”:””,”name”:”11”,”gender”:1,”phone”:””,”birthdate”:”2020-03-23”,”patienttype”:1,”szsbcardid”:””}}<br>}#发送post请求，超时时间0.03s<br>r&#x3D;requests.post(url&#x3D;url,json&#x3D;data,timeout&#x3D;0.03)<br>print(r.text)<br>print(r.cookies)<br>except:print(‘error’)<br>#可参考：<a href="https://blog.csdn.net/weixin_44350337/article/details/99655387">https://blog.csdn.net/weixin_44350337/article/details/99655387</a></p></blockquote><p>7、鉴权<br>7.1 auth参数鉴权</p><blockquote><p>import requests<br>url &#x3D; ‘<a href="http://192.168.1.1&/#39;">http://192.168.1.1&#39;</a><br>headers &#x3D; {} # 有的不带头也能请求到 不带头可以忽略这行 和headers&#x3D;headers,这两处r &#x3D; requests.get(url, auth&#x3D;(‘admin’, ‘123456’), headers&#x3D;headers, timeout&#x3D;10)<br>print(r.text)</p></blockquote><p>7.2 session操作</p><blockquote><p>#实例化session<br>session &#x3D; requests.session<br>#使用session发起请求<br>response &#x3D; session.post(url,headers&#x3D;req_header,data&#x3D;form_data)</p></blockquote><p>7.3 token操作</p><blockquote><p>import requests<br>url&#x3D;”<a href="http://xxxxxxxxxxxxxxx&quot;/">http://xxxxxxxxxxxxxxx&quot;</a><br>json&#x3D;{“head”:{“accessToken”:””,”lastnotice”:0,”msgid”:””},<br>“body”:{“username”:”15623720880”,”password”:”48028d2558577c526a017883211b4066”,”forceLogin”:0}<br>}r&#x3D;requests.post(url&#x3D;url,json&#x3D;json)print(r.text)<br>print(r.cookies)<br>#登录成功后返回token，带入下一个接口for i in range(0,1):<br>try:url&#x3D;”xxxxxxxxxxxxxxxxxx”<br>data&#x3D;{“head”:{“lastnotice”:0,”msgid”:””,”accessToken”:”89a08bff-15d7-4d7a-9967-0b5f4fb699ce”},<br>“body”:{“clinicid”:”978f661e-1782-43bd-8675-b0ff1138ab7c”,”deptid”:”09b8515b-b01b-4771-9356-aed6b5aa01bf”,”doctorid”:”65ac0251-10ff-473a-af8a-20e8969176f7”,”registtype”:0,”card_num”:””,”bcc334”:””,”patientopt”:1,”bkc368”:”1”,”patient”:{“cardid”:””,”medicalcardid”:””,”label”:””,”sourcetype”:1,”nationid”:”01”,”maritalstatus”:0,”address”:””,”company”:””,”jobname”:””,”email”:””,”remark”:””,”bcc334”:””,”name”:”11”,”gender”:1,”phone”:””,”birthdate”:”2020-03-23”,”patienttype”:1,”szsbcardid”:””}}<br>}r&#x3D;requests.post(url&#x3D;url,json&#x3D;data,timeout&#x3D;0.09)<br>print(r.text)<br>print(r.cookies)<br>except:print(‘error’)</p></blockquote><p>7.4 sign签名</p><blockquote><p>appid：wxd930ea5d5a258f4f</p><p>mch_id：10000100</p><p>device_info：1000</p><p>body：test</p><p>nonce_str：ibuaiVcKdpRxkhJA</p><p>import hashlib<br>#需要加密的字符串<br>stringA&#x3D;”appid&#x3D;wxd930ea5d5a258f4f&amp;body&#x3D;test&amp;device_info&#x3D;1000&amp;mch_id&#x3D;10000100&amp;nonce_str&#x3D;ibuaiVcKdpRxkhJA”;<br>#构建一个对象为md<br>md&#x3D;hashlib.md5<br>#对stringA字符串进行编码<br>md.update(stringA.encode)<br>#生成后的加密值<br>AES&#x3D;md.hexdigest<br>#把加密的结果，小写转大写 upper函数<br>AES&#x3D;AES.upper<br>print(AES)<br>参考微信支付：<a href="https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=4_3#">https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=4_3#</a></p></blockquote><h1 id="-4"><a href="#-4" class="headerlink" title=""></a></h1><p>8、自动化模块划分<br>config 配置文件（python package）#directory和python package大同小异</p><p>common 公共的方法（python package）</p><p>testdata 测试数据（python package）</p><p>test_case测试用例（python package）</p><p>report 报告（directory）</p><p>run_case 测试执行（python package）</p><p>log 日志</p><p><img src="/assets/2/image-20220516205752-38m0prz.png" alt="image.png"></p><p>8.1 config配置文件</p><blockquote><p>def server_ip:<br>‘’’<br>ait_ip&#x3D;’’开发环境的服务器ip<br>sit_ip&#x3D;’’测试环境的服务器ip<br>:return: 返回不同服务器的地址<br>‘’’<br>server_add&#x3D;{‘dev_ip’ : ‘<a href="http://his.xxxxxxxxxxx.com&/#39;">http://his.xxxxxxxxxxx.com&#39;</a>,<br>‘sit_ip’ : ‘<a href="http://his.xxxxxxxxxxxx.comm&/#39;">http://his.xxxxxxxxxxxx.comm&#39;</a><br>}return server_add[‘dev_ip’]<br>————————————————————————————def sql_conf:<br>‘’’<br>host数据库ip<br>user数据库用户名<br>password数据库密码<br>database:连接数据库名<br>port数据库端口<br>chrset数据库字符集 中文utf-8<br>:return:<br>‘’’<br>host&#x3D;’localhost’<br>user&#x3D;’root’<br>password&#x3D;’123456’<br>database&#x3D;’mysql’<br>port&#x3D;3306<br>charset&#x3D;’utf8’ #这用utf8，utf-8会报错<br>return host,user,password,database,port,charset</p></blockquote><p>8.2 common 公共的方法</p><blockquote><p>封装一个读取Excel表格数据的函数</p><p>对Excel表格数据的读取需要用到一个库——xlrd库import xlrd</p><p>def get_excel_value(i):’’’<br>读取表中一行的数据<br>:return:返回2，3行数据<br>‘’’<br>filename &#x3D; r”..&#x2F;testdata&#x2F;jiekou.xls” #文件要用相对路径<br>book &#x3D; xlrd.open_workbook(filename) # 打开一个工作薄，不需要手动进行关闭# sheet &#x3D; book.sheet_by_name(“Sheet1”) 根据工作表的名字，获取一个工作表对象<br>sheet &#x3D; book.sheet_by_index(0) # 获取一个工作表，以index的方式，这里是获取第1个工作表<br>return sheet.cell_value(i,1),sheet.cell_value(i,2)</p><p>print(sheet.nrows) #打印所有行</p><p>print(sheet.ncols) #打印所有列</p><p>print(sheet.row_values(0)) #打印第一行</p><p>print(sheet.col_values(0)) #打印第一列</p><p>print(sheet.cell_value(0,1)) #打印第一行，第二列</p><p>for i in range(1, sheet.nrows):</p><p>print(sheet.cell_value(i,1),sheet.cell_value(i,2))# 打印单元格[所有数据]的值</p><p>str&#x3D;’(sheet.cell_value(i,1),sheet.cell_value(i,2)))’</p><p>print(str)</p><p>for i in range(1, sheet.nrows):</p><h1 id="for-j-in-range-0-sheet-ncols"><a href="#for-j-in-range-0-sheet-ncols" class="headerlink" title="for j in range(0, sheet.ncols):"></a>for j in range(0, sheet.ncols):</h1><p>print(sheet.cell_value(i,j)) # 打印单元格[i,j]的值</p><p>———————————————————————————————import pymysql<br>from config.sql_conf import *<br>def get_sql(sql):’’’<br>:param sql:运行查询的sql语句<br>:return:数据库查询结果<br>‘’’<br>#建立一个连接对象host, user, password, database, port, charset&#x3D;sql_confdb&#x3D;pymysql.connect(host&#x3D;host,user&#x3D;user,password&#x3D;password,database&#x3D;database,port&#x3D;port,charset&#x3D;charset)#建立一个游标cursor&#x3D;db.cursor#执行sql语句cursor.execute(sql)#把sql运行的数据保存在data变量里面data&#x3D;cursor.fetchall #获取查询出的所有的值cursor.close #关闭游标<br>db.close #关闭数据库连接<br>return data</p><p>print(get_sql(“SELECT help_topic_id FROM help_topic WHERE Name&#x3D;’MOD’”)) #执行sql语句</p><p>print(type(get_sql(“SELECT help_topic_id FROM help_topic WHERE Name&#x3D;’MOD’”)))</p></blockquote><p>8.3 estdata 测试数据</p><p>主要存放xls，txt，csv测试数据</p><p><img src="/assets/2/image-20220516210004-huegsxl.png" alt="image.png"></p><p>8.4 test_case测试用例</p><blockquote><p>from common.get_mysql import get_sql<br>from config.cof import server_ip<br>from common.get_excel import *from config.sql_conf import *<br>import requests# user_id&#x3D;get_sql(“SELECT help_topic_id FROM help_topic WHERE Name&#x3D;’MOD’”)#提取数据库数据</p><p>print(user_id)#打印结果</p><p>assert get_sql(“SELECT help_topic_id FROM help_topic WHERE Name&#x3D;’MOD’”)#断言数据库的数据是否存在</p><p>def test_aokao_login:url&#x3D;server_ip+’&#x2F;service&#x2F;user&#x2F;login’<br>username,password&#x3D;get_excel_value(1) #读取文件第二行数据<br>json&#x3D;{“head”:{“accessToken”:””,”lastnotice”:0,”msgid”:””},<br>“body”:{“username”:username,”password”:password,”forceLogin”:0}<br>}# usernamepassword&#x3D;get_excel_value(4)[0] #读取文件第二行数据</p><p>print(type(usernamepassword))</p><p>#把str类型转为字典格式 eval 函数# json&#x3D;eval(usernamepassword)r&#x3D;requests.post(url&#x3D;url,json&#x3D;json)print(r.text)</p><p>assert r.status_code&#x3D;&#x3D;200 #断言状态码是否等于200<br>assert ‘“accessToken”:”89a08bff-15d7-4d7a-9967-0b5f4fb699ce”,’ in r.text #断言返回信息是否包含accesstoken<br>def test_aokao_registadd:url &#x3D; server_ip+’&#x2F;service&#x2F;registration&#x2F;registadd’<br>data &#x3D; {“head”: {“lastnotice”: 0, “msgid”: “”, “accessToken”: “89a08bff-15d7-4d7a-9967-0b5f4fb699ce”},<br>“body”: {“clinicid”: “978f661e-1782-43bd-8675-b0ff1138ab7c”, “deptid”: “09b8515b-b01b-4771-9356-aed6b5aa01bf”,<br>“doctorid”: “65ac0251-10ff-473a-af8a-20e8969176f7”, “registtype”: 0, “card_num”: “”, “bcc334”: “”,<br>“patientopt”: 1, “bkc368”: “1”,<br>“patient”: {“cardid”: “”, “medicalcardid”: “”, “label”: “”, “sourcetype”: 1, “nationid”: “01”,<br>“maritalstatus”: 0, “address”: “”, “company”: “”, “jobname”: “”, “email”: “”,<br>“remark”: “”, “bcc334”: “”, “name”: “11”, “gender”: 1, “phone”: “”,<br>“birthdate”: “2020-03-23”, “patienttype”: 1, “szsbcardid”: “”}}<br>}r &#x3D; requests.post(url&#x3D;url, json&#x3D;data, timeout&#x3D;0.09)<br>print(r.text)<br>print(r.cookies)<br>assert r.status_code &#x3D;&#x3D; 200 # 断言状态码是否等于200</p></blockquote><p>8.5 report 报告</p><p>主要存放html，xml报告</p><p><img src="/assets/2/image-20220516210059-45ve97t.png" alt="image.png"></p><p>8.6 run_case 测试执行</p><blockquote><p>import pytest<br>‘’’<br>测试文件以test_开头，（以—_test结尾也可以）<br>测试类以Test开头，并且不能带有init 方法<br>测试函数以test_开头<br>断言使用基本的assert即可<br>‘’’<br>#如何去运行测试用例，_test开头的函数就可以，判断用例运行是否成功，assert断言if <strong>name</strong>&#x3D;&#x3D;”<strong>main</strong>“:<br>#单个文件运行，运行添加，对应的文件路径，路径要用相对路径# pytest.main([‘..&#x2F;test_case&#x2F;&#x2F;test_case_01.py’])<br>#多个文件运行，运行添加多个对应的文件路径，列表的形式，去添加多个文件的路径# pytest.main([‘..&#x2F;test_case&#x2F;test_fore.py’,’..&#x2F;test_case&#x2F;Dynamic correlation_token.py’])<br>#运行整个目录，添加目录的路径pytest.main([‘..&#x2F;test_case&#x2F;‘,’–html&#x3D;..&#x2F;report&#x2F;report.html’,’–junitxml&#x3D;..&#x2F;report&#x2F;report.xml’])<br>‘’’<br>pytest生成报告：<br>1、生成html报告<br>‘–html&#x3D;..&#x2F;report&#x2F;report.html’<br>2、生成xml报告<br>‘–junitxml&#x3D;..&#x2F;report&#x2F;report.xml’<br>‘’’</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1、发送get请求&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;#导包&lt;br&gt;import requests&lt;br&gt;#定义一个urlurl &amp;#x3D; “&lt;a href=&quot;http://xxxxxxx&amp;quot;/&quot;&gt;http://xxxxxxx&amp;quot;&lt;/a&gt;&lt;br&gt;#</summary>
      
    
    
    
    <category term="05_测试工具" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="06_自动化" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="02_自动化实操" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/"/>
    
    <category term="02_API自动化" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/02-API%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="api自动化框架" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/02-API%E8%87%AA%E5%8A%A8%E5%8C%96/api%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>测试面试题精选【拼多多二面】</title>
    <link href="http://example.com/01_%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/02_%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA/10_%E6%A8%A1%E6%8B%9F%E9%9D%A2%E8%AF%95%E9%A2%98%E5%88%86%E6%9E%90/09_%E6%B5%8B%E8%AF%95%E9%9D%A2%E8%AF%95%E9%A2%98%E7%B2%BE%E9%80%89%E3%80%90%E6%8B%BC%E5%A4%9A%E5%A4%9A%E4%BA%8C%E9%9D%A2%E3%80%91/"/>
    <id>http://example.com/01_%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/02_%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA/10_%E6%A8%A1%E6%8B%9F%E9%9D%A2%E8%AF%95%E9%A2%98%E5%88%86%E6%9E%90/09_%E6%B5%8B%E8%AF%95%E9%9D%A2%E8%AF%95%E9%A2%98%E7%B2%BE%E9%80%89%E3%80%90%E6%8B%BC%E5%A4%9A%E5%A4%9A%E4%BA%8C%E9%9D%A2%E3%80%91/</id>
    <published>2022-05-16T12:29:03.176Z</published>
    <updated>2022-05-16T12:36:55.498Z</updated>
    
    <content type="html"><![CDATA[<p>面试一般分为技术面和hr面，形式的话很少有群面，少部分企业可能会有一个交叉面，不过总的来说，技术面基本就是考察你的专业技术水平的，hr面的话主要是看这个人的综合素质以及家庭情况符不符合公司要求，一般来讲，技术的话只要通过了技术面hr面基本上是没有问题（也有少数企业hr面会刷很多人）</p><p><img src="/assets/2/image-20220516203639-zpdniqr.png" alt="image.png"></p><p>我们主要来说技术面，技术面的话主要是考察专业技术知识和水平，下面是我们整理好的自动化测试岗的面试题。</p><p>1.如何把自动化测试在公司中实施并推广起来的？<br>1.项目组调研选择自动化工具并开会演示demo案例，我们主要是演示selenium和robotframework两种。</p><p>2.搭建自动化测试框架，在项目中逐步开展自动化。</p><p>3.把该项目的自动化流程、框架固化成文档</p><p>4.推广到公司的其它项目组应用</p><p>2.请描述一下自动化测试流程？<br>1.编写自动化测试计划</p><p>2.设计自动化测试用例</p><p>3.编写自动化测试框架和脚本</p><p>4.调试并维护脚本</p><p>5.无人值守测试</p><p>6.后期脚本维护（添加用例、开发更新版本）</p><p>3.自动化测试用例如何编写？以下答案二选一即可：<br>1.用例是自动化测试工程师自己设计的，一般刚开始已基本业务流程为主（登录–完成一个业务–退出）</p><p>2.从系统测试用例中进行筛选或由业务工程师提供</p><p>4.上一个项目中自动化测试的执行策略？<br>上一个项目中是定时执行的，设置的执行时间是晚上12点，执行完毕后会自动发送邮件通知</p><p>5.自动化测试发现BUG多吗？<br>不多，因为之前项目组是把已经测试通过的基本功能再进行自动化脚本编写和在后续版本执行自动化测试，它主要是保证已经测试通过的功能在新版本更新后没有问题。</p><p>6.你觉得自动化测试的价值在哪里？你们公司为什么要做自动化测试？<br>引用自动化测试之后，能代替大量繁琐的回归测试工作，把业务测试人员解放出来，既而让业务测试人员把精力集中在复杂的业务功能模块上，自动化测试一般是对稳定下来的功能进行自动化，保证不会因为产品的更新导致之前稳定下来的功能出现BUG</p><p>7.自动化测试有误报过bug吗？产生误报怎么办？<br>有误报过，有时候自动化测试报告中显示发现了bug,实际去通过手工测试去确认又不存在该bug。</p><p>误报原因一般是：</p><p>1.元素定位不稳定，需要尽量提高脚本的稳定性；</p><p>2.开发更新了页面但是测试没有及时更新维护!</p><p>8.自动化测试过程中，你遇到了哪些问题，是如何解决的？<br>1.频繁地变更页面，经常要修改页面对象类里面的代码</p><p>2.自动化测试偶尔出现过误报</p><p>3.自动化测试结果出现覆盖的情况：Jenkins根据时间建立文件夹</p><p>4.自动化测试代码维护比较麻烦</p><p>5.自动化测试进行数据库对比数据</p><p>9.在上一家公司做自动化测试用的什么框架？<br>可以说出以下自己擅长的一种：</p><p>1.python+selenium+unittest+htmltestrunner</p><p>2.python+selenium+pytest+allure</p><p>robotframework+Selenium3<br>10.在selenium自动化测试中，你一般完成什么类型的测试？自动化覆盖率？<br>主要是冒烟测试和回归测试。回归测试主要写一些功能稳定的场景，通过自动化手段去实现，节约测试时间。因为自动化测试用例也是在不断的更新和迭代，没有刻意去统计，大概在30%-40%左右！</p><p>11.在执行脚本过程，如何实现当前元素高亮显示？<br>这个其实就是利用javaScript去修改当前元素的边框样式来到达高亮显示的效果，</p><p>12.如果一个元素无法定位，你一般会考虑哪些方面的原因？<br>1.页面加载元素过慢，加等待时间</p><p>2.页面有frame框架页，需要先跳转入frame框架再定位</p><p>3.可能该元素是动态元素，定位方式要优化，可以使用部分元素定位或通过父节点或兄弟节点定位。</p><p>4.可能识别了元素，但是不能操作，比如元素不可用，不可写等。需要使用js先把前置的操作完成，</p><p>13.元素定位方法你熟悉的有哪些？（八大元素定位方式）<br>id ，name， class， tag， link_text， Partial link text， css， xpath</p><p>14.遇到frame框架页面怎么处理？<br>先用driver.switch_to.frame()跳转进去frame，</p><p>然后再操作页面元素，</p><p>操作完后使用driver.swith_to.default_content()跳转出来</p><p>15.遇到alert弹出窗如何处理？<br>使用driver.switch_to.alert方法先跳转到alert弹出窗口</p><p>然后再通过accept点击确定按钮，通过dismiss点击取消难，通过text()获得弹出窗口的文本。</p><p>16.如何处理多窗口？<br>这个多窗口之间跳转处理，我们在项目中也经常遇到。就是，当你点击一个链接，这个链接会在一个新的tab打开，然后你接下来要在新tab打开的页面查找元素，</p><p>1.我们在点击链接前使用driver.current_window_handle获得当前窗口句柄。</p><p>2.再点击链接。点击后通过driver.window_handles获得所有窗口的句柄，</p><p>3.然后再循环找到新窗口的句柄，然后再通过driver.switch_to.window()方法跳转到新的窗口。</p><p>17.怎么验证元素是enable&#x2F;disabled&#x2F;checked状态？<br>定位元素后：分别通过isEnabled()，isSelected()，isDisplayed()三个方法进行判断。</p><p>18.如何处理下拉菜单？<br>在Selenium中有一个叫Select的类，这个类支持对下拉菜单进行操作。使用方法如下：</p><p>1.定位元素</p><p>2.把定位的元素转化成Select对象。</p><p>sel &#x3D; Select(定位的元素对象)</p><p>3.通过下标或者值或者文本选中下拉框。</p><p>sel.select_by_index(index);<br>sel.select_by_value(value);<br>sel.select_by_visible_text(text);</p><p>19.在日历这种web 表单你是如何处理的?<br>首先要分析当前网页试用日历插件的前端代码，看看能不能通过元素定位，点击日期实现，如果不能，可能需要借助javascript。还有些日历控件一个文本输入框，可以直接sendKeys()方法来实现传入一个时间的数据。</p><p>20.举例一下说明一下你遇到过那些异常<br>常见的selenium异常有这些：</p><p>NoSuchElementException：没有该元素异常<br>TimeoutException ：超时异常</p><p>ElementNotVisibleException ：元素不可见异常<br>NoSuchAttributeException ：没有这样属性异常<br>NoSuchFrameException ：没有该frame异常</p><p>21.关闭浏览器中quit和close的区别<br>简单来说，两个都可以实现退出浏览器session功能，close是关闭你当前聚焦的tab页面，而quit是关闭全部浏览器tab页面，并退出浏览器session。知道这两个区别，我们就知道quit一般用在结束测试之前的操作，close用在执行用例过程中关闭某一个页面的操作。</p><p>22.在Selenium中如何实现截图，如何实现用例执行失败才截图<br>在Selenium中提供了一个get_screenshot_as_file()的方法来截图的，一般结合try&#x2F;except捕获异常时使用，进行错误截图。</p><p>23.如何实现文件上传？<br>定位元素后，直接使用send_keys()方法设置就行，参数为需要上传的文件的路径。</p><p>24.自动化中有哪三类等待？他们有什么特点？<br>1.线程等待（强制等待）如time.sleep(2)：线程强制休眠2秒钟，2秒过后，再执行后续的代码。建议少用。</p><p>2.imlicitlyWait（隐式等待）会在指定的时间范围内不断的查找元素，直到找到元素或超时，特点是必须等待整个页面加载完成。</p><p>3.WebDriverWait（显式等待）通常是我们自定义的一个函数代码，这段代码用来等待某个元素加载完成，再继续执行后续的代码</p><p>25.你写的测试脚本能在不同浏览器上运行吗<br>当然可以，我写的用例可以在在IE，火狐和谷歌这三种浏览器上运行。实现的思路是封装一个方法，分别传入一个浏览器的字符串，如果传入IE就使用IE，如果传入FireFox就使用FireFox，如果传入Chrome就使用Chrome浏览器，并且使用什么浏览器可以在总的ini配置文件中进行配置。需要注意的是每个浏览器使用的驱动不一样。</p><p>26.什么是PO模式，为什么要使用它<br>PO是Page Object 模式的简称，它是一种设计思想，意思是，把一个页面，当做一个对象，页面的元素和元素之间操作方法就是页面对象的属性和行为，PO模式一般使用三层架构，分别为：基础封装层BasePage，PO页面对象层，TestCase测试用例层。</p><p>27.你会封装自动化测试框架吗？<br>这个问得最多，甚至有很多公司直接卸载招聘要求中</p><p>当然可以，自动化框架主要的核心框架就是分层+PO模式：分别为：基础封装层BasePage，PO页面对象层，TestCase测试用例层。然后再加上日志处理模块，ini配置文件读取模块，unittest+ddt数据驱动模块，jenkins持续集成模式组成。</p><p>28.你们测试团队如何提升自己的测试技能？<br>更多是靠技术讨论和学习交流，除了我们公司内部群之外，我们还会有相关的技术交流群，可以和跟很多同行一起学习，完善自己的技能树。IT行业技术更新迭代本来就很快，所以更需要保持学习的心态。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;面试一般分为技术面和hr面，形式的话很少有群面，少部分企业可能会有一个交叉面，不过总的来说，技术面基本就是考察你的专业技术水平的，hr面的话主要是看这个人的综合素质以及家庭情况符不符合公司要求，一般来讲，技术的话只要通过了技术面hr面基本上是没有问题（也有少数企业hr面会刷</summary>
      
    
    
    
    <category term="01_测试初阶" scheme="http://example.com/categories/01-%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/"/>
    
    <category term="02_测试理论" scheme="http://example.com/categories/01-%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/02-%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA/"/>
    
    <category term="10_模拟面试题分析" scheme="http://example.com/categories/01-%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/02-%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA/10-%E6%A8%A1%E6%8B%9F%E9%9D%A2%E8%AF%95%E9%A2%98%E5%88%86%E6%9E%90/"/>
    
    
    <category term="测试理论" scheme="http://example.com/tags/%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>从未听过的10个软件测试面试问题</title>
    <link href="http://example.com/01_%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/02_%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA/10_%E6%A8%A1%E6%8B%9F%E9%9D%A2%E8%AF%95%E9%A2%98%E5%88%86%E6%9E%90/07_%E4%BB%8E%E6%9C%AA%E5%90%AC%E8%BF%87%E7%9A%8410%E4%B8%AA%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98%20-%20%E5%89%AF%E6%9C%AC%20(2)/"/>
    <id>http://example.com/01_%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/02_%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA/10_%E6%A8%A1%E6%8B%9F%E9%9D%A2%E8%AF%95%E9%A2%98%E5%88%86%E6%9E%90/07_%E4%BB%8E%E6%9C%AA%E5%90%AC%E8%BF%87%E7%9A%8410%E4%B8%AA%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98%20-%20%E5%89%AF%E6%9C%AC%20(2)/</id>
    <published>2022-05-16T12:29:02.086Z</published>
    <updated>2022-05-16T12:28:56.907Z</updated>
    
    
    
    
    <category term="01_测试初阶" scheme="http://example.com/categories/01-%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/"/>
    
    <category term="02_测试理论" scheme="http://example.com/categories/01-%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/02-%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA/"/>
    
    <category term="10_模拟面试题分析" scheme="http://example.com/categories/01-%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/02-%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA/10-%E6%A8%A1%E6%8B%9F%E9%9D%A2%E8%AF%95%E9%A2%98%E5%88%86%E6%9E%90/"/>
    
    
    <category term="测试理论" scheme="http://example.com/tags/%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>Python基础题目大全</title>
    <link href="http://example.com/01_%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/02_%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA/10_%E6%A8%A1%E6%8B%9F%E9%9D%A2%E8%AF%95%E9%A2%98%E5%88%86%E6%9E%90/08_Python%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE%E5%A4%A7%E5%85%A8/"/>
    <id>http://example.com/01_%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/02_%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA/10_%E6%A8%A1%E6%8B%9F%E9%9D%A2%E8%AF%95%E9%A2%98%E5%88%86%E6%9E%90/08_Python%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE%E5%A4%A7%E5%85%A8/</id>
    <published>2022-05-16T12:29:01.458Z</published>
    <updated>2022-05-16T12:35:20.944Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/assets/2/image-20220516203117-m9jj2bk.png" alt="image.png"></p><p>1、为什么学习Python？<br>人生苦短？人间不值得？想想自己的初心吧！</p><p>2、通过什么途径学习的Python？<br>官网、网上视频、学习网站、论坛、大牛的辅导</p><p>3、Python和Java、PHP、C、C#、C++等其他语言的对比？<br>（1）、python代码，简介，明确，优雅，简单易懂<br>（2）、开发效率高<br>（3）、可扩展性强</p><p>4、简述解释型和编译型编程语言？<br>解释型：在执行程序时，计算机才一条一条的将代码解释成机器语言给计算机来执行<br>编译型：是把源程序的每一条语句都编译成机器语言，并保存成二进制文件，这样计算机运行该程序时可以直接以机器语言来运行此程序，运行速度很快。</p><p>5、Python解释器种类以及特点？<br>Cpython，IPython，Jpython，pypy，Ironpython</p><p>Python是一门解释器语言，代码想运行，必须通过解释器执行，Python存在多种解释器，分别基于不同语言开发，每个解释器有不同的特点，但都能正常运行Python代码，以下是常用的五种Python解释器：</p><p>CPython：当 从Python官方网站下载并安装好Python2.7后，就直接获得了一个官方版本的解</p><blockquote><p>释器：Cpython，这个解释器是用C语言开发的，所以叫 CPython，在命名行下运行python，<br>就是启动CPython解释器，CPython是使用最广的Python解释器。</p></blockquote><p>IPython：IPython是基于CPython之上的一个交互式解释器，也就是说，IPython只是在交互方</p><blockquote><p>式上有所增强，但是执行Python代码的功能和CPython是完全一样的，好比很多国产浏览器<br>虽然外观不同，但内核其实是调用了IE。</p></blockquote><p>PyPy：PyPy是另一个Python解释器，它的目标是执行速度，PyPy采用JIT技术，</p><blockquote><p>对Python代进行动态编译，所以可以显著提高<br>Python代码的执行速度。</p></blockquote><p>Jython：Jython是运行在Java平台上的Python解释器，可以直接把Python代码编译成Java字节码执行。<br>IronPython：IronPython和Jython类似，只不过IronPython是运行在微软.Net平台上的Python解释器，</p><blockquote><p>可以直接把Python代码编译成.Net的字节码。</p></blockquote><p>在Python的解释器中，使用广泛的是CPython，对于Python的编译，除了可以采用以上解释器<br>进行编译外，技术高超的开发者还可以按照自己的需求自行编写Python解释器来执行Python代码，十分的方便！</p><p>6、位和字节的关系？<br>一个字节&#x3D;8位</p><p>7、b、B、KB、MB、GB 的关系？<br>1B(字节) &#x3D; 8b(位)<br>1KB &#x3D; 1024B<br>1MB &#x3D; 1024KB<br>1GB &#x3D; 1024MB</p><p>8、请至少列举5个 PEP8 规范<br>（1）、缩进：每一级4个缩进。连续跨行应该使用圆括号或大括号或者使用悬挂缩进。<br>（2）、代码长度约束</p><p>一行列数：PEP8 规定最大为79列，如果拼接url很容易超限<br>一个函数：不可以超过30行；直观来讲就是完整显示一个函数一个屏幕就够了，不需要上下拖动<br>一个类：不要超过200行代码，不要超过10个方法<br>一个模块：不要超过500行<br>（3）、import</p><p>不要在一句import中引用多个库<br>（4）、命名规范<br>（5）、注释</p><p>总体原则，错误的注释不如没有注释。所以当一段代码发生变化时，第一件事就是要修改注释！</p><p>9、通过代码实现如下转换：<br>答案： 二进制转换成十进制：v &#x3D; “0b1111011”</p><blockquote><p> print(int(‘0b1111011’,2))<br>十进制转换成二进制：v &#x3D; 18<br>print(bin(18))<br>八进制转换成十进制：v &#x3D; “011”<br>print(int(‘011’,8))<br>十进制转换成八进制：v &#x3D; 30<br>print(oct(30))<br>十六进制转换成十进制：v &#x3D; “0x12”<br>print(int(‘0x12’,16))<br>十进制转换成十六进制：v &#x3D; 87<br>print(hex(87))</p></blockquote><p>10、请编写一个函数实现将IP地址转换成一个整数。<br>如 10.3.9.12 转换规则为：</p><blockquote><p>10            00001010<br>3            00000011<br>9            00001001<br>12            00001100</p></blockquote><p>再将以上二进制拼接起来计算十进制结果：00001010 00000011 00001001 00001100 &#x3D; ？</p><p>答案：</p><p>def func(x):<br>lis &#x3D; x.strip().split(’.’)<br>li &#x3D; [bin(int(i)) for i in lis]<br>li2 &#x3D; [i.replace(‘0b’,(10-len(i))*‘0’) for i in li]<br>return int(’’.join(li2),2)<br>ret &#x3D; func(‘10.3.9.12’)<br>print(ret)</p><p>11、python递归的最大层数？<br>一般计算机默认的最大递归深度在1000左右，python最大递归深度一般在4000左右，跟计算<br>机的性能有关系，这个数不是一个定数，可通过一下方式测试</p><p>import sys<br>print(sys.getrecursionlimit())<br>print(sys.setrecursionlimit(10000))</p><p>12、求结果：<br>v1 &#x3D; 1 or 3 ————–&gt;1<br>v2 &#x3D; 1 and 3————–&gt;3<br>v3 &#x3D; 0 and 2 and 1——–&gt;0<br>v4 &#x3D; 0 and 2 or 1———&gt;1<br>v5 &#x3D; 0 and 2 or 1 or 4—-&gt;1<br>v6 &#x3D; 0 or Flase and 1—–&gt;False</p><p>13、ascii、unicode、utf-8、gbk 区别？<br>ASCII码：使用一个字节编码，所以它的范围基本是只有英文字母、数字和一些特殊符号 ，只有256个字符。<br>Unicode：能够表示全世界所有的字节<br>GBK：是只用来编码汉字的，GBK全称《汉字内码扩展规范》，使用双字节编码。<br>UTF-8：是一种针对Unicode的可变长度字符编码，又称万国码。</p><p>14、字节码和机器码的区别？<br>机器码：是电脑CPU直接读取运行的机器指令，运行速度最快，但是非常晦涩难懂<br>字节码：是一种中间状态（中间码）的二进制代码（文件）。需要直译器转译后才能成为机器码。</p><p>15、三元运算规则以及应用场景？<br>规则：为真时的结果 if 判定条件 else 为假时的结果<br>应用场景：在赋值变量的时候，可以直接加判断，然后赋值</p><p>16、列举 Python2和Python3的区别？<br>1、默认编码：2–&gt;ascii，3–&gt;utf-8</p><p>2、print的区别：python2中print是一个语句，不论想输出什么，直接放到print关键字后面即可。python3里，print()是一个函数，</p><p>像其他函数一样，print()需要你将要输出的东西作为参数传给它。</p><p>3、input的区别：</p><p>python2有两个全局函数，用在命令行请求用户输入。第一个叫input()，它等待用户输入一个python表达式(然后返回结果)。<br>第二个叫做raw_input(),用户输入什么他就返回什么。python3 通过input替代了他们。</p><p>4、字符串：python2中有两种字符串类型：Unicode字符串和非Unicode字符串。Python3中只有一种类型：Unicode字符串。</p><p>5、xrange()</p><p>python２里，有两种方法获得一定范围内的数字：range(),返回一个列表，还有xrange(),返回一个迭代器。<br>python3　里，range()返回迭代器，xrange()不再存在。</p><p>17、用一行代码实现数值交换：<br>a &#x3D; 1<br>b &#x3D; 2<br>答案：a &#x3D; 1</p><p>b &#x3D; 2<br>a,b &#x3D; b,a</p><p>18、Python3和Python2中 int 和 long的区别？<br>python2有非浮点数准备的int和long类型。int类型最大<br>值不能超过sys.maxint，而且这个最大值是平台相关的。<br>可以通过在数字的末尾附上一个Ｌ来定义长整型，显然，它比int类型表示的数字范围更大。在python3里，<br>只有一种整数类型int,大多数情况下，和python２中的长整型类似。<br>学习过程中会遇到很多问题，你可以到我们的 python学习 -q-u-n-784758214 ，基础，进阶。好友都会在里面交流，分享一些学习的方法和需要注意的小细节，每天也会准时讲一些项目实战案例。</p><p>19、xrange和range的区别？<br>python２里，有两种方法获得一定范围内的数字：range(),返回一个列表，还有xrange(),返回一个迭代器。<br>python3　里，range()返回迭代器，xrange()不再存在。</p><p>20、文件操作时：xreadlines和readlines的区别？<br>readlines返回一个list，xreadlines方法返回一个生成器</p><p>21、列举布尔值为False的常见值？<br>0, [] , () , {} , ‘’ , False , None</p><p>22、字符串、列表、元组、字典每个常用的5个方法？<br>字符串：repleace,strip,split,reverse,upper,lower,join…<br>列表：append,pop,insert,remove,sort,count,index…<br>元组：index,count,len(),dir()<br>字典：get,keys,values,pop,popitems,clear,update,items…</p><p>23、lambda表达式格式以及应用场景？<br>表达式格式：lambda后面跟一个或多个参数，紧跟一个冒号，以后是一个表达式。冒号前是参数，冒号后是返回值。例如：lambda x : 2x<br>应用场景：经常与一些内置函数相结合使用，比如说map(),filter(),sorted(),reduce()等</p><p>24、pass的作用？<br>1、空语句 do nothing<br>2、保证格式完整<br>3、保证语义完整</p><p>25、arg和*kwarg作用？<br>万能参数，解决了函数参数不固定的问题<br>*arg：会把位置参数转化为tuple<br>**kwarg：会把关键字参数转化为dict</p><p>26、is和&#x3D;&#x3D;的区别？<br>is:判断内存地址是否相等<br>&#x3D;&#x3D;：判断数值是否相等</p><p>27、简述Python的深浅拷贝以及应用场景？<br>copy()：浅copy，浅拷贝指仅仅拷贝数据集合的第一层数据<br>deepcopy():深copy,深拷贝指拷贝数据集合的所有层</p><p>28、Python垃圾回收机制？<br>python采用的是引用计数机制为主，标记-清除和分代收集(隔代回收、分代回收)两种机制为辅的策略<br>计数机制</p><p>Python的GC模块主要运用了引用计数来跟踪和回收垃圾。在引用计数的基础上，还可以通过“标记-清除”<br>解决容器对象可能产生的循环引用的问题。通过分代回收以空间换取时间进一步提高垃圾回收的效率。<br>标记-清除：</p><p>标记-清除的出现打破了循环引用，也就是它只关注那些可能会产生循环引用的对象<br>缺点：该机制所带来的额外操作和需要回收的内存块成正比。<br>隔代回收</p><p>原理：将系统中的所有内存块根据其存活时间划分为不同的集合，每一个集合就成为一个“代”，<br>垃圾收集的频率随着“代”的存活时间的增大而减小。也就是说，活得越长的对象，就越不可能是垃圾，<br>就应该减少对它的垃圾收集频率。那么如何来衡量这个存活时间：通常是利用几次垃圾收集动作来衡量，<br>如果一个对象经过的垃圾收集次数越多，可以得出：该对象存活时间就越长。</p><p>29、python的可变类型和不可变类型？<br>不可变类型（数字、字符串、元组、不可变集合）<br>可变类型（列表、字典、可变集合）</p><p>30、求结果：<br>v &#x3D; dict.fromkeys([‘k1’,‘k2’],[])<br>v[‘k1’].append(666)<br>print(v)<br>v[‘k1’] &#x3D; 777<br>print(v)</p><p>答案：{‘k1’:[666],‘k2’:[666]}<br>{‘k1’:777,‘k2’:[666]}<br>解析：formkeys()默认参数为可变数据类型时有坑</p><p>如果对python自动化测试、web自动化、接口自动化、移动端自动化、面试经验交流等等感兴趣的测试人，可以关注微信公众号：【伤心的辣条】，获取软件测试工程师大厂面试资料！</p><p>31、求结果：<br>def num():<br>return [lambda x: i*x for i in range(4)]<br>print([m(2) for m in num()])</p><p>答案：[6, 6, 6, 6]<br>解析： 问题的本质在与python中的属性查找规则，LEGB（local，enclousing，global，bulitin），<br>在上面的例子中，i就是在闭包作用域（enclousing），而Python的闭包是 迟绑定 ，<br>这意味着闭包中用到的变量的值，是在内部函数被调用时查询得到的<br>所以：[lambda x: i*x for i in range(4)]打印出来是含有四个内存地址的列表，每个内存地址中的i<br>在在本内存中都没有被定义，而是通过闭包作用域中的i值，当for循环执行结束后，i的值等于3，所以<br>再执行[m(2) for m in num()]时，每个内存地址中的i值等于3，当x等于2时，打印出来的结果都是6，<br>从而得到结果[6, 6, 6, 6]。</p><p>32、列举常见的内置函数？<br>map,filter,zip,len,bin,oct,hex,int,float,bool,sum,min,max,str,list,tuple,dict,range,next,hash,help,id…</p><p>33、filter、map、reduce的作用？<br>filter(function，iterable)过滤函数<br>map(function，iterable)循环函数<br>reduce(function, iterable)累积函数</p><p>34、一行代码实现9*9乘法表。<br>lis &#x3D; [’%s%s&#x3D;%s’%(i,j,ij) for i in range(1,10) for j in range(i,10)]</p><p>35、如何安装第三方模块？以及用过哪些第三方模块？<br>pip3 imstall 模块名<br>django，Matplotlib，Tornado，PyGame</p><p>36、至少列举8个常用模块都有那些？<br>os,sys,time,random,re,hashlib,logging,json,pickle…</p><p>37、re的match和search区别？<br>match:从字符串的开头位置匹配，必须以此为开头<br>search:从开头开始查，找到符合的就返回结果</p><p>38、什么是正则的贪婪匹配？<br>正则表达式一般趋向于最大长度匹配</p><p>39、求结果：<br>a. [ i % 2 for i in range(10) ] &#x3D;&gt;[0,1,0,1,0,1,0,1,0,1]<br>b. ( i % 2 for i in range(10) )&#x3D;&gt;返回一个生成器的内存地址</p><p>40、求结果：<br>a. 1 or 2 &#x3D;&#x3D;&#x3D;&gt;1<br>b. 1 and 2 &gt;2<br>c. 1 &lt; (22)&gt;false<br>d. 1 &lt; 2 &#x3D;&#x3D; 2&gt;ture</p><p>41、def func(a,b&#x3D;[]) 这种写法有什么坑？<br>def func(a,b&#x3D;[]):</p><p>b.append(a)<br>print(b)<br>函数的第二个默认参数是一个list，当第一次执行的时候实例化了一个list，<br>第二次执行还是用第一次执行的时候实例化的地址存储，以后每次实例化都是<br>学习过程中会遇到很多问题，你可以到我们的 python学习 -q-u-n-784758214 ，基础，进阶。好友都会在里面交流，分享一些学习的方法和需要注意的小细节，每天也会准时讲一些项目实战案例。</p><p>42、如何实现 “1,2,3” 变成 [‘1’,‘2’,‘3’] ?<br>a &#x3D; “1,2,3”<br>li &#x3D; a.split(’,’)</p><p>43、如何实现[‘1’,’2’,’3’]变成[1,2,3] ?<br>li &#x3D; [‘1’,‘2’,‘3’]<br>lis &#x3D; list(map(lambda x:int(x) li))</p><p>44、比较： a &#x3D; [1,2,3] 和 b &#x3D; [(1),(2),(3) ] 以及 b &#x3D; [(1,),(2,),(3,) ] 的区别？<br>a &#x3D; [1,2,3]正常的列表<br>b &#x3D; [(1),(2),(3)] 虽然列表的每个元素加上了括号，但是当括号内只有一个元素并且没有逗号时，其数据类型是元素本身的数据类型<br>b &#x3D; [(1,),(2,),(3,)]列表中的元素类型都是元组类型</p><p>45、如何用一行代码生成[1,4,9,16,25,36,49,64,81,100] ?<br>li &#x3D; [x*x for x in range(1,11)]</p><p>46、一行代码实现删除列表中重复的值 ?<br>li &#x3D; [1, 1, 1, 23, 3, 4, 4]<br>new_li &#x3D; list(set(li))<br>new_li.sort(key&#x3D;li.index)</p><p>47、如何在函数中设置一个全局变量 ?<br>使用python的内置语法 globals 全局变量</p><p>48、logging模块的作用？以及应用场景？<br>logging模块的作用：<br>1、程序调试<br>2、了解软件程序运行情况，是否正常<br>3、软件程序运行故障分析与问题定位<br>应用场景：网站的运维工作，程序实时监控</p><p>49、请用代码简答实现stack 。<br>def Stack(object):</p><p>def init(self):<br>self.stack &#x3D; []</p><p>def push(self,value):</p><p>进栈</p><p>self.stack.append(value)</p><p>def pop(self):</p><p>出栈</p><p>if self.stack:<br>self.stack.pop()<br>else:<br>raise LookupError(‘stack is empty!’)</p><p>def is_empty(self):</p><p>查看stack是否为空</p><p>reture bool(self.stack)</p><p>def top(self):</p><p>取出stack中最新的值</p><p>return self.stack[-1]</p><p>50、常用字符串格式化哪几种？<br>1、%s %d<br>2、format格式化输出<br>3、print(f’内容{变量名}’)</p><p>51、简述 生成器、迭代器、可迭代对象 以及应用场景？<br>生成器：在 Python 中，一边循环一边计算的机制，称为 生成器（generator），</p><p>通过next()取值，两种表现形式1、将列表生成式的[]改为()2、含有yield关键字的函数<br>应用场景：优化代码，节省内存<br>1<br>2<br>迭代器：是访问集合元素的一种方式。迭代器同时实现了__iter__和__next__方法<br>可迭代对象：只要实现了__iter__方法的对象就是可迭代对象</p><p>52、用Python实现一个二分查找的函数。<br>lis &#x3D; [0, 1, 3, 4, 5, 6, 7, 9, 10, 11,12,16,17]</p><p>def two_find(x, lis, start&#x3D;0, end&#x3D;None):</p><p>if end &#x3D;&#x3D; None:end &#x3D; len(lis) - 1<br>num &#x3D; (end - start) &#x2F;&#x2F; 2 + start<br>if end &gt; start:<br>if lis[num] &gt; x:<br>return two_find(x, lis, start&#x3D;start, end&#x3D;num)<br>elif lis[num] &lt; x:<br>return two_find(x, lis, start&#x3D;num + 1, end&#x3D;end)<br>elif lis[num] &#x3D;&#x3D; x:<br>return num<br>elif lis[end] &#x3D;&#x3D; x:return end<br>else:return None<br>print(two_find(17, lis))</p><p>53、谈谈你对闭包的理解？<br>在一个外函数中定义了一个内函数，内函数里运用了外函数的临时变量，并且外函数的返回值是内函数的引用。这样就构成了一个闭包。<br>一般情况下，在我们认知当中，如果一个函数结束，函数的内部所有东西都会释放掉，还给内存，局部变量都会消失。<br>但是闭包是一种特殊情况，如果外函数在结束的时候发现有自己的临时变量将来会在内部函数中用到，就把这个临时变量绑定给了内部函数，然后自己再结束。</p><p>54、os和sys模块的作用？<br>os模块负责程序与操作系统的交互，提供了访问操作系统底层的接口;<br>sys模块负责程序与python解释器的交互，提供了一系列的函数和变量，用于操控python的运行时环境。</p><p>55、如何生成一个随机数？<br>import random<br>def rdm(n):</p><p>lis &#x3D; []<br>for i in range(n):<br>n &#x3D; random.randint(1,9)<br>lis.append(str(n))<br>s &#x3D; ‘’.join(lis)<br>return int(s)</p><p>56、如何使用python删除一个文件？<br>import os<br>os.remove(r’path’)</p><p>57、谈谈你对面向对象的理解？<br>面向对象的程序设计的核心是对象（上帝式思维），要理解对象为何物，必须把自己当成上帝，上帝眼里世间存在的万物皆为对象，<br>不存在的也可以创造出来。对象是特征和技能的结合，其中特征和技能分别对应对象的数据属性和方法属性。<br>优点是：解决了程序的扩展性。对某一个对象单独修改，会立刻反映到整个体系中，如对游戏中一个人物参数的特征和技能修改都很容易。<br>缺点：可控性差，无法向面向过程的程序设计流水线式的可以很精准的预测问题的处理流程与结果，<br>面向对象的程序一旦开始就由对象之间的交互解决问题，即便是上帝也无法预测最终结果。<br>应用场景：需求经常变化的软件，一般需求的变化都集中在用户层，互联网应用，企业内部软件，游戏等都是面向对象的程序设计大显身手的好地方。</p><p>58、Python面向对象中的继承有什么特点？<br>1：在继承中基类的构造(init()方法)不会被自动调用，它需要在其派生类的构造中亲自专门调用。<br>2：在调用基类的方法时，需要加上基类的类名前缀，且需要带上self参数变量。</p><p>区别于在类中调用普通函数时并不需要带上self参数<br>3：Python总是首先查找对应类型的方法，如果它不能在派生类中找到对应的方法，它才开始到基类中逐个查找。</p><p>(先在本类中查找调用的方法，找不到才去基类中找)。</p><p>59、面向对象深度优先和广度优先是什么？<br>Python的类可以继承多个类，那么其寻找类方法的方式有两种：</p><p>当类是经典类时(主要在python2版本中的没有主动继承object的类)，多继承情况下，会按照深度优先方式查找<br>当类是新式类时(python3版本中的所有类和python2中主动继承object的类)，多继承情况下，会按照广度优先方式查找<br>简单点说就是：经典类是纵向查找，新式类是横向查找</p><p>60、面向对象中super的作用？<br>1、super在面向对象继承类中代指父类，书写方法super(类名,self).属性或者方法或super().属性或者方法<br>2、super方法可以增加类之间调用的灵活性，当父类名发生变化时不必修改<br>3、super方法在类的多继承时可以简化代码，避免代码冗余<br>4、super机制里可以保证公共父类仅被执行一次，执行的顺序遵循MRO，广度优先查询方法</p><p>如果对python自动化测试、web自动化、接口自动化、移动端自动化、面试经验交流等等感兴趣的测试人，可以关注微信公众号：【伤心的辣条】，获取软件测试工程师大厂面试资料！</p><p>61、是否使用过functools中的函数？其作用是什么？<br>functools用于高阶函数：指那些作用于函数或者返回其他函数的函数。通常情况下，只要是<br>可以被当做函数调用的对象就是这个模块的目标。</p><p>62、列举面向对象中带双下划线的特殊方法，如：new、init<br>new：构造方法，创建一个对象，实例化时第一个被执行，返回一个创建好的对象及__init__(self)的self，</p><p>只有继承了object的类才会有这个方法<br>init：初始化方法，__init__在__new__的基础上完成一些其它初始化的动作，__init__没有返回值</p><p>63、如何判断是函数还是方法？<br>函数和方法都封装了一些独立的功能，如果在类中定义的函数那就是方法(对象或者类名点方法名调用)，</p><p>否则就是函数(函数名()直接调用)</p><p>64、静态方法和类方法区别？<br>静态方法：是既不是用类中的属性又不使用对象中的属性，由类或者对象调用的方法，依赖python装饰器@staticmethod来实现<br>类方法：只使用类中的静态变量，一般都是由类调用，依赖python装饰器@classmethod来实现</p><p>65、列举面向对象中的特殊成员以及应用场景？<br>call：对象的构造方法，对象加上()，可以触发这个类的__call__方法。<br>len：内置函数的len函数是依赖类中的__len__方法<br>eq：判断值是否相等的时候依赖__eq__方法<br>hash:判断hash值是否相等的时候依赖__hash__方法(拓展：set的去重机制其实就是根据__hash__和__eq__方法实现的)<br>str：和str() print() %s 都是息息相关的，返回值一定是字符串类型<br>repr：和 repr() %r都是息息相关的，在没有__str__方法时，repr__可以完全取代__str。<br>del 析构方法，对应着一个对象的删除之前执行的内容</p><p>66、1、2、3、4、5 能组成多少个互不相同且无重复的三位数<br>count &#x3D; 0<br>for i in range(1,6):</p><p>for j in range(1,6):<br>for k in range(1,6):<br>if (i !&#x3D; j) and (i !&#x3D; k) and (j !&#x3D; k):<br>count +&#x3D; 1<br>if count % 6:<br>print(f’{i}{j}{k}’, end&#x3D;’|’)<br>else:<br>print(f’{i}{j}{k}’)<br>print(count)</p><p>67、什么是反射？以及应用场景？<br>定义：通过用字符串数据类型的变量名来访问这个变量的值，在python面向对象中的反射,通过字符串的形式操作对象相关的属性或方法.<br>应用场景：用于处理通过用户输入，文件读取，或者网络传输所得到的字符串形式的指令来完成对应的操作</p><p>68、metaclass作用？以及应用场景？<br>metaclass，直译为元类，简单的解释就是：当我们定义了类以后，就可以根据这个类创建出实例，<br>所以：先定义类，然后创建实例。但是如果我们想创建出类呢？那就必须根据metaclass创建出类，<br>所以：先定义metaclass，然后创建类。换句话说，你可以把类看成是metaclass创建出来的“实例”</p><p>69、用尽量多的方法实现单例模式。<br>1、基于__new__()方法</p><p>class Person:<br>def new(cls, *args, **kwargs):<br>if not hasattr(cls,cls._instance):</p><h1 id="cls-instance-x3D-object-new-cls"><a href="#cls-instance-x3D-object-new-cls" class="headerlink" title="cls._instance &#x3D; object.new(cls)"></a>cls._instance &#x3D; object.new(cls)</h1><p>cls._instance &#x3D; super().new(cls)<br>return cls._instance<br>2、基于模块导入方式，现在一个py文件中写好一个类，实例化一个对象。以后用这个类直接导入这个模块就是单例模式。<br>3、基于装饰器方法实现</p><p>def singleton(cls, *args, **kwargs):<br>instance_dic &#x3D; {}</p><blockquote><p>def inner(*args, **kwargs):<br>if cls not in instance_dic:<br>instance_dic[‘cls’] &#x3D; cls(*args, **kwargs)<br>return instance_dic[‘cls’]</p><p>return inner</p></blockquote><p>@singleton<br>class Person:<br>pass</p><p>70、装饰器的写法以及应用场景。<br>装饰器的写法：</p><p>def wrapper(func):<br>def inner(*args,**kwargs):<br>‘被装饰之前的操作’<br>ret &#x3D; func(*args,**kwargs)<br>‘被装饰之后的操作’<br>return ret<br>return inner<br>装饰器的应用场景：</p><p>比如注册登录、插入日志，性能测试，事务处理，缓存等等场景</p><p>71、异常处理写法以及如何主动跑出异常（应用场景）<br>异常处理的常规写法：</p><blockquote><p>try:<br>执行的主体函数<br>except Exception as e:<br>print(str(e))</p></blockquote><p>主动抛出异常：<br>raise TypeError(‘出现了不可思议的异常’)#TypeError可以是任意的错误类型</p><p>72、什么是面向对象的mro<br>MRO(Method Resolution Order 方法解析顺序)是面向对象中用于查询类的多继承的继承顺序的方法，<br>它是基于算法来实现的，不同的算法实现的MRO的顺序不同</p><p>73、isinstance作用以及应用场景？<br>isinstance作用是来判断一个对象是否是一个已知的类型</p><p>74、写代码并实现：<br>Given an array of integers, return indices of the two numbers such that they add up to a specific target.<br>You may assume that each input would have exactly one solution, and you may not use the same element twice.<br>Example:</p><blockquote><p>  Given nums &#x3D; [2, 7, 11, 15], target &#x3D; 9,<br>Because nums[0] + nums[1] &#x3D; 2 + 7 &#x3D; 9,<br>return [0, 1]</p></blockquote><p>代码实现</p><p>def func(li,target):</p><p>try:<br>for i in range(0,len(li)):<br>num &#x3D; target-li[i]<br>if num in li:<br>return [i,li.index(num)]<br>except:print(‘li类型为数组类型，内的元素需是整型，target也为整型，请检查’)<br>else:return None</p><p>75、json序列化时，可以处理的数据类型有哪些？如何定制支持datetime类型？<br>1、可以处理的数据类型是 string、int、list、tuple、dict、bool、null<br>2、定制支持datetime类型<br>————————–官方文档的memo———————————————–</p><blockquote><blockquote><blockquote><p>import json<br>class ComplexEncoder(json.JSONEncoder):<br>…     def default(self, obj):<br>…         if isinstance(obj, complex):<br>…             return [obj.real, obj.imag]<br>…         return json.JSONEncoder.default(self, obj)<br>…<br>dumps(2 + 1j, cls&#x3D;ComplexEncoder)<br>‘[2.0, 1.0]’<br>ComplexEncoder().encode(2 + 1j)<br>‘[2.0, 1.0]’<br>list(ComplexEncoder().iterencode(2 + 1j))<br>[‘[‘, ‘2.0’, ‘, ‘, ‘1.0’, ‘]’]</p></blockquote></blockquote></blockquote><p>import json<br>import datetime<br>ret &#x3D; datetime.datetime.now()<br>class CJsonEncoder(json.JSONEncoder):<br>def default(self, obj):<br>if isinstance(obj, datetime.date):<br>return obj.strftime(’%Y-%m-%d %H:%M:%S’)<br>else:<br>return json.JSONEncoder.default(self, obj)</p><p>print(json.dumps(ret,cls&#x3D;CJsonEncoder))</p><p>76、json序列化时，默认遇到中文会转换成unicode，如果想要保留中文怎么办？<br>在序列化是将json.dumps中的默认参数ensure_ascii改为False就可以保留中文了<br>json.dumps(obj,ensure_ascii&#x3D;False)<br>学习过程中会遇到很多问题，你可以到我们的 python学习 -q-u-n-784758214 ，基础，进阶。好友都会在里面交流，分享一些学习的方法和需要注意的小细节，每天也会准时讲一些项目实战案例。</p><p>77、什么是断言？应用场景？<br>assert 条件,‘自定义错误提示(可有可无)’ 例：assert 1 &#x3D;&#x3D; 0,‘这是一个低级的错误’<br>合约式设计是断言的经典应用，在一个正确的程序里，所有的前置条件和后置条件都将得到处理。</p><p>78、使用代码实现查看列举目录下的所有文件。<br>方法一：递归处理</p><p>import os<br>url &#x3D; r’C:\Users\Mr.Wang\PycharmProjects\untitled\前段学习’</p><p>def check_file(url,li &#x3D; []):<br>if os.path.isdir(url):<br>file_list &#x3D; os.listdir(url)<br>for ret in file_list:<br>base_url &#x3D; os.path.join(url,ret)<br>if os.path.isfile(base_url):<br>li.append(ret)<br>else: check_file(base_url)<br>return li<br>else:return os.path.basename(url)<br>方法二：堆栈的思想处理</p><p>import os<br>url &#x3D; r’C:\Users\Mr.Wang\PycharmProjects\untitled\python基础’</p><p>lis &#x3D; [url]<br>while lis:<br>url &#x3D; lis.pop()<br>ret_list &#x3D; os.listdir(url)<br>for name in ret_list:<br>abs_path &#x3D; os.path.join(url,name)<br>if os.path.isdir(abs_path):<br>lis.append(abs_path)<br>else:print(name)</p><p>79、简述 yield和yield from关键字。<br>yield 是一个类似 return 的关键字，只是这个函数返回的是个生成器当你调用这个函数的时候，<br>函数内部的代码并不立马执行 ，这个函数只是返回一个生成器对象，当你使用for进行迭代的时候，<br>函数中的代码才会执行</p><p>yield from 的主要功能是打开双向通道，把最外层的调用方与最内层的子生成器连接起来，<br>这样二者可以直接发送和产出值，还可以直接传入异常，而不用在位于中间的协程中添加大量处理异常的样板代码。<br>有了这个结构，协程可以通过以前不可能的方式委托职责。</p><p>如果对python自动化测试、web自动化、接口自动化、移动端自动化、面试经验交流等等感兴趣的测试人，可以关注微信公众号：【伤心的辣条】，获取软件测试工程师大厂面试资料！</p><p>80、代码实现六位随机验证码<br>import random<br>s &#x3D; ‘’<br>for i in range(6):<br>num &#x3D; random.randint(0,9)<br>alpha1 &#x3D; chr(random.randint(65,90))<br>alpha2 &#x3D; chr(random.randint(97,122))<br>ret &#x3D; random.choice([num,alpha1,alpha2])<br>s +&#x3D; str(ret)<br>print(s)</p><p>81、代码实现随机发红包功能<br>import random<br>def red_packge(money,num):<br>li &#x3D; random.sample(range(1,money100),num-1)<br>li.extend([0,money100])<br>li.sort()<br>return [(li[index+1]-li[index])&#x2F;100 for index in range(num)]</p><p>ret &#x3D; red_packge(100,10)<br>print(ret)</p><p>————————–生成器版——————————————-<br>import random<br>def red_packge(money,num):<br>li &#x3D; random.sample(range(1,money100),num-1)<br>li.extend([0,money100])<br>li.sort()<br>for index in range(num):<br>yield (li[index+1]-li[index])&#x2F;100</p><p>ret &#x3D; red_packge(100,10)<br>print(ret)</p><p>82、请尽可能列举python列表的成员方法，并给出列表操作的答案：<br>（1） a&#x3D;[1, 2, 3, 4, 5], a[::2]&#x3D;？ a[-2:]&#x3D;？<br>a[::2]&#x3D;[1,3,5],<br>a[-2:] &#x3D; [4,5]</p><p>（2）一行代码实现对列表a中的偶数位置的元素进行加3后求和？<br>sum([i+3 for i in a[::2]])</p><p>（3）将列表a的元素顺序打乱，再对a进行排序得到列表b，然后把a和b按元素顺序构造一个字典d。<br>import random<br>random.shuffle(a)<br>b&#x3D;a.sort()<br>d&#x3D;{}<br>for i in range(len(a)):d[a[i]] &#x3D; b[i]</p><p>83、Python自省<br>自省就是面向对象的语言所写的程序在运行时，就能知道对象的类型。也就是程序运行时能够获得对象的类型。比如type()，dir()，getattr()，hasattr()，isinstance()。</p><p>84、Python是如何进行内存管理的？<br>从三个方面来说,一对象的引用计数机制,二垃圾回收机制,三内存池机制</p><p>一、对象的引用计数机制<br>Python内部使用引用计数，来保持追踪内存中的对象，所有对象都有引用计数。<br>引用计数增加的情况：<br>1，一个对象分配一个新名称<br>2，将其放入一个容器中（如列表、元组或字典）<br>引用计数减少的情况：<br>1，使用del语句对对象别名显示的销毁<br>2，引用超出作用域或被重新赋值<br>sys.getrefcount( )函数可以获得对象的当前引用计数<br>多数情况下，引用计数比你猜测得要大得多。对于不可变数据（如数字和字符串），解释器会在程序的不同部分共享内存，以便节约内存。</p><p>二、垃圾回收<br>1，当一个对象的引用计数归零时，它将被垃圾收集机制处理掉。<br>2，当两个对象a和b相互引用时，del语句可以减少a和b的引用计数，并销毁用于引用底层对象的名称。然而由于每个对象都包含一个对其他对象的应用，因此引用计数不会归零，对象也不会销毁。（从而导致内存泄露）。为解决这一问题，解释器会定期执行一个循环检测器，搜索不可访问对象的循环并删除它们。</p><p>三、内存池机制<br>Python提供了对内存的垃圾收集机制，但是它将不用的内存放到内存池而不是返回给操作系统。<br>1，Pymalloc机制。为了加速Python的执行效率，Python引入了一个内存池机制，用于管理对小块内存的申请和释放。<br>2，Python中所有小于256个字节的对象都使用pymalloc实现的分配器，而大的对象则使用系统的malloc。<br>3，对于Python对象，如整数，浮点数和List，都有其独立的私有内存池，对象间不共享他们的内存池。也就是说如果你分配又释放了大量的整数，用于缓存这些整数的内存就不能再分配给浮点数。</p><p>85、介绍一下except的用法和作用？<br>try…except…except…else…<br>– 执行try下的语句，如果引发异常，则执行过程会跳到except语句。对每个except分支顺序尝试执行，如果引发的异常与except中的异常组匹配，执行相应的语句。如果所有的except都不匹配，则异常会传递到下一个调用本代码的最高层try代码中。<br>– try下的语句正常执行，则执行else块代码。如果发生异常，就不会执行<br>– 如果存在finally语句，最后总是会执行。</p><p>86、如何用Python来进行查询和替换一个文本字符串？<br>可以使用re模块中的sub()函数或者subn()函数来进行查询和替换，比replace的功能更强大！！！<br>格式：sub(replacement, string[,count&#x3D;0])（replacement是被替换成的文本，string是需要被替换的文本，count是一个可选参数，指最大被替换的数量）</p><p>import re<br>p&#x3D;re.compile(“blue|white|red”)<br>print(p.sub(‘colour’,‘blue socks and red shoes’))<br>print(p.sub(‘colour’,‘blue socks and red shoes’,count&#x3D;1))<br>subn()方法执行的效果跟sub()一样，不过它会返回一个二维数组，包括替换后的新的字符串和总共替换的数量</p><p>87、有没有一个工具可以帮助查找python的bug和进行静态的代码分析？<br>PyChecker是一个python代码的静态分析工具，它可以帮助查找python代码的bug, 会对代码的复杂度和格式提出警告<br>Pylint是另外一个工具可以进行codingstandard检查<br>————————————————<br>版权声明：本文为CSDN博主「测试萌萌」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/weixin_50829653/article/details/116309089">https://blog.csdn.net/weixin_50829653/article/details/116309089</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/assets/2/image-20220516203117-m9jj2bk.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;1、为什么学习Python？&lt;br&gt;人生苦短？人间不值得？想想自己的初心吧！&lt;/p&gt;
&lt;p&gt;2、通过什么途径学习的Py</summary>
      
    
    
    
    <category term="01_测试初阶" scheme="http://example.com/categories/01-%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/"/>
    
    <category term="02_测试理论" scheme="http://example.com/categories/01-%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/02-%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA/"/>
    
    <category term="10_模拟面试题分析" scheme="http://example.com/categories/01-%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/02-%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA/10-%E6%A8%A1%E6%8B%9F%E9%9D%A2%E8%AF%95%E9%A2%98%E5%88%86%E6%9E%90/"/>
    
    
    <category term="测试理论" scheme="http://example.com/tags/%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA/"/>
    
  </entry>
  
</feed>
