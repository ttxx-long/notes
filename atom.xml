<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>软件测试技术分享</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-05-14T17:49:35.984Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>yulong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>FinalShell使用</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04_Linux%E7%9B%B8%E5%85%B3/07_FinalShell/02_FinalShell%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04_Linux%E7%9B%B8%E5%85%B3/07_FinalShell/02_FinalShell%E4%BD%BF%E7%94%A8/</id>
    <published>2022-05-14T17:05:35.952Z</published>
    <updated>2022-05-14T17:49:35.984Z</updated>
    
    <content type="html"><![CDATA[<p>使用的前提是：cuda python pytorch都已经在服务器安装成功，环境也配置好了，具体不再赘述（友情提示：一定要有耐心~我也就……搞了一下午加一晚上而！已！╥﹏╥）。</p><p>打开finalshell</p><p><img src="/assets/2/image-20220515014332-czfewyb.png" alt="image.png"></p><p>打开环境，键入</p><blockquote><p>source  activate<br><br /></p></blockquote><p><img src="/assets/2/image-20220515014358-wnemb5p.png" alt="image.png"></p><ol start="3"><li>把要运行的程序的文件夹（我的是famework）直接上传到root文件夹</li><li>转到famework路径下，键入：</li></ol><blockquote><p>cd &#x2F;famework<br><br /></p></blockquote><p><img src="/assets/2/image-20220515014414-ulmdyv2.png" alt="image.png"></p><ol start="5"><li>比如我要运行train_add_test.py，键入：</li></ol><blockquote><p>python train_add_test.py</p></blockquote><p>训练ing…</p><p><img src="/assets/2/image-20220515014422-aeo5ljn.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;使用的前提是：cuda python pytorch都已经在服务器安装成功，环境也配置好了，具体不再赘述（友情提示：一定要有耐心~我也就……搞了一下午加一晚上而！已！╥﹏╥）。&lt;/p&gt;
&lt;p&gt;打开finalshell&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/2/i</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="04_Linux相关" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04-Linux%E7%9B%B8%E5%85%B3/"/>
    
    <category term="07_FinalShell" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04-Linux%E7%9B%B8%E5%85%B3/07-FinalShell/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>MobaXterm使用</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04_Linux%E7%9B%B8%E5%85%B3/06_MobaXterm/02_MobaXterm%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04_Linux%E7%9B%B8%E5%85%B3/06_MobaXterm/02_MobaXterm%E4%BD%BF%E7%94%A8/</id>
    <published>2022-05-14T17:05:30.185Z</published>
    <updated>2022-05-14T17:49:15.849Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/assets/2/image-20220515013806-lchx9th.png" alt="image.png"></p><p>MobaXterm作为一款优秀的远程连接工具，很多朋友在日常当中都会使用到，今天小编给大家介绍一下MobaXterm从下载到安装使用的图文教程，感兴趣的朋友，可以下载试试！</p><p>1、<strong>下载MobaXterm</strong></p><p>进到MobaXterm的官网，我们可以看到，官网为我们提供了两种形式的MobaXterm，一种是绿色版，一种是安装版，我个人比较喜欢绿色版，当切换工作机时，ssh记录等一些信息能够直接使用。</p><p><img src="/assets/2/image-20220515013824-0hyolsy.png" alt="image.png"></p><p>2、<strong>安装打开MobaXterm</strong></p><p>下载完成之后解压出来的目录是这样式的，版本的不同文件结构可能也会不同， 双击MobaXterm_Personal_9.4.exe即可打开软件，软件启动之后界面如图：</p><p><img src="/assets/2/image-20220515013838-yptgqgy.png" alt="image.png"></p><p><img src="/assets/2/image-20220515013843-ecy8xqr.png" alt="image.png"></p><p>3、<strong>建立SSH连接到一台服务器</strong></p><p>点击左上角的Session新建一个会话，在会话对话框中点击SSH，切换到SSH配置参数页。remote host填写远端服务器的地址，Specify username填写用户名，port填写端口，点击OK就可以登录到正常远端服务器了。</p><p><img src="/assets/2/image-20220515013849-ood24ow.png" alt="image.png"></p><p>4、<strong>终端服务</strong></p><p>连上远端服务器之后，便可以通过shell命令来操作我们的服务器了，比如ls列出当前目录下的所有文件，MobaXterm自带一套彩色的配置，这是我喜欢它的原因之一</p><p><img src="/assets/2/image-20220515013854-320ufds.png" alt="image.png"></p><p>5、<strong>sftp 文件传输服务</strong></p><p>终端操作只是我们平常管理服务器的一部分，还有很多什么我们需要从服务器下载文件或者是上传文件到服务器，尤其是上传文件，在部署工程的时候是很有必要的。当我们连接上服务器之后，可以看到右侧中部多了一个菜单项sftp，点击它默认列出了家目录下所有文件</p><p><img src="/assets/2/image-20220515013859-ulrva3r.png" alt="image.png"></p><p>6、<strong>上传下载文件</strong></p><p>上传文件：直接将要上传的文件拖拽到sftp面板就可以了</p><p>下载文件：在sftp面板选中想要下载的文件，右键download</p><p>其他操作：如新建文件夹什么的，右键面板空白处便可以找到</p><p><img src="/assets/2/image-20220515013904-9zuwjss.png" alt="image.png"></p><p><img src="/assets/2/image-20220515013911-xj5eps8.png" alt="image.png"></p><p><img src="/assets/2/image-20220515013917-kfguzhc.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/assets/2/image-20220515013806-lchx9th.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;MobaXterm作为一款优秀的远程连接工具，很多朋友在日常当中都会使用到，今天小编给大家介绍一下MobaXterm从</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="04_Linux相关" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04-Linux%E7%9B%B8%E5%85%B3/"/>
    
    <category term="06_MobaXterm" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04-Linux%E7%9B%B8%E5%85%B3/06-MobaXterm/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>PuTTY使用</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04_Linux%E7%9B%B8%E5%85%B3/05_PuTTY/02_PuTTY%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04_Linux%E7%9B%B8%E5%85%B3/05_PuTTY/02_PuTTY%E4%BD%BF%E7%94%A8/</id>
    <published>2022-05-14T17:05:26.666Z</published>
    <updated>2022-05-14T17:48:49.740Z</updated>
    
    <content type="html"><![CDATA[<p>使用<br>2.1 putty.exe<br>这是putty套件中最为常用的工具，打开的初始界面如下：</p><p><img src="/assets/2/image-20220515012655-vk2y0lo.png" alt="image.png"></p><p>这里输入远程服务器的IP地址，以及登陆的端口号（SSH默认端口号为22），点击Open后，在弹出的界面中输入账号和密码后就可以登陆。如下图：</p><p><img src="/assets/2/image-20220515012655-vk2y0lo.png" alt="image.png"></p><p>这里演示的登陆阿里云服务器，用户名为wxx，输入的密码会隐藏（即我们输入的密码不会显示）。<br>如果要登陆多台服务器，我们可以保存为session，如下图，保存了两个session（分别叫做：aliyun、django）：</p><p><img src="/assets/2/image-20220515012713-gekyuce.png" alt="image.png"></p><p>输入IP地址、端口、以及会话名称，最后保存即可，如下图：</p><p><img src="/assets/2/image-20220515012713-gekyuce.png" alt="image.png"></p><p>可以看到上面登陆终端后，字体很小，因此需要设置终端中字体的大小，这里很可能设置完成后，下次重启又会失效，这里介绍如何避免这个问题。</p><p>我这里一共有三个session（两个自己创建的，一个默认的Default Settings），每个都需要单独设置，可以理解为每个session的配置都是独立的。</p><p>这里以设置aliyun这个session为例，主要讲解如何设置终端的字体大小，步骤如下：</p><p>（1）点击aliyun，然后点击Load按钮，如下图：</p><p><img src="/assets/2/image-20220515012728-gq14vsv.png" alt="image.png"></p><p>（2）点击左侧菜单栏中的Window-&gt;Appearance，并改变其中的字体大小，如下图：</p><p><img src="/assets/2/image-20220515012728-gq14vsv.png" alt="image.png"></p><p>（3）点击左侧菜单栏中的Session，之后点击右侧的Save按钮，如下图：</p><p><img src="/assets/2/image-20220515012741-nj6tpoo.png" alt="image.png"></p><p>这样之后及时重启putty，对于aliyun这个session，设置都是生效的。其它的设置也是类似的步骤，只需要改变第（2）步即可。例如后面2.2节中私钥位置的配置。</p><p>注意：后面的psftp、pscp、plink命令都是针对Default Settings这个session进行操作的。这个后面还会说到。</p><p>2.2 puttygen.exe<br>我们每次登陆远程服务器都需要输入用户名和密码，特别是输入密码，十分麻烦，这个工具就是要解决这个问题的。</p><p>点击puttygen.exe，默认界面如下：</p><p><img src="/assets/2/image-20220515012750-lp53hyz.png" alt="image.png"></p><p>点击Generate按钮，鼠标在空白处随意移动，生成公钥和私钥，演示如下：</p><p><img src="/assets/2/698a913f8e5a448e89assets/2/6e5d1af-20220515012923-nqrb8p3.gif" alt="image.gif"></p><p>这里最终生成的界面如下：</p><p><img src="/assets/2/image-20220515012940-yowm3i6.png" alt="image.png"></p><p>可以看到加密算法使用的是RSA算法，关于该算法的讲解可以参考：RSA公钥加密算法。该算法会生成公钥和私钥，公钥可以公开，私钥不能公开。</p><p>需要将公钥上传到服务器上，私钥保存到本地即可。点击上图中的Save private key，如果弹出警告框，点击是即可，然后给保存的私钥命名保存即可。如下图是需要保存的私钥，和公钥（直接复制到txt中即可）：</p><p><img src="/assets/2/image-20220515012949-u8hr45j.png" alt="image.png"></p><p>我在电脑中公钥和私钥保存位置如下（私钥是点击按钮生成的，公钥是新建txt文件，然后将内容复制进去的）：</p><p><img src="/assets/2/image-20220515012957-m6rrdz4.png" alt="image.png"></p><p>接着可以配置免密登陆，首先使用用户名和密码登陆服务器，创建.ssh文件夹，文件夹中创建authorized_keys文件，该文件用于存放之前生成的公钥（可以存放多个公钥），命令如下：<br>mkdir .ssh<br>cd .ssh<br>touch authorized_keys<br>1<br>2<br>3<br>然后将之前生成的公钥复制到文件authorized_keys中。</p><p>之后需要配置需要免密登陆的session，设置只有第（2）步操作不同，如下图：</p><p><img src="/assets/2/image-20220515013005-ga7djxz.png" alt="image.png"></p><p>之后记得保存设置。</p><p>然后登陆，可以发现，只需要输入用户名即可登陆远程服务器，如下图：</p><p><img src="/assets/2/image-20220515013011-lmy5use.png" alt="image.png"></p><p>2.3 psftp.exe<br>用于在本地和服务器之间传递文件，可以在cmd窗口中直接输入命令psftp，需要输入用户名、密码进行登陆。如果在putty中配置了免密登陆，则只需要输入用户名即可。</p><p>注意：这里默认连接的远程服务器是putty中Default Settings中对应的服务器。</p><p>使用该命令进入的界面如下，可以通过help查看提供的命令：</p><p><img src="/assets/2/image-20220515013020-ppn9n6x.png" alt="image.png"></p><p>常用命令：</p><blockquote><p>pwd# 在远程服务器中显示当前所在目录<br>cd# 在远程服务器上切换目录<br>ls# 显示远程服务器文件夹中的文件</p><p>lpwd# 在本地中显示当前所在目录<br>lcd# 在本地切换目录<br>!dir# 显示本地文件夹中的文件</p><p>put# 上传本地文件到服务器<br>get# 下载服务器文件到本地</p></blockquote><p>文件、文件夹的传输：<br>（1）将本地文件上传到服务器中（D:\psftp\local_file.txt –&gt; &#x2F;home&#x2F;wxx&#x2F;）：</p><blockquote><p>put d:\psftp\local_file.txt</p></blockquote><p>（2）将远程服务器上的文件下载到本地（&#x2F;home&#x2F;wxx&#x2F;.bashrc –&gt; D:\psftp\）</p><blockquote><p>lcd d:\psftp# 本地目录切换<br>get .bashrc</p></blockquote><p>（3）将本地文件夹上传到服务器中（D:\psftp\local_test\ –&gt; &#x2F;home&#x2F;wxx&#x2F;）：</p><blockquote><p>put -r d:\psftp\local_test</p></blockquote><p>（4）将远程服务器上的文件夹下载到本地（&#x2F;home&#x2F;wxx&#x2F;.ssh&#x2F; –&gt; D:\psftp\）</p><blockquote><p>lcd d:\psftp# 本地目录切换<br>get -r .ssh</p></blockquote><p>2.4 pscp.exe<br>和psftp功能基本一致，用于本地和远程之间文件传输。</p><p>这里使用另外一台服务器django演示，这台服务器是通过docker搭建的，搭建在aliyun服务器上，有端口映射，aliyun上的20000端口映射到了docker内部的22端口。</p><p>如果没指定端口，则端口是putty中Default Settings这个session对应的端口。</p><p>文件、文件夹的传输（直接在cmd中输入下面的命令即可）：</p><p>（1）将本地文件上传到服务器中（D:\psftp\local_file.txt –&gt; &#x2F;home&#x2F;acs&#x2F;）：</p><blockquote><p>pscp -P 20000 d:\psftp\local_file.txt <a href="mailto:&#97;&#x63;&#x73;&#x40;&#x31;&#49;&#50;&#46;&#49;&#x32;&#54;&#x2e;&#x37;&#x38;&#46;&#49;&#x38;&#54;">&#97;&#x63;&#x73;&#x40;&#x31;&#49;&#50;&#46;&#49;&#x32;&#54;&#x2e;&#x37;&#x38;&#46;&#49;&#x38;&#54;</a>:&#x2F;home&#x2F;acs&#x2F;</p></blockquote><p>（2）将远程服务器上的文件下载到本地（&#x2F;home&#x2F;acs&#x2F;.bashrc –&gt; D:\psftp\）</p><blockquote><p>pscp -P 20000 <a href="mailto:&#x61;&#99;&#x73;&#64;&#49;&#49;&#50;&#x2e;&#x31;&#50;&#x36;&#46;&#55;&#56;&#x2e;&#49;&#56;&#x36;">&#x61;&#99;&#x73;&#64;&#49;&#49;&#50;&#x2e;&#x31;&#50;&#x36;&#46;&#55;&#56;&#x2e;&#49;&#56;&#x36;</a>:&#x2F;home&#x2F;acs&#x2F;.bashrc d:\psftp<br /></p></blockquote><p>（3）将本地文件夹上传到服务器中（D:\psftp\local_test\ –&gt; &#x2F;home&#x2F;acs&#x2F;）：</p><blockquote><p>pscp -P 20000 -r d:\psftp\local_test <a href="mailto:&#97;&#x63;&#115;&#x40;&#49;&#49;&#50;&#46;&#49;&#x32;&#54;&#46;&#55;&#56;&#x2e;&#x31;&#x38;&#x36;">&#97;&#x63;&#115;&#x40;&#49;&#49;&#50;&#46;&#49;&#x32;&#54;&#46;&#55;&#56;&#x2e;&#x31;&#x38;&#x36;</a>:&#x2F;home&#x2F;acs&#x2F;</p></blockquote><p>（4）将远程服务器上的文件夹下载到本地（&#x2F;home&#x2F;acs&#x2F;.ssh&#x2F; –&gt; D:\psftp\）</p><blockquote><p>pscp -P 20000 -r <a href="mailto:&#x61;&#x63;&#115;&#64;&#49;&#x31;&#x32;&#x2e;&#49;&#50;&#x36;&#46;&#x37;&#x38;&#46;&#49;&#x38;&#54;">&#x61;&#x63;&#115;&#64;&#49;&#x31;&#x32;&#x2e;&#49;&#50;&#x36;&#46;&#x37;&#x38;&#46;&#49;&#x38;&#54;</a>:&#x2F;home&#x2F;acs&#x2F;.ssh d:\psftp<br /></p></blockquote><p>2.5 plink.exe<br>用于在本地执行远程服务器的命令，直接在cmd中执行即可。</p><p>如果没指定端口，则端口是putty中Default Settings这个session对应的端口。</p><p>在本地执行aliyun上的命令：</p><blockquote><p>plink -P 22 <a href="mailto:&#x77;&#120;&#120;&#64;&#49;&#49;&#50;&#x2e;&#49;&#x32;&#54;&#x2e;&#x37;&#56;&#46;&#49;&#x38;&#54;">&#x77;&#120;&#120;&#64;&#49;&#49;&#50;&#x2e;&#49;&#x32;&#54;&#x2e;&#x37;&#56;&#46;&#49;&#x38;&#54;</a> “ls -al”</p></blockquote><p>在本地执行django上的命令：</p><blockquote><p>plink -P 20000 <a href="mailto:&#x61;&#99;&#x73;&#x40;&#49;&#x31;&#x32;&#x2e;&#49;&#x32;&#x36;&#46;&#x37;&#56;&#x2e;&#49;&#56;&#54;">&#x61;&#99;&#x73;&#x40;&#49;&#x31;&#x32;&#x2e;&#49;&#x32;&#x36;&#46;&#x37;&#56;&#x2e;&#49;&#56;&#54;</a> “ls -al”</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;使用&lt;br&gt;2.1 putty.exe&lt;br&gt;这是putty套件中最为常用的工具，打开的初始界面如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/2/image-20220515012655-vk2y0lo.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="04_Linux相关" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04-Linux%E7%9B%B8%E5%85%B3/"/>
    
    <category term="05_PuTTY" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04-Linux%E7%9B%B8%E5%85%B3/05-PuTTY/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>WinSCP使用</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04_Linux%E7%9B%B8%E5%85%B3/04_WinSCP/02_WinSCP%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04_Linux%E7%9B%B8%E5%85%B3/04_WinSCP/02_WinSCP%E4%BD%BF%E7%94%A8/</id>
    <published>2022-05-14T17:05:23.318Z</published>
    <updated>2022-05-14T17:48:13.744Z</updated>
    
    <content type="html"><![CDATA[<p>WinSCP使用<br>（1）双击启动软件<br>启动页面如下：</p><p><img src="/assets/2/image-20220515012216-79cotj4.png" alt="image.png"></p><p>（2）新建站点，输入主机名、用户名和密码，进行登录</p><p><img src="/assets/2/image-20220515012225-mzq8tjm.png" alt="image.png"></p><p>两种登录方式：<br>（1）点击登录<br>输入上述信息，直接点击登录（缺点是登录信息是一次性的，退出后，再次登录时需要重新填写主机名、用户名和密码）<br>（2）先保存站点信息，再点击登录（推荐使用）</p><p><img src="/assets/2/image-20220515012225-mzq8tjm.png" alt="image.png"></p><p><img src="/assets/2/image-20220515012225-mzq8tjm.png" alt="image.png"></p><p>（3）第一次登录，会弹出如下窗口，点击“是”</p><p><img src="/assets/2/image-20220515012250-avv2glb.png" alt="image.png"></p><p>(4)稍等片刻，登录成功，如下图:</p><blockquote><p>左侧是本地目录，右侧是远程服务端目录</p></blockquote><p><img src="/assets/2/image-20220515012315-y3d4t46.png" alt="image.png"></p><p>之后就可以进行文件的上传下载了。</p><p>本地文件上传到远端：直接鼠标拖动即可<br>远端文件下载到本地：远端文件右键删除</p><p><img src="/assets/2/image-20220515012324-8kchoxm.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;WinSCP使用&lt;br&gt;（1）双击启动软件&lt;br&gt;启动页面如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/2/image-20220515012216-79cotj4.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;（2）新建站点，输入主机名、用户名和密</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="04_Linux相关" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04-Linux%E7%9B%B8%E5%85%B3/"/>
    
    <category term="04_WinSCP" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04-Linux%E7%9B%B8%E5%85%B3/04-WinSCP/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>secureCRT使用</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04_Linux%E7%9B%B8%E5%85%B3/03_secureCRT/02_secureCRT%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04_Linux%E7%9B%B8%E5%85%B3/03_secureCRT/02_secureCRT%E4%BD%BF%E7%94%A8/</id>
    <published>2022-05-14T17:05:17.552Z</published>
    <updated>2022-05-14T17:47:59.686Z</updated>
    
    <content type="html"><![CDATA[<p>SecureCRT的使用教程</p><p><img src="/assets/2/image-20220515011727-2r89gr4.png" alt="image.png"></p><p><img src="/assets/2/image-20220515011733-w3iyx4t.png" alt="image.png"><br>完事之后点击connect<br><img src="/assets/2/image-20220515011739-vc9qzn9.png" alt="image.png"><br>输入账号密码登录<br><img src="/assets/2/image-20220515011720-epgnkxx.png" alt="image.png"></p><p>登录成功之后就可以进行你的操作了！！！！！！！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;SecureCRT的使用教程&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/2/image-20220515011727-2r89gr4.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/2/image-20220515011</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="04_Linux相关" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04-Linux%E7%9B%B8%E5%85%B3/"/>
    
    <category term="03_secureCRT" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04-Linux%E7%9B%B8%E5%85%B3/03-secureCRT/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>FinalShell安装</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04_Linux%E7%9B%B8%E5%85%B3/07_FinalShell/01_FinalShell%E5%AE%89%E8%A3%85/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04_Linux%E7%9B%B8%E5%85%B3/07_FinalShell/01_FinalShell%E5%AE%89%E8%A3%85/</id>
    <published>2022-05-14T17:02:19.741Z</published>
    <updated>2022-05-14T17:49:21.998Z</updated>
    
    <content type="html"><![CDATA[<p>良心国产软件，可替换xShell。xShell容易被起诉,动不动公司就要你卸载。毕竟别人家软件要收费的。试试FinalShell吧。免费的。</p><p>特色功能:<br>云端同步,免费海外服务器远程桌面加速,ssh加速,本地化命令输入框,支持自动补全,命令历史,自定义命令参数</p><p>Windwos下安装 直接双击</p><p><img src="/assets/2/image-20220515014047-es6mhl3.png" alt="image.png"></p><p> 然后无脑点击下一步，选择安装路径【建议非C盘】，然后继续…直到出现该提示，安装这个Winpcap.</p><p><img src="/assets/2/image-20220515014057-h56ym2f.png" alt="image.png"></p><p> 安装完成打开就是这样子。</p><p><img src="/assets/2/image-20220515014057-h56ym2f.png" alt="image.png"></p><p> 连接Linux，安下图点开配置信息连接即可</p><p><img src="/assets/2/image-20220515014110-dg00u5y.png" alt="image.png"></p><p><a href="http://www.hostbuf.com/">官网地址</a></p><p>Windows版下载地址:<br><a href="http://www.hostbuf.com/downloads/finalshell_install.exe">http://www.hostbuf.com/downloads/finalshell_install.exe</a></p><p>macOS版下载地址:<br><a href="http://www.hostbuf.com/downloads/finalshell_install.pkg" title="http://www.hostbuf.com/downloads/finalshell_install.pkg">http://www.hostbuf.com/downloads/finalshell_install.pkg</a><br><br /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;良心国产软件，可替换xShell。xShell容易被起诉,动不动公司就要你卸载。毕竟别人家软件要收费的。试试FinalShell吧。免费的。&lt;/p&gt;
&lt;p&gt;特色功能:&lt;br&gt;云端同步,免费海外服务器远程桌面加速,ssh加速,本地化命令输入框,支持自动补全,命令历史,自定义命</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="04_Linux相关" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04-Linux%E7%9B%B8%E5%85%B3/"/>
    
    <category term="07_FinalShell" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04-Linux%E7%9B%B8%E5%85%B3/07-FinalShell/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>MobaXterm安装</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04_Linux%E7%9B%B8%E5%85%B3/06_MobaXterm/01_MobaXterm%E5%AE%89%E8%A3%85/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04_Linux%E7%9B%B8%E5%85%B3/06_MobaXterm/01_MobaXterm%E5%AE%89%E8%A3%85/</id>
    <published>2022-05-14T17:02:17.985Z</published>
    <updated>2022-05-14T17:49:10.056Z</updated>
    
    <content type="html"><![CDATA[<p>一、下载MobaXterm安装包<br><a href="https://mobaxterm.mobatek.net/">点击进入官网</a></p><p><a href="https://mobaxterm.mobatek.net/download-home-edition.html">点击进入下载链接</a></p><p><img src="/assets/2/image-20220515013454-gupl7l1.png" alt="image.png"></p><p>二、MobaXterm安装</p><p><img src="/assets/2/image-20220515013508-3676aol.png" alt="image.png"></p><p><img src="/assets/2/image-20220515013514-p87kn4v.png" alt="image.png"></p><p><img src="/assets/2/image-20220515013523-df1jnq4.png" alt="image.png"></p><p><img src="/assets/2/image-20220515013528-jvm30bz.png" alt="image.png"></p><p><img src="/assets/2/image-20220515013535-thxefhh.png" alt="image.png"></p><p>三、MobaXterm的使用</p><p><code>程序第一次运行需要等待一会</code></p><p><img src="/assets/2/image-20220515013547-zu1luc9.png" alt="image.png"></p><p><code>会话 -&gt; SSH -&gt; 主机IP -&gt; 用户名称</code></p><p><img src="/assets/2/image-20220515013612-nfjqycx.png" alt="image.png"></p><p><code>输入密码</code></p><p><img src="/assets/2/image-20220515013632-hqmge5v.png" alt="image.png"></p><p><code>连接成功</code></p><p><img src="/assets/2/image-20220515013648-gmbca8t.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一、下载MobaXterm安装包&lt;br&gt;&lt;a href=&quot;https://mobaxterm.mobatek.net/&quot;&gt;点击进入官网&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://mobaxterm.mobatek.net/download-home-editi</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="04_Linux相关" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04-Linux%E7%9B%B8%E5%85%B3/"/>
    
    <category term="06_MobaXterm" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04-Linux%E7%9B%B8%E5%85%B3/06-MobaXterm/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>PuTTY安装</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04_Linux%E7%9B%B8%E5%85%B3/05_PuTTY/01_PuTTY%E5%AE%89%E8%A3%85/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04_Linux%E7%9B%B8%E5%85%B3/05_PuTTY/01_PuTTY%E5%AE%89%E8%A3%85/</id>
    <published>2022-05-14T17:02:16.183Z</published>
    <updated>2022-05-14T17:48:21.651Z</updated>
    
    <content type="html"><![CDATA[<p>安装<br>putty是一款windows上很好用的连接远程服务器的小工具。下载地址：<a href="https://www.puttygen.com/download-putty">网址</a>。进入网址，找到如下内容下载即可：</p><p><img src="/assets/2/image-20220515012518-lvxjhn1.png" alt="image.png"></p><p>也可以下载历史版本：<a href="http://www.putty.be/latest.html">历史版本下载</a>。</p><p>也可以直接下载我上传这个安装文件：<a href="https://download.csdn.net/download/weixin_42638946/66306771">网址</a>。下载解压后，双击.msi文件安装即可。</p><p>安装过程一路默认，最后会多出四个程序，如下图：</p><p><img src="/assets/2/image-20220515012633-d3x67pg.png" alt="image.png"></p><p>我们可以打开这些应用的位置，默认位置是：C:\Program Files\PuTTY，这个路径已经加入到环境变量中了，因此可以使用这个路径下的.exe作为命令，该文件夹中的内容如下：</p><p><img src="/assets/2/image-20220515012640-3ms22ya.png" alt="image.png"></p><p>这里简单说明一下次文件夹中6个.exe文件的作用：</p><p>putty.exe：远程连接服务器，最为常用；</p><p>puttygen.exe：生成公钥和私钥，用于免密登陆远程服务器；</p><p>psftp.exe：用于在本地、远程服务器之间相互传输文件；</p><p>pscp.exe：和psftp.exe作用一样，不过命令不同，该命令类似于linux中的scp命令；</p><p>plink.exe：用于在本地执行远程服务器的命令；</p><p>pageant.exe：用于管理秘钥。</p><p>下面介绍上图框出来的五个工具的使用方式。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;安装&lt;br&gt;putty是一款windows上很好用的连接远程服务器的小工具。下载地址：&lt;a href=&quot;https://www.puttygen.com/download-putty&quot;&gt;网址&lt;/a&gt;。进入网址，找到如下内容下载即可：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/as</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="04_Linux相关" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04-Linux%E7%9B%B8%E5%85%B3/"/>
    
    <category term="05_PuTTY" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04-Linux%E7%9B%B8%E5%85%B3/05-PuTTY/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>WinSCP安装</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04_Linux%E7%9B%B8%E5%85%B3/04_WinSCP/01_WinSCP%E5%AE%89%E8%A3%85/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04_Linux%E7%9B%B8%E5%85%B3/04_WinSCP/01_WinSCP%E5%AE%89%E8%A3%85/</id>
    <published>2022-05-14T17:02:14.454Z</published>
    <updated>2022-05-14T17:48:08.245Z</updated>
    
    <content type="html"><![CDATA[<p>目录<br>一、WinSCP下载<br>二、WinSCP安装<br><br /></p><p>WinSCP介绍：<br>WinSCP 是一个 Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端。同时支持 SCP 协议。它的主要功能是在本地与远程计算机间安全地复制文件，并且可以直接编辑文件。</p><p>一、WinSCP下载<br><a href="https://winscp.net/eng/download.php">访问官网下载地址</a>，点击要下载的版本，如下：</p><p><img src="/assets/2/image-20220515011917-bl7cxi7.png" alt="image.png"></p><p>下载的安装包如下：</p><p><img src="/assets/2/image-20220515011956-n7jpaza.png" alt="image.png"></p><p>二、WinSCP安装<br>双击安装包，进行安装<br>（1）点击接受</p><p><img src="/assets/2/image-20220515012007-dwxssmo.png" alt="image.png"></p><p>（2）安装类型：我这里选择自定义安装，点击下一步</p><p><img src="/assets/2/image-20220515012015-f9j7zb4.png" alt="image.png"></p><p>（3）配置安装路径，点击下一步</p><p><img src="/assets/2/image-20220515012036-gjt7x0e.png" alt="image.png"></p><p>（4）默认组件配置，点击下一步</p><p><img src="/assets/2/image-20220515012043-8zam0fn.png" alt="image.png"></p><p>（5）默认，直接点击下一步</p><p><img src="/assets/2/image-20220515012051-4bpql5j.png" alt="image.png"></p><p>（6）选择用户界面风格，点击下一步</p><p><img src="/assets/2/image-20220515012057-zpy08yw.png" alt="image.png"></p><p>（7）点击安装</p><p><img src="/assets/2/image-20220515012104-yvf0q2o.png" alt="image.png"></p><p>安装完成页面，如下</p><p><img src="/assets/2/image-20220515012114-k3nq41p.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;目录&lt;br&gt;一、WinSCP下载&lt;br&gt;二、WinSCP安装&lt;br&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;WinSCP介绍：&lt;br&gt;WinSCP 是一个 Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端。同时支持 SCP 协议。它的主要功能是在本地与远程计算机间安</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="04_Linux相关" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04-Linux%E7%9B%B8%E5%85%B3/"/>
    
    <category term="04_WinSCP" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04-Linux%E7%9B%B8%E5%85%B3/04-WinSCP/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>secureCRT安装</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04_Linux%E7%9B%B8%E5%85%B3/03_secureCRT/01_secureCRT%E5%AE%89%E8%A3%85/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04_Linux%E7%9B%B8%E5%85%B3/03_secureCRT/01_secureCRT%E5%AE%89%E8%A3%85/</id>
    <published>2022-05-14T17:02:12.398Z</published>
    <updated>2022-05-14T17:47:50.857Z</updated>
    
    <content type="html"><![CDATA[<p>SecureCRT安装全部教程(步骤详细)</p><p><a href="https://pan.baidu.com/s/1Zz006N_6yOPKUPl0jimoUg">下载安装包地址</a><br>提取码: tacx</p><p><a href="/assets/3/VanDyke.SecureCRT.and.SecureFX.8.3.0.Build.1514.rar">直接下载地址</a></p><p><img src="/assets/2/image-20220515010946-u5vixgy.png" alt="image.png"></p><p>双击安装程序</p><p><img src="/assets/2/image-20220515011334-3ahrvo7.png" alt="image.png"></p><p><img src="/assets/2/image-20220515011340-4zuq2tn.png" alt="image.png"></p><p><img src="/assets/2/image-20220515011346-i95a9jq.png" alt="image.png"></p><p>直接默认选中的点击下一步</p><p><img src="/assets/2/image-20220515011352-61ani2p.png" alt="image.png"></p><p><img src="/assets/2/image-20220515011357-6g4ln5o.png" alt="image.png"></p><p><img src="/assets/2/image-20220515011409-wb0hdch.png" alt="image.png"></p><p><img src="/assets/2/image-20220515011416-2ovv589.png" alt="image.png"></p><p>安装完成之后不要打开软件<br>将Patch.And.Keymaker-ZWT 压缩文件 复制到安装目录下面，然后解压到当前文件夹</p><p><img src="/assets/2/image-20220515011423-agob3my.png" alt="image.png"></p><p>以管理员身份运行这个文件<br>如果找不到这个运行程序可能是你的系统检测拦截了，找到这个文件并还原就可以了</p><p><img src="/assets/2/image-20220515011429-byfkq6j.png" alt="image.png"></p><p>点击Generate按钮，将name、company、license复制到一个记事本上，保存这些信息。然后点击Generate按钮。再点击Patch按钮，选择安装目录下的SecureCRT.exe，运行完成会提示成功。</p><p><img src="/assets/2/image-20220515011440-85u8h87.png" alt="image.png"></p><p><img src="/assets/2/image-20220515011446-coptn7t.png" alt="image.png"></p><p>提示成功！</p><p><img src="/assets/2/image-20220515011452-mjqj7e1.png" alt="image.png"></p><p>打开软件</p><p><img src="/assets/2/image-20220515011458-074wsnj.png" alt="image.png"></p><p><img src="/assets/2/image-20220515011504-djiv8un.png" alt="image.png"></p><p><img src="/assets/2/image-20220515011509-q4k4nmi.png" alt="image.png"></p><p>将刚刚从keygen 中复制出来的 license的信息粘贴进去</p><p><img src="/assets/2/image-20220515011539-j89jd9i.png" alt="image.png"></p><p><img src="/assets/2/image-20220515011544-v71ylr9.png" alt="image.png"></p><p><img src="/assets/2/image-20220515011544-v71ylr9.png" alt="image.png"></p><p>我不记得我有设置密码，我就选择了下面这个(你们跟我这个不一样的话，可以不用按我这个哈)</p><p><img src="/assets/2/image-20220515011611-0fk8j9v.png" alt="image.png"></p><p>是否要检查更新(我不更新…)</p><p><img src="/assets/2/image-20220515011618-i45za72.png" alt="image.png"></p><p>好了，到这就安装并且破解完成<br><br /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;SecureCRT安装全部教程(步骤详细)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://pan.baidu.com/s/1Zz006N_6yOPKUPl0jimoUg&quot;&gt;下载安装包地址&lt;/a&gt;&lt;br&gt;提取码: tacx&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/assets/3</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="04_Linux相关" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04-Linux%E7%9B%B8%E5%85%B3/"/>
    
    <category term="03_secureCRT" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04-Linux%E7%9B%B8%E5%85%B3/03-secureCRT/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>navicat简单教程</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03_%E6%95%B0%E6%8D%AE%E5%BA%93/01_navicat/02_navicat%E7%AE%80%E5%8D%95%E6%95%99%E7%A8%8B/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03_%E6%95%B0%E6%8D%AE%E5%BA%93/01_navicat/02_navicat%E7%AE%80%E5%8D%95%E6%95%99%E7%A8%8B/</id>
    <published>2022-05-14T16:56:39.665Z</published>
    <updated>2022-05-14T16:57:56.192Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>（1）连接</p><p>Navicate支持mysql、Postgresql、oracle、sqlserver等主流数据库，这里以连接mysql为例，连接名自己命名，主机为目标库的ip地址，mysql数据库的端口默认为3306，数据用户名和密码，点击确定即可连接。</p><p><img src="/assets/2/image-20220515005521-z6yy5a2.png" alt="image.png"></p><p>（2）数据传输功能</p><p>数据传输是将A库的表和数据传输到B库中，比较方便，需要注意的是：A库和B库的用户都要用读写的权限。</p><p><img src="/assets/2/image-20220515005526-a9gfees.png" alt="image.png"></p><p>点击下一步，选择需要传输的表，点击完成即可开始同步。</p><p><img src="/assets/2/image-20220515005531-upv9dyi.png" alt="image.png"></p><p>（3）数据同步</p><p>数据同步是将两个库的数据进行同步，有比对不同的数据、比对插入的数据、比对更新、删除的数据，比对相同的数据，这里以test库和test1库为例，将test库中的数据同步到test1库中，test中t_sys_city有一条数据，但在test1的t_sys_city表中没有这条数据，我们将test中新增的数据同步到test1中。</p><p><img src="/assets/2/image-20220515005536-2jdgue3.png" alt="image.png"></p><p>通过比对后我们可以看到数据的差异性，点击部署就可以将差异数据同步至test1库表中。</p><p><img src="/assets/2/image-20220515005541-dfeve5w.png" alt="image.png"></p><p>（4）数据备份和自动运行功能</p><p>数据备份功能搭配自动运行功能，可以定时对指定的数据进行备份，确保数据的安全性，关键时候我们可以恢复数据，确保系统能够正常运行，将风险降到最低。新建备份，然后选择自动运行。</p><p><img src="/assets/2/image-20220515005547-6ib8oqo.png" alt="image.png"></p><p>点击新建批处理作业。</p><p><img src="/assets/2/image-20220515005553-dz5vxzx.png" alt="image.png"></p><p>选择我们需要的备份，对其进行定时备份，点击保存。</p><p><img src="/assets/2/image-20220515005600-k56xxfz.png" alt="image.png"></p><p>点击保存后，选中记录，设置定时计划。</p><p><img src="/assets/2/image-20220515005605-5pwxnkm.png" alt="image.png"></p><p>在设置任务计划中点击触发器，点击左下角的新建，在新建触发器中即可设置定时任务的时间，可以按天、周、月来触发，根据自己的需求来设定。</p><p><img src="/assets/2/image-20220515005615-tljtvu2.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;使用方法&quot;&gt;&lt;a href=&quot;#使用方法&quot; class=&quot;headerlink&quot; title=&quot;使用方法&quot;&gt;&lt;/a&gt;使用方法&lt;/h2&gt;&lt;p&gt;（1）连接&lt;/p&gt;
&lt;p&gt;Navicate支持mysql、Postgresql、oracle、sqlserver等主流数据库</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="03_数据库" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03-%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="01_navicat" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03-%E6%95%B0%E6%8D%AE%E5%BA%93/01-navicat/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>phpMyAdmin使用</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03_%E6%95%B0%E6%8D%AE%E5%BA%93/04_phpMyAdmin/02_phpMyAdmin%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03_%E6%95%B0%E6%8D%AE%E5%BA%93/04_phpMyAdmin/02_phpMyAdmin%E4%BD%BF%E7%94%A8/</id>
    <published>2022-05-14T16:14:47.822Z</published>
    <updated>2022-05-14T16:50:12.127Z</updated>
    
    <content type="html"><![CDATA[<p>下面由<a href="https://www.php.cn/tool/phpmyadmin/"><strong>phpmyadmin入门教程</strong></a>栏目给大家介绍phpmyadmin工具的使用方法，希望对需要的朋友有所帮助！</p><p><img src="/assets/2/image-20220515004609-7g3f231.png" alt="image.png"></p><p><strong>什么是phpMyAdmin ？</strong></p><p>phpMyAdmin 是众多 MySQL图形化管理工具中使用最为广泛的一种，是一款使用PHP 开发的基于B&#x2F;S模式的 MySQL 客户端软件，该工具是基于 Web 跨平台的管理程序，并且支持简体中文，用户可以在官网上下载最新版本的。</p><p>phpMyAdmin 为Web 开发人员提供了类似 Access，SQL Server 的图形化数据库操作界面，通过该管理工具可以对 MySQL 进行各种操作，如何创建数据库，数据表和生成 MySQL 数据库脚本文件等。</p><p><strong>功能特点</strong></p><p>PHP是一个基于服务端来创建动态网站的脚本语言，您可以用PHP和HTML生成网站主页。当一个访问者打开主页时，服务端便执行PHP的命令并将执行结果发送至访问者的浏览器中，这类似于ASP和CoildFusion，然而PHP和他们不同之处在于PHP开放源码和跨越平台，PHP可以运行在WINDOWSNT和多种版本的UNIX上。它不需要任何预先处理而快速反馈结果，它也不需要mod_perl的调整来使您的服务器的内存映象减小。PHP消耗的资源较少，当PHP作为ApacheWeb服务器一部分时，运行代码不需要调用外部二进制程序，服务器不需要承担任何额外的负担。</p><p>除了能够操作您的页面外，PHP还能发送HIIP的标题。您可以设置cookie,管理数字签名和重定向用户，而且它提供了极好的连通性到其它数据库（还有ODBC），集成各种外部库来做用PDF文档解析XML的任何事情。</p><p>phpMyAdmin 是一个用PHP编写的软件工具，可以通过web方式控制和操作MySQL数据库。通过phpMyAdmin 可以完全对数据库进行操作，例如建立、复制和删除数据等等。如果使用合适的工具，MySQL数据库的管理就会变得相当简单。应用 MySQL 命令行方式需要对 MySQL 知识非常熟悉，对SQL语言也是同样的道理。不仅如此，如果数据库的访问量很大，列表中数据的读取就会相当困难。</p><p>当前出现很多GUI MySQL客户程序，其中最为出色的是基于 Web 的phpMyAdmin 工具。这是一种 MySQL数据库前台的基于PHP的工具。</p><p>PhpMyAdmin 的缺点是必须安装在 Web 服务器中，所以如果没有合适的访问权限，其它用户有可能损害到 SQL 数据。</p><p><strong>安装过程</strong></p><p>如果使用集成化安装包来配置PHP的开发环境， 就无需单独下载 phpMyAdmin 图形化管理工具，因为集成化的安装包中基本上都包含了图形化管理工具。我们这里就使用了集成化安装包phpStudy，</p><p>如果使用的不是集成化安装包，那么就需要自己安装phpMyAdmin图形化管理工具了，大家可以去官网下载最新的版本，具体安装过程我们在这里就不详细介绍了，大家可以阅读《<a href="http://www.php.cn/php-weizijiaocheng-357397.html">http://www.php.cn/php-weizijiaocheng-357397.html</a>》这篇文章，该篇详细介绍了phpMyAdmin安装过程！</p><p><strong>使用</strong></p><p>phpMyAdmin 是一个以PHP为基础，以Web-Base方式架构在网站主机上的MySQL的资料库管理具。</p><p>可以管理整个MySQL服务器(需要超级用户)，也可以管理单个数据库。为了实现后一种，你将需要合理设置MySQL用户，他只能对允许的数据库进行读&#x2F;写。那要等到你看过MySQL手册中相关的部分。</p><p>无论是在 Windows 操作系统还是 Linux 操作系统，phpMyAdmin图形化管理工具的使用方法都是一样。</p><p><strong>phpMyAdmin 图形化管理工具的可视化界面中操作数据库</strong></p><p><strong>操作数据库</strong></p><p>在浏览器的地址栏中输入：localhost&#x2F;phpMyAdmin&#x2F;，回车，就可以进入phpMyAdmin主界面了。接下来就可以进行 MySQL 数据库的操作了 。</p><p><strong>1.创建数据库</strong></p><p>在 phpMyAdmin 的主界面中，可以看见有 “语言-languange” 的下拉框，我们可以在下拉框中选择“中文-Chinese simplified”选项，然后上有个”服务器连接校对“ 我们一般会选择utf8_general_ci 简体中文编码格式，防止出现乱码的情况。</p><p><img src="/assets/2/image-20220515004630-491h0h4.png" alt="image.png"></p><p>当上面的设置好了，下面我开始创建数据库，点击左上方的数据库就会出现下面的界面：</p><p><img src="/assets/2/image-20220515004638-xn9e0jj.png" alt="image.png"></p><p>然后在文本框中输入自己的数据库名字，我们这里是”php.cn”,虽然我们在一开始就设置过了这个编码格式，但是为了万一，我们可以再在这里再次选择 “utf8_general_ci ”，然后点击创建按钮之后再左侧栏就可以看见你创建的数据库了，如下图：</p><p><img src="/assets/2/image-20220515004645-vsxnoml.png" alt="image.png"></p><p>我们可以点击一下我们创建的数据库，就可以对数据库进行管理了：</p><p><img src="/assets/2/image-20220515004653-ostl8e8.png" alt="image.png"></p><p>上面就是创建数据库成功了！</p><p><strong>2.修改数据库</strong></p><p>在数据库管理界面（上图），有个“操作”按钮，点击进入修改操作数据库的页面。</p><p>1.进入修改页面左上方可以对当前数据库执行创建数据表的操作，在创建数据表提示信息下的两个文本框中分别输入要创建的数据表名字和字段总数，点击“执行”按钮，就进入创建数据表结构页面，这个我们后面的文章会有详细介绍。</p><p>2.在进入修改页面的右上方可以对数据库重命名，在“将数据库改名为:”的文本框中输入心得数据库名字，单击“执行”就可以修改数据库名成功。</p><p><img src="/assets/2/image-20220515004702-j091x2w.png" alt="image.png"></p><p><strong>3.删除数据库</strong></p><p>同样是点击“操作”按钮进入修改页面，在“新建数据表”的正下面就是删除数据库，点击就可以删除数据库，</p><p><img src="/assets/2/image-20220515004708-68bi15z.png" alt="image.png"></p><p>注意：</p><p>数据库在我们日常开发中是非常重的，里面有很多数据，如果要删除一定要谨慎，一旦删除就不可回复，建议再删除之前先备份数据库！</p><p>操作数据表是以选择指定的数据库为前提，然后在该数据库中创建并管理数据表。下面我们将详细介绍如何创建，修改以及删除数据表！</p><p><strong>1.创建数据表</strong></p><p>下面我们使用用户的账户为例子，详细介绍数据表的创建方法。</p><p>在创建php.cn数据库之后，点击php.cn数据库，在“新建数据表”下面的文本框中输入数据表的名称以及字段数，然后点击“执行”按钮，就可以创建数据表，如下图：</p><p><img src="/assets/2/image-20220515004718-fhymxge.png" alt="image.png"></p><p>在成功创建数据表之后，将显示数据表结构的界面，在该界面的表单中输入各个字段的详细信息，包括字段名，数据类型，长度&#x2F;值，编码格式，是否为空和主键等等，以完成对表结构的详细设置，当所有的信息都填写完成之后，单击“保存”就可以创建数据表结构，如下图所显示，</p><p><img src="/assets/2/image-20220515004728-r2pn0im.png" alt="image.png"></p><p>技巧：</p><p>点击“保存”按钮之后，单击“数据表表名字”，可以将数据表结构以横版显示，便于编辑结构！</p><p><strong>2.修改数据表</strong></p><p>一个新的数据表创建后，进入到数据表结构页面中，在这里可以通过改变数据表的结构来修改表。可以执行添加列，删除列，索引列，修改列的数据类型或者字段的长度&#x2F;值等操作，如下图：</p><p><img src="/assets/2/image-20220515004736-x7msdes.png" alt="image.png"></p><p><strong>3.删除数据表</strong></p><p>删除数据表跟数据库大同小异，点击数据表进入数据表结构页面中，再右上角有一个“操作按钮”，点击进入操作页面，在该页面有对表的排序修改，可有将表移至其他数据库中，可以修改表选项，以及表维护，在右下角有一个“删除数据或者数据表”，点击“删除数据表”就可以删除数据表了！如下图：</p><p><img src="/assets/2/image-20220515004742-2nog8uq.png" alt="image.png"></p><p><strong>使用SQL语句操作数据表的图文详解</strong></p><p>单击 phpMyAdmin 主界面中的 “SQL”按钮，打开SQL 语句编辑区，输入完整的 SQL 语句，来实现数据的查询，添加，修改和删除操作！</p><p><strong>1.使用 SQL 语句插入数据</strong></p><p>在 SQL 语句编辑区中使用 insert 语句项数据表 php.cn 中插入数据，单击”执行”按钮，向数据表中插入一条数据，如果提交的 SQL 语句有错误的，那么系统就会给出警告，提示用户修改，如下图：</p><p><img src="/assets/2/image-20220515004750-bcfnxs2.png" alt="image.png"></p><p>如果 SQL语句没有错误提交后点击左上角的“浏览”按钮，进入数据展示页面，如下图：</p><p><img src="/assets/2/image-20220515004756-6dtr5vk.png" alt="image.png"></p><p>技巧：</p><p>为了编写方便，可以利用右侧的属性列表来选择要操作的列，只要选中要添加的列，双击其选项或者单击“&lt;&lt;”按钮添加列名称就可以了！</p><p><strong>2.使用 SQL 语句修改数据</strong></p><p>在 SQL编辑区使用 update 语句修改数据信息，如：id 为 1的用户的名称修改为“PHP中文网”，密码修改为：“654321”，具体看下图：</p><p><img src="/assets/2/image-20220515004804-4xt8p40.png" alt="image.png"></p><p>上面的图使之后成功之后的页面，这样就可以看下数据展示的页面，</p><p>修改之前的：</p><p><img src="/assets/2/image-20220515004811-nmao1ja.png" alt="image.png"></p><p>修改之后的：</p><p><img src="/assets/2/image-20220515004816-m5ja1xj.png" alt="image.png"></p><p>上面可以看出已经修改成功过了！</p><p><strong>3.使用 SQL 语句查询数据</strong></p><p>在 SQL 语句编辑区使用 select语句检索指定条件的数据信息，如：将di 小与 4 的信息全部显示出来，SQL语句如下图：</p><p><img src="/assets/2/image-20220515004823-rgxrpvm.png" alt="image.png"></p><p>单击“执行”按钮，实现如下图：</p><p><img src="/assets/2/image-20220515004830-6agys6e.png" alt="image.png"></p><p>除了对整个表的简单查询外，还可以进行一些复杂的条件查询（使用 where 子句提交 LIKE、ORDERBY，GROUP BY等条件查询语句）及多表查询！</p><p><strong>4.使用 SQL 语句删除数据</strong></p><p>在 SQL 语句编辑区使用 delete 语句检索指定条件的数据或者全部信息，比如：删除名称为 baidu.com 的信息，SQL语句如下图：</p><p><img src="/assets/2/image-20220515004837-jaehi21.png" alt="image.png"></p><p>点击“执行”之后会弹出一个框，问你是不是确认，点击确认之后，如下图：</p><p><img src="/assets/2/image-20220515004843-7l1zwqz.png" alt="image.png"></p><p>之后点击左上角的浏览，你会发现用户名为 baidu.com信息被删除了，如下图：</p><p><img src="/assets/2/image-20220515004854-wymjvpi.png" alt="image.png"></p><p>注意：如果 delete语句后面没有 where 条件语句，那么就会删除指定数据表中的全部数据。</p><p><strong>管理数据记录的图文详解</strong></p><p>在创建完数据库以及数据表后，可以通过操作数据表来管理数据记录。在本节文章中我们将分别介绍插入数据，浏览数据，搜索数据的方法！</p><p><strong>1.插入数据</strong></p><p>选择某一个数据表后，在导航位置有一个“插入”的按钮，单击进入插入页面，在页面中输入各个字段值，单击“执行”按钮，就可以插入数据，如下图所示：</p><p><img src="/assets/2/image-20220515004901-6ozodhv.png" alt="image.png"></p><p>最后点击“执行”按钮，就可以插入数据了，如下图：</p><p><img src="/assets/2/image-20220515004909-rfn41ti.png" alt="image.png"></p><p><strong>2.浏览数据</strong></p><p>选择某个数据或者是成功插入数据以后，点击导航栏的 “浏览”按钮，进入数据展示页面，可以单击数据列表中的“编辑”按钮，就可以对数据进行编辑，单击“删除”按钮，就可以删除该条记录！如下图：</p><p><img src="/assets/2/image-20220515004915-lz9qwqw.png" alt="image.png"></p><p><strong>3.搜索数据</strong></p><p>选择某一个数据表之后，在导航栏点击“搜索”按钮，进入搜索页面，可以在选择字段的列表框中选择一个或者多个列。如果选择多个列，按下 Ctrl键，然后依次单击要选择的字段名，查询结果将按照选择的字段名进行输出 。</p><p><img src="/assets/2/image-20220515004921-m20zqo6.png" alt="image.png"></p><p>在该界面中可以对记录按条件进行查询，查询方式有两种：</p><p>第一种：选择构建 where语句查询，直接在“添加搜索条件”文本框中输入查询语句，然后单击其后的执行按钮。</p><p>第二种：使用按列查询，选择查询的条件，并在文本框中输入要查询的值，单击“执行按钮”。</p><p><strong>导入和导出数据表的图文介绍</strong></p><p>导入和导出数据是互逆的两个操作，导入数据是通过扩展名为.sql的文件导入到数据库中，导出数据是将数据表结构，表记录储存为.sql的文件，可以通过导入导出实现数据库的备份和还原操作。下面我们将分别介绍导入导出的方法！</p><p><strong>1.导出数据表</strong></p><p>首先我们要选导出的数据表或者数据库，我们这里就以导出数据表为例子，选择好数据表之后，在导航栏中点击“导出”按钮，进入导出数据的页面，会有两个选择“快速”和“自定义”如下图：</p><p><img src="/assets/2/image-20220515004929-vpan9p1.png" alt="image.png"></p><p>我们正常都是直接选择快速，然后格式格式选择：SQL，最后点击执行，然后保存文件存放的位置！</p><p><strong>2.导入数据表</strong></p><p>先选择数据库，然后在导航栏中点击“导入”的按钮，进入导入的页面，然后点击“选择文件”按钮，找到.sql文件的位置，导入文件格式为SQL，点击“执行”按钮，就可以将数据表导入到数据库中，如下图：</p><p><img src="/assets/2/image-20220515004935-1r5fw9i.png" alt="image.png"></p><p>注意：</p><p>在导入文件前，首先确保数据库中存在与导入数据库同名的数据库，如果没有同名的，则要在数据库中创建一个名称与数据文件中数据库相同，然后在导入数据，另外，当前数据库中，不能与将要导入的数据库中的数据表重名的数据表存在，如果有重名的表存在，导入文件就会失败，并且提示错误信息。</p><p>总结：</p><p>phpMyAdmin是提供 MySQL数据库管理和操作的可视化工具，可以方便的对MySQL 数据库进行管理，通过学习本章的内容，小伙伴们可以独立安装和配置phpMyAdmin ，并且可以不在命令提示符下创建数据库和数据表的瓶颈，使用可视化的工具 phpMyAdmin 轻松的管理数据库和数据表。对于大型网站，可以使用导入导出文件来维护网站数据库！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;下面由&lt;a href=&quot;https://www.php.cn/tool/phpmyadmin/&quot;&gt;&lt;strong&gt;phpmyadmin入门教程&lt;/strong&gt;&lt;/a&gt;栏目给大家介绍phpmyadmin工具的使用方法，希望对需要的朋友有所帮助！&lt;/p&gt;
&lt;p&gt;&lt;img sr</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="03_数据库" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03-%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="04_phpMyAdmin" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03-%E6%95%B0%E6%8D%AE%E5%BA%93/04-phpMyAdmin/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>phpMyAdmin安装</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03_%E6%95%B0%E6%8D%AE%E5%BA%93/04_phpMyAdmin/01_phpMyAdmin%E5%AE%89%E8%A3%85/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03_%E6%95%B0%E6%8D%AE%E5%BA%93/04_phpMyAdmin/01_phpMyAdmin%E5%AE%89%E8%A3%85/</id>
    <published>2022-05-14T16:14:47.819Z</published>
    <updated>2022-05-14T16:50:12.078Z</updated>
    
    <content type="html"><![CDATA[<p>管理数据库是运行网站的一个复杂但必要的部分。幸运的是，有像phpMyAdmin这样的软件可以让这个过程变得更容易。这种流行的管理工具似乎很难学习，但是一旦掌握了它，访问和修改数据库将变得轻而易举。</p><p>最困难的部分是知道如何安装phpMyAdmin并在您的Web服务器上进行设置。如果你遇到了麻烦，你肯定不是唯一一个。</p><p>在本文中，我们将逐步向您展示如何在所有主要操作系统上安装phpMyAdmin，以及如何配置它。</p><ol><li>什么是phpMyAdmin？</li><li>phpMyAdmin要求</li><li>安装phpMyAdmin</li><li>如何访问phpMyAdmin</li><li>配置phpMyAdmin</li><li>Adminer：一个更简单的phpMyAdmin替代方案</li></ol><h3 id="什么是phpMyAdmin？"><a href="#什么是phpMyAdmin？" class="headerlink" title="什么是phpMyAdmin？"></a><strong>什么是phpMyAdmin？</strong></h3><p>每个网站背后都有一个数据库。该数据库允许您存储从用户帐户信息到您在网站上发布的帖子的数据。虽然有许多数据库服务，但MySQL是最受欢迎的一种。并且最有可能的是您的网站正在使用的那个。MariaDB是一种常见的替代方案。</p><p>直接与MySQL交互可能会很复杂且令人困惑，尤其是当您不熟悉网站管理时。但是与数据库交互通常是站点维护的必要部分。</p><p>phpMyAdmi旨在为MySQL带来一个基于浏览器的可视化界面，并让您更轻松地使用您的数据库。由于其受欢迎程度，许多网络托管服务包括访问phpMyAdmin。</p><h3 id="为什么需要phpMyAdmin？"><a href="#为什么需要phpMyAdmin？" class="headerlink" title="为什么需要phpMyAdmin？"></a>为什么需要phpMyAdmin？</h3><p>如果没有像phpMyAdmin这样的工具，您访问数据库的唯一选择就是使用命令行。这意味着您没有可视化界面——只有一个文本提示，您可以在其中输入命令。这样做可能会令人困惑，甚至可能导致意外破坏您的网站。</p><p>phpMyAdmin是免费和开源的。广泛的网络主机支持它，您甚至可以自己安装，而无需支付一分钱。一旦您安装了它，从可视化界面执行数据库命令就会更加直观。</p><p>您可以自己尝试phpMyAdmin，看看它是否是您想要使用的数据库管理器。一旦您试驾并决定喜欢它，您就可以在您的服务器上安装该工具。</p><h3 id="phpMyAdmin要求"><a href="#phpMyAdmin要求" class="headerlink" title="phpMyAdmin要求"></a><strong>phpMyAdmin要求</strong></h3><p>幸运的是，安装phpMyAdmin的要求相对简单。如果您有任何类型的Web服务器，您几乎肯定可以让它运行。以下是详细要求：</p><ul><li>任何类型的网络服务器</li><li>MySQL或MariaDB 5.5或更新版本</li><li>支持Javascript、cookies和Bootstrap 4.5（访问phpMyAdmin）的网络浏览器</li><li>PHP 7.2.5或更高版本</li><li>其他PHP要求：会话和SPL扩展、哈希、ctype和JSON支持。其他扩展如mbstring可以提高性能或添加额外的次要功能（完整列表请参见需求页面）。</li></ul><p><img src="/assets/2/image-20220515004413-g6yc9al.png" alt="image.png"><br>phpMyAdmin系统要求</p><p>在您尝试安装phpMyAdmin之前，请记住许多Web主机已经安装了它。</p><p>在安装phpMyAdmin之前，请检查您的网络主机的文档以确保他们尚未安装它。</p><h3 id="安装phpMyAdmin"><a href="#安装phpMyAdmin" class="headerlink" title="安装phpMyAdmin"></a><strong>安装phpMyAdmin</strong></h3><p>一旦您检查以确保您的服务器支持phpMyAdmin，就可以开始安装它了。Web服务器有多种操作系统，因此我们包含了所有最流行的操作系统，包括Windows、Mac和多个Linux发行版。</p><p>有了这个，这里是安装phpMyAdmin的分步说明。</p><h3 id="如何在Windows-10上安装phpMyAdmin"><a href="#如何在Windows-10上安装phpMyAdmin" class="headerlink" title="如何在Windows 10上安装phpMyAdmin"></a>如何在Windows 10上安装phpMyAdmin</h3><p>根据要求，您将需要一个带有PHP的Web服务器和一个数据库才能使用phpMyAdmin。虽然您无疑可以手动下载Apache、PHP和MySQL，但还有一个更简单的选择，可以在Windows计算机上启动和运行服务器。</p><p>WAMP（Windows、Apache、MySQL和PHP）是免费软件，可让您轻松创建具有所有先决条件的服务器。如果XAMPP for Windows（Apache、MariaDB、PHP 和 Perl）更适合您的需求，您也可以尝试它。</p><p><img src="/assets/2/image-20220515004419-c91rit5.png" alt="image.png"><br>WAMPserver的主页</p><p>下载其中之一后，只需安装它并完成设置过程即可。</p><p>假设您使用的是WAMP或XAMPP。这两个都已经与phpMyAdmin一起提供了！在您的浏览器中，导航到<code>http://localhost/phpMyAdmin</code> <strong>，</strong> 您应该会看到登录屏幕，确认您已正确安装所有内容。</p><h3 id="如何在Mac上安装phpMyAdmin"><a href="#如何在Mac上安装phpMyAdmin" class="headerlink" title="如何在Mac上安装phpMyAdmin"></a>如何在Mac上安装phpMyAdmin</h3><p>在Mac上获取phpMyAdmin有点不同。所有的先决条件都是一样的。但由于macOS附带Apache和PHP，因此您无需下载它们。</p><p>对于Mac，您有两个选择：您可以像使用其他操作系统一样使用XAMPP或手动安装所有内容。</p><p><img src="/assets/2/image-20220515004425-lhr83xw.png" alt="image.png"><br>XAMPP OSX下载列表</p><p>下载适用于OS X的XAMPP，打开它，然后将其放入您的应用程序文件夹中。</p><p>打开XAMPP Control<code>/Applications/XAMPP/manager-osx.app</code>以启动Apache和MySQL服务器。如果您随后访问<code>http://localhost</code>，您应该会发现一切正常，并且您的phpMyAdmin登录信息位于“工具”部分。</p><p>如果您改为手动安装phpMyAdmin，则该过程很简单。由于您已经拥有Apache和PHP，因此您只需要下载MySQL。确保从下拉列表中选择macOS。下载并安装该文件，按照说明进行操作，并记录提供给您的所有用户名和密码。</p><p>然后您可以打开系统偏好设置并启动MySQL以启动服务器。您还可以通过在终端中运行以下命令来启动Apache：</p><pre><code class="bash">sudo apachectl start</code></pre><p><img src="/assets/2/image-20220515004430-xuw8tyc.png" alt="image.png"><br>在Mac终端中启动Apache的命令</p><p>有了这个，剩下的就是安装phpMyAdmin。将文件夹重命名为“phpMyAdmin”并将其移动到 &#x2F;Library&#x2F;WebServer&#x2F;Documents&#x2F;。通过在浏览器中访问<a href="http://localhost/phpMyAdmin%E6%A3%80%E6%9F%A5%E4%BB%A5%E7%A1%AE%E4%BF%9D%E5%AE%83%E5%B7%B2%E6%AD%A3%E7%A1%AE%E5%AE%89%E8%A3%85%E3%80%82">http://localhost/phpMyAdmin检查以确保它已正确安装。</a></p><p>如果您安装了Homebrew，另一个选项是输入命令：brew install phpMyAdmin。</p><h3 id="如何在Ubuntu上安装phpMyAdmin"><a href="#如何在Ubuntu上安装phpMyAdmin" class="headerlink" title="如何在Ubuntu上安装phpMyAdmin"></a>如何在Ubuntu上安装phpMyAdmin</h3><p>作为最受欢迎和最容易使用的Linux发行版之一，Ubuntu是您服务器的不错选择。</p><p>虽然总是可以手动安装Apache和MySQL，但Linux有自己的标准服务器软件“堆栈”，称为LAMP（Linux、Apache、MySQL和PHP）。与WAMP和XAMPP不同，它不随phpMyAdmin一起提供，因此您需要手动安装它。幸运的是，Ubuntu允许您通过命令行进行所有安装。</p><p>首先，检查是否启用了tasksel。Ubuntu的服务器版本应该安装它，但如果你有桌面版本，你可以使用以下命令启用它：</p><pre><code class="bash">sudo apt-get install tasksel</code></pre><p>之后，您可以使用tasksel使用以下命令安装LAMP服务器：</p><pre><code class="bash">sudo tasksel install lamp-server</code></pre><p><img src="/assets/2/image-20220515004436-0f1gc0z.png" alt="image.png"><br>在Ubuntu中通过命令行安装LAMP服务器</p><p>现在，您可以安装phpMyAdmin：</p><pre><code class="bash">sudo apt install phpMyAdmin</code></pre><p>有了它，您就拥有了在计算机上运行服务器所需的所有文件。</p><h3 id="如何在CentOS-7上安装phpMyAdmin"><a href="#如何在CentOS-7上安装phpMyAdmin" class="headerlink" title="如何在CentOS 7上安装phpMyAdmin"></a>如何在CentOS 7上安装phpMyAdmin</h3><p>在CentOS 7上安装phpMyAdmin与其他发行版非常相似，但命令略有不同，因为该操作系统使用Yum而不是典型的apt命令。</p><p>也没有简单的LAMP堆栈可以一次性安装您需要的所有服务器组件，因此您需要手动下载Apache、MySQL和PHP。幸运的是，这些可以通过命令行轻松获得。</p><p>首先，让我们使用命令行下载LAMP堆栈，从Apache开始：</p><pre><code class="bash">sudo yum install httpd.service</code></pre><p>要启动Apache服务器并确保它在引导时运行，请使用以下命令：</p><pre><code class="bash">sudo systemctl start httpd.servicesudo systemctl enable httpd.service</code></pre><p>现在是安装数据库的时候了。CentOS 7默认安装MariaDB。它还与phpMyAdmin完全兼容，因此使用起来很安全。虽然可以改为下载MySQL，但这是一个复杂得多的过程。让我们使用MariaDB：</p><pre><code class="bash">sudo yum install mariadb-server mariadb</code></pre><p>现在我们可以运行它并使其在启动时启动：</p><pre><code class="bash">sudo systemctl start mariadbsudo systemctl enable mariadb.service</code></pre><p>要完成MariaDB的安装并确保其安全，请使用以下命令运行安全安装设置。</p><pre><code class="bash">sudo mysql_secure_installation</code></pre><p>最后，我们可以使用附加的MySQL包安装PHP。</p><pre><code class="bash">sudo yum install php php-mysql</code></pre><p>您还需要重新启动Apache服务器，以便它与PHP一起正常工作。</p><pre><code class="bash">sudo systemctl restart httpd.service</code></pre><p>这样，您就拥有了所需的LAMP堆栈，并最终可以下载phpMyAdmin。由于它不在Yum存储库中，因此您需要使用以下命令安装EPEL存储库：</p><pre><code class="bash">sudo yum install epel-release</code></pre><p>并安装phpMyAdmin。</p><pre><code class="bash">sudo yum install phpMyAdmin</code></pre><p>在CentOS 7上还需要几个步骤，但您现在应该有一个准备好配置的服务器。</p><h3 id="如何在Debian上安装phpMyAdmin"><a href="#如何在Debian上安装phpMyAdmin" class="headerlink" title="如何在Debian上安装phpMyAdmin"></a>如何在Debian上安装phpMyAdmin</h3><p>与CentOS 7非常相似，您需要使用命令行手动安装LAMP堆栈。首先，让我们使用以下命令获取Apache：</p><pre><code class="bash">sudo apt install apache2</code></pre><p>接下来，我们将安装MariaDB。与CentOS 7一样，此Linux发行版与MariaDB配合使用效果更好，我们建议您改用该发行版。</p><pre><code class="bash">sudo apt install mariadb-server</code></pre><p>和CentOS 7一样，您应该运行安全安装来添加数据库密码并确保一切都是安全的。</p><pre><code class="bash">sudo mysql_secure_installation</code></pre><p>最后，我们可以安装PHP和一些您的服务器需要运行的额外包。</p><pre><code class="bash">sudo apt install php php-mysql libapache2-mod-php</code></pre><p>我们可以通过安装phpMyAdmin来完成。</p><pre><code class="bash">sudo apt install phpMyAdmin</code></pre><h3 id="如何访问phpMyAdmin"><a href="#如何访问phpMyAdmin" class="headerlink" title="如何访问phpMyAdmin"></a><strong>如何访问phpMyAdmin</strong></h3><p>一旦正确安装了phpMyAdmin，在任何操作系统上访问和登录都是一样的。</p><p>您将需要您的网络服务器地址，然后附加<code>/phpMyAdmin/</code>到它的末尾。如果您只是在计算机上设置了服务器，则地址很可能只是“localhost”，因此请访问此链接：</p><p><a href="http://localhost/phpMyAdmin">http://localhost/phpMyAdmin</a></p><p>如果这是您已经在网络上运行的服务器，它也可能是一个IP，甚至是一个命名地址。如果您不确定，您可能会在Apache或MySQL配置文件中找到该地址。</p><p>进入登录屏幕后，您将需要用户名和密码。如果这是全新安装，用户名可能是“root”，您可以将密码留空。如果这不起作用，密码可能是“password”。</p><p><img src="/assets/2/image-20220515004443-4bpahoq.png" alt="image.png"><br>phpMyAdmin登录屏幕</p><p>如果您无法登录，请检查phpMyAdmin或MySQL配置文件以查找您的登录信息。您可能还在安装过程中更改了登录信息。</p><p>如果Linux用户在访问页面或登录时遇到问题，应尝试以下命令：</p><pre><code class="bash">sudo dpkg-reconfigure phpMyAdmin</code></pre><p>最后，您应该注意，如果您使用的是预装了phpMyAdmin的网络主机，您通常可以在您的主机仪表板中找到登录信息和链接。在这种情况下，您不需要在服务器上手动安装phpMyAdmin。</p><h3 id="配置phpMyAdmin"><a href="#配置phpMyAdmin" class="headerlink" title="配置phpMyAdmin"></a><strong>配置phpMyAdmin</strong></h3><p>安装数据库管理器并准备好在您的系统上运行后，您应该知道如何配置phpMyAdmin。与任何服务器软件一样，您肯定会想要对设置进行大量修改。</p><p>未配置的phpMyAdmin也可能带来潜在的安全风险。您需要采取一些额外的步骤来锁定您的系统。</p><p>如果您需要恢复数据库的备份，您可以随时使用phpMyAdmin导入新的SQL文件。在对数据库或其设置进行任何重大修改之前，请务必经常进行备份，尤其是当您不只是在测试服务器上工作时。</p><h3 id="如何运行SQL查询"><a href="#如何运行SQL查询" class="headerlink" title="如何运行SQL查询"></a>如何运行SQL查询</h3><p>现在您已经使用了phpMyAdmin，您应该知道如何执行它的用途：运行SQL查询。</p><p>您可以在主页上运行查询（这将适用于整个站点），也可以在特定的数据库或表中运行。单击屏幕顶部的<strong>SQL</strong>选项卡，输入您的命令，然后按 <strong>Go</strong> 。</p><p><img src="/assets/2/image-20220515004448-5alrojq.png" alt="image.png"><br>在phpMyAdmin中运行SQL查询</p><p>以下是常见SQL查询的列表：</p><ul><li><strong>Select：</strong> 最重要的标签，几乎在每个查询的开头使用。</li><li><strong>Create Table：</strong> 创建一个新表。</li><li><strong>Alter Table：</strong> 添加新列。</li><li><strong>Insert：</strong> 添加新行。</li><li><strong>Delete：</strong> 删除列。</li><li><strong>Update：</strong> 编辑表中的值。</li><li><strong>Sum()：</strong> 将所有值相加。</li><li><strong>Avg()：</strong> 取平均值。</li><li><strong>Count()：</strong> 计算填充的列数。</li><li><strong>Round()：</strong> 将值四舍五入为您设置的整数。</li><li><strong>Max()：</strong> 返回最大值。</li><li><strong>Min()：</strong> 返回最小值。</li><li><strong>Between：</strong> 选择特定范围内的列。</li><li><strong>Group By：</strong> 按数据对表格进行分组。</li><li><strong>Order By：</strong> 以某种方式排序结果。</li></ul><p>当然还有更多命令需要学习，但这些只是一些开始。</p><h3 id="如何更改phpMyAdmin默认的URL"><a href="#如何更改phpMyAdmin默认的URL" class="headerlink" title="如何更改phpMyAdmin默认的URL"></a>如何更改phpMyAdmin默认的URL</h3><p>保留phpMyAdmin访问链接的默认设置 ( <code>http://website.com/phpMyAdmin</code>) 可能会带来安全风险。</p><p>如果您使此页面易于查找，黑客将能够访问它并尝试暴力破解您的用户名和密码。如果您将凭据保留在默认的“root”和“密码”上，情况可能会更糟。</p><p>但是通过将URL更改为只有您知道的内容，您可以使未知用户访问此页面并尝试猜测密码变得更加困难。</p><p>在文本编辑器中打开 <strong>phpMyAdmin.conf</strong> ，您可以在Windows&#x2F;WAMP上的<code>C:\wamp\alias</code>、XAMPP上的<code>xampp\apache\conf\extra</code>、Linux上的 <code>/etc/httpd/conf.d</code>或Mac上的<code>/usr/conf/extra</code>找到它。</p><p>你应该在那里看到这一行：</p><pre><code class="apacheconf">Alias /phpMyAdmin /usr/share/phpMyAdmin</code></pre><p>将<code>/phpMyAdmin</code>路径更改为您选择的新地址。例如：</p><pre><code class="text">Alias /exampleURL /usr/share/phpMyAdmin</code></pre><p>现在，您可以通过访问您设置的自定义地址 ( <code>http://website.com/exampleURL</code>)来访问phpMyAdmin的这个唯一URL 。</p><h3 id="如何设置NGINX身份验证网关"><a href="#如何设置NGINX身份验证网关" class="headerlink" title="如何设置NGINX身份验证网关"></a>如何设置NGINX身份验证网关</h3><p>另一种选择是使用身份验证网关设置第二层安全性。将phpMyAdmin登录页面移至秘密位置后，您可以对该页面进行密码保护，以降低攻击者通过的可能性。</p><p>NGINX服务器上的Linux用户可以在命令行中运行以下命令来创建身份验证网关（这在Apache服务器上也是可能的）。</p><p>首先创建一个加密密码（将“example”更改为您喜欢的任何内容）并记下结果：</p><pre><code class="bash">openssl passwd example</code></pre><p>在NGINX的文件夹中创建一个配置文件并为其命名：</p><pre><code class="bash">sudo nano /etc/nginx/examplename</code></pre><p>像这样在这个文件中输入用户名和密码，注意不要在冒号中留下：</p><pre><code class="bash">exampleusername:examplepassword</code></pre><p>现在打开NGINX配置文件。</p><pre><code class="bash">sudo nano /etc/nginx/sites-available/default</code></pre><p>在“服务器”块中，我们将通过粘贴以下代码来添加我们的网关（确保更改值）。</p><pre><code class="nginx">location /example &#123;auth_basic &quot;Login&quot;;auth_basic_user_file /etc/nginx/examplename;</code></pre><p>第一个<code>/example</code>应该是您将phpMyAdmin URL设置为的任何内容，您可以将<code>auth_basic</code>变量名称调整为您想要的任何名称，最后一个<code>/examplename</code>应该是您之前创建的密码文件的名称。</p><p>现在登录时，您甚至应该在看到phpMyAdmin登录之前输入您设置的凭据。</p><h3 id="Adminer：一个更简单的phpMyAdmin替代方案"><a href="#Adminer：一个更简单的phpMyAdmin替代方案" class="headerlink" title="Adminer：一个更简单的phpMyAdmin替代方案"></a>Adminer：一个更简单的phpMyAdmin替代方案</h3><p>Adminer是一个免费的开源数据库管理工具，类似于phpMyAdmin。Adminer以前称为phpMinAdmin，被明确设计为phpMyAdmin的更简单、更好的替代品。</p><p>可以轻松部署在任何Web服务器上。只需上传一个轻量级的PHP文件即可。</p><p><img src="/assets/2/image-20220515004456-vtzahy7.png" alt="image.png"><br>使用Adminer探索WordPress数据库</p><p>它支持许多强大的数据库管理功能，例如轻松切换数据库、查看和编辑表、操作数据库值、导入和导出数据库、运行SQL查询等等。</p><p><img src="/assets/2/image-20220515004502-cnnotds.png" alt="image.png"><br>Adminer为数据库管理器提供支持</p><p><strong>小结</strong></p><p>您第一次使用phpMyAdmin可能会令人生畏。但是一旦您知道如何安装和配置它，访问您的数据库就像登录WordPress一样简单。</p><p>Windows、Mac和Linux用户都可以使用这个宝贵的数据库管理器。只要您有一个安装了PHP的Web服务器，如果您按照我们的说明进行操作，那么运行它应该很简单。请记住正确配置它并确保它是安全的，您将永远不会再次修改您的数据库。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;管理数据库是运行网站的一个复杂但必要的部分。幸运的是，有像phpMyAdmin这样的软件可以让这个过程变得更容易。这种流行的管理工具似乎很难学习，但是一旦掌握了它，访问和修改数据库将变得轻而易举。&lt;/p&gt;
&lt;p&gt;最困难的部分是知道如何安装phpMyAdmin并在您的Web服</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="03_数据库" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03-%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="04_phpMyAdmin" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03-%E6%95%B0%E6%8D%AE%E5%BA%93/04-phpMyAdmin/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>DataGrip使用</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03_%E6%95%B0%E6%8D%AE%E5%BA%93/03_DataGrip/02_DataGrip%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03_%E6%95%B0%E6%8D%AE%E5%BA%93/03_DataGrip/02_DataGrip%E4%BD%BF%E7%94%A8/</id>
    <published>2022-05-14T16:13:50.411Z</published>
    <updated>2022-05-14T16:39:47.930Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是datagrip"><a href="#什么是datagrip" class="headerlink" title="什么是datagrip?"></a>什么是datagrip?</h2><p>datagrip是jetbrains旗下的一款数据库管理工具，相信做过java开发的同学都知道，idea就是这家公司发明的。</p><h2 id="为什么要使用datagrip"><a href="#为什么要使用datagrip" class="headerlink" title="为什么要使用datagrip?"></a>为什么要使用datagrip?</h2><p>datagrip的优点非常多，下面博主为大家列举一下datagrip具有哪些优点。</p><h3 id="多数据源支持"><a href="#多数据源支持" class="headerlink" title="多数据源支持"></a>多数据源支持</h3><p>datagrip支持非常多的数据源，datagrip2020.1这个版本支持的数据源如下图所示。</p><p><img src="/assets/2/image-20220515003207-scg530f.png" alt="image.png"></p><h4 id="连接mysql数据库"><a href="#连接mysql数据库" class="headerlink" title="连接mysql数据库"></a>连接mysql数据库</h4><p>在java开发过程当中，大家应该经常使用或者使用过mysql数据库。博主这里以mysql数据库为例。</p><p><img src="/assets/2/image-20220515003215-jdkdzxd.png" alt="image.png"></p><h4 id="连接信息配置"><a href="#连接信息配置" class="headerlink" title="连接信息配置"></a>连接信息配置</h4><p><img src="/assets/2/image-20220515003224-7zysjo9.png" alt="image.png"></p><h4 id="驱动配置"><a href="#驱动配置" class="headerlink" title="驱动配置"></a>驱动配置</h4><p>在drivers目录下的mysql选项中选择驱动文件的地址，也可以选择datagrip默认的下载。这里由于博主在平时的java开发过程当中已经下载过了jdbc的mysql驱动，所以从maven本地仓库中直接选择驱动文件。</p><p><img src="/assets/2/image-20220515003245-ygjy9he.png" alt="image.png"></p><h4 id="测试连接"><a href="#测试连接" class="headerlink" title="测试连接"></a>测试连接</h4><p>点击图片中的Test Connection，即可查看数据库连接信息 是否配置成功。<br><img src="/assets/2/image-20220515003253-lhkao47.png" alt="image.png"></p><h3 id="datagrip的风格"><a href="#datagrip的风格" class="headerlink" title="datagrip的风格"></a>datagrip的风格</h3><p>datagrip对sql语句的显示让人感觉更加舒适。</p><p><img src="/assets/2/image-20220515003301-pxfve43.png" alt="image.png"></p><h3 id="同一套快捷键"><a href="#同一套快捷键" class="headerlink" title="同一套快捷键"></a>同一套快捷键</h3><p>因为datagrip也是jetbrains旗下的，它具有跟idea一样的默认快捷键设置。因此，我们只需要记住一套快捷键即可，这里博主列举一下使用比较频繁的快捷键。</p><h4 id="代码格式化"><a href="#代码格式化" class="headerlink" title="代码格式化"></a>代码格式化</h4><p>快捷键命令：ctrl+al+l</p><p>格式化之前的sql，如下图所示：</p><p><img src="/assets/2/image-20220515003310-wwgi4rq.png" alt="image.png"></p><p>格式化之后的sql，如下图所示：</p><p><img src="/assets/2/image-20220515003316-8fj4y1a.png" alt="image.png"></p><h4 id="全局查找"><a href="#全局查找" class="headerlink" title="全局查找"></a>全局查找</h4><p>快捷键命令：shift+shift，查找界面如下图所示：</p><p><img src="/assets/2/image-20220515003323-wsp7zam.png" alt="image.png"></p><h4 id="其它快捷键"><a href="#其它快捷键" class="headerlink" title="其它快捷键"></a>其它快捷键</h4><p><img src="/assets/2/image-20220515003330-meev57y.png" alt="image.png"></p><h3 id="智能提示"><a href="#智能提示" class="headerlink" title="智能提示"></a>智能提示</h3><p>datagrip在智能提示这一块做的挺好的。</p><h4 id="错误提示"><a href="#错误提示" class="headerlink" title="错误提示"></a>错误提示</h4><p>这里我们估计在select语句中缺少了筛选字段，datagrip已经给出了提示。<br><img src="/assets/2/image-20220515003339-bred4if.png" alt="image.png"></p><h4 id="插入提示"><a href="#插入提示" class="headerlink" title="插入提示"></a>插入提示</h4><p>这里我们输入insert语句时，datagrip会自动给我们提示表的字段。<br><img src="/assets/2/image-20220515003345-7p6aa5k.png" alt="image.png"></p><h4 id="字段备注提示"><a href="#字段备注提示" class="headerlink" title="字段备注提示"></a>字段备注提示</h4><p>我们将鼠标悬停在字段上时，datagrip会自动给我们提示表的字段会给出字典的类型，备注提示。<br><img src="/assets/2/image-20220515003352-360uphc.png" alt="image.png"></p><h4 id="全表删除提示"><a href="#全表删除提示" class="headerlink" title="全表删除提示"></a>全表删除提示</h4><p>当我们进行全表数据的删除操作时，datagrip会自动给我们提示。<br><img src="/assets/2/image-20220515003358-1mmdle2.png" alt="image.png"></p><h3 id="导出功能"><a href="#导出功能" class="headerlink" title="导出功能"></a>导出功能</h3><p>datagrip有俩种导出功能，一种是dump to file，另外一种是mysqldump方式。</p><h4 id="dump-data-to-file"><a href="#dump-data-to-file" class="headerlink" title="dump data to file"></a>dump data to file</h4><p><img src="/assets/2/image-20220515003404-qkac6a6.png" alt="image.png"></p><p>在extractor处选择sql inserts（这种方式导出的就是insert语句），在output directory中选择要导出的路径。</p><p><img src="/assets/2/image-20220515003412-p2m5o4a.png" alt="image.png"></p><p>datagrip也只能有限表数据的导出。如下图所示，我们筛选了id为1的数据，此时在数据右键，然后选择复制，就可以将数据行转化为insert语句。</p><p><img src="/assets/2/image-20220515003419-4v4l9v0.png" alt="image.png"></p><h3 id="导入功能"><a href="#导入功能" class="headerlink" title="导入功能"></a>导入功能</h3><p>datagrip的导入分为俩种，一种是sql语句，另外一种是列数据。</p><h4 id="导入sql语句"><a href="#导入sql语句" class="headerlink" title="导入sql语句"></a>导入sql语句</h4><p>将我们之前导入的sql语句文件，拖入datagrip，然后点击运行。</p><p><img src="/assets/2/image-20220515003426-h7tpf3h.png" alt="image.png"></p><p>这里我们将这个sql语句，关联到对应数据库的session会话，然后再点击运行。</p><p><img src="/assets/2/image-20220515003434-ai8mk2i.png" alt="image.png"></p><h4 id="导入列数据"><a href="#导入列数据" class="headerlink" title="导入列数据"></a>导入列数据</h4><p>选择需要导入的表，右键选择import data to file，就会看到下面这张图。我们将导入之前导出的sql语句。</p><p><img src="/assets/2/image-20220515003441-chr6v13.png" alt="image.png"></p><p>点击确定之后，就会进行导入确定界面，datagrip内置的是csv和tsv俩种方式。这里我们演示csv的方式。</p><p><img src="/assets/2/image-20220515003448-c0iedxp.png" alt="image.png"></p><h3 id="导航功能"><a href="#导航功能" class="headerlink" title="导航功能"></a>导航功能</h3><p>当我们将鼠标左键点击sql语句中的role时，datagrip会将其定位role表的位置，如图中的左半部分所示。<br><img src="/assets/2/image-20220515003454-clrefix.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;什么是datagrip&quot;&gt;&lt;a href=&quot;#什么是datagrip&quot; class=&quot;headerlink&quot; title=&quot;什么是datagrip?&quot;&gt;&lt;/a&gt;什么是datagrip?&lt;/h2&gt;&lt;p&gt;datagrip是jetbrains旗下的一款数据库管理工具，相</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="03_数据库" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03-%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="03_DataGrip" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03-%E6%95%B0%E6%8D%AE%E5%BA%93/03-DataGrip/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>DataGrip安装</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03_%E6%95%B0%E6%8D%AE%E5%BA%93/03_DataGrip/01_DataGrip%E5%AE%89%E8%A3%85/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03_%E6%95%B0%E6%8D%AE%E5%BA%93/03_DataGrip/01_DataGrip%E5%AE%89%E8%A3%85/</id>
    <published>2022-05-14T16:13:50.408Z</published>
    <updated>2022-05-14T16:39:47.880Z</updated>
    
    <content type="html"><![CDATA[<h3 id="DataGrip官网"><a href="#DataGrip官网" class="headerlink" title="DataGrip官网"></a><a href="https://www.jetbrains.com/datagrip/">DataGrip官网</a></h3><h4 id="就是那个开发Idea、goland、clion、pycharm等工具的jetbrins公司开发的。DataGrip是多引擎数据库环境，让使用者不用切换多种数据库工具，非常方便。满足我多平台多数据库支持的要求，但同样是收费软件。"><a href="#就是那个开发Idea、goland、clion、pycharm等工具的jetbrins公司开发的。DataGrip是多引擎数据库环境，让使用者不用切换多种数据库工具，非常方便。满足我多平台多数据库支持的要求，但同样是收费软件。" class="headerlink" title="就是那个开发Idea、goland、clion、pycharm等工具的jetbrins公司开发的。DataGrip是多引擎数据库环境，让使用者不用切换多种数据库工具，非常方便。满足我多平台多数据库支持的要求，但同样是收费软件。"></a>就是那个开发Idea、goland、clion、pycharm等工具的jetbrins公司开发的。DataGrip是多引擎数据库环境，让使用者不用切换多种数据库工具，非常方便。满足我多平台多数据库支持的要求，但同样是收费软件。</h4><p><img src="/assets/2/1002a68aac824682b9fd273765625c92.png" alt="image.png"></p><h3 id="datagrip下载"><a href="#datagrip下载" class="headerlink" title="datagrip下载"></a>datagrip下载</h3><p>从官网下载的dataGrip可以免费使用30天，如果已经破解过或者付费过的小伙伴可以跳过这个章节。对于未安装软件的小伙伴，博主这里收集了dataGrip的破解教程，然后发送dataGrip即可获得软件下载地址。</p><h3 id="datagrip安装"><a href="#datagrip安装" class="headerlink" title="datagrip安装"></a>datagrip安装</h3><p>从软件下载地址下载完压缩包之后，进行文件的解压。</p><h4 id="解压之后的目录"><a href="#解压之后的目录" class="headerlink" title="解压之后的目录"></a>解压之后的目录</h4><p><img src="/assets/2/image-20220515002943-lb53w3b.png" alt="image.png"></p><h4 id="运行datagrip-exe"><a href="#运行datagrip-exe" class="headerlink" title="运行datagrip.exe"></a>运行datagrip.exe</h4><p>双击运行图中的datagrip-2020.1.exe进行软件的安装。dataGrip的安装过程比较简单，这里就不做说明了，这里主要讲解破解的过程。</p><h4 id="点击安装好的datagrip"><a href="#点击安装好的datagrip" class="headerlink" title="点击安装好的datagrip"></a>点击安装好的datagrip</h4><p>datagrip运行之后会跳出一个框，让你选择激活 还是 免费使用。这里我们选择Evaluate for free，然后点击evaluate。</p><h4 id="查看破解前的licenses"><a href="#查看破解前的licenses" class="headerlink" title="查看破解前的licenses"></a>查看破解前的licenses</h4><p>点击datagrip的Help菜单，选择Register后，即可看到licenses。</p><p><img src="/assets/2/image-20220515002951-308e210.png" alt="image.png"></p><h4 id="安装jetbrains-plugin"><a href="#安装jetbrains-plugin" class="headerlink" title="安装jetbrains-plugin"></a>安装jetbrains-plugin</h4><p>将jetbrains-plugin.exe 拖到 datagrip的界面上，就会弹出如下提示。</p><p><img src="/assets/2/image-20220515003000-9g6jcli.png" alt="image.png"></p><p>点击restart后，会调出如下提示，点击为DataGrip安装。</p><p><img src="/assets/2/image-20220515003007-fjmyfdl.png" alt="image.png"></p><p>点击完按钮之后，跳出如下提示。</p><p><img src="/assets/2/image-20220515003013-wiz6018.png" alt="image.png"></p><h4 id="再次查看licenses"><a href="#再次查看licenses" class="headerlink" title="再次查看licenses"></a>再次查看licenses</h4><p>这里我们可以看到，我们已经破解了datagrip，并且有效期到了2089年。</p><p><img src="/assets/2/image-20220515003020-nnhg7fl.png" alt="image.png"></p><h3 id="使用汉化资源包"><a href="#使用汉化资源包" class="headerlink" title="使用汉化资源包"></a>使用汉化资源包</h3><p>将resources_zh_CN_DataGrip_2020_r1.jar拖到 datagrip的安装目录下面的<br>lib目录，这时候需要重启datagrip。</p><h4 id="查看汉化成功的datagrip"><a href="#查看汉化成功的datagrip" class="headerlink" title="查看汉化成功的datagrip"></a>查看汉化成功的datagrip</h4><p><img src="/assets/2/image-20220515002933-kqg9oba.png" alt="image.png"></p><h3 id="如何使用datagrip"><a href="#如何使用datagrip" class="headerlink" title="如何使用datagrip?"></a>如何使用datagrip?</h3><p>小伙伴们如果想到查看datagrip的使用，请看我的另外一篇博文datagrip的使用。</p><h3 id="博主微信公众号"><a href="#博主微信公众号" class="headerlink" title="博主微信公众号"></a>博主微信公众号</h3><p><img src="/assets/2/image-20220515002925-q3yd7oe.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;DataGrip官网&quot;&gt;&lt;a href=&quot;#DataGrip官网&quot; class=&quot;headerlink&quot; title=&quot;DataGrip官网&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.jetbrains.com/datagrip/&quot;&gt;DataGrip官网</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="03_数据库" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03-%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="03_DataGrip" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03-%E6%95%B0%E6%8D%AE%E5%BA%93/03-DataGrip/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>DBeaver使用</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03_%E6%95%B0%E6%8D%AE%E5%BA%93/02_DBeaver/02_DBeaver%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03_%E6%95%B0%E6%8D%AE%E5%BA%93/02_DBeaver/02_DBeaver%E4%BD%BF%E7%94%A8/</id>
    <published>2022-05-14T16:11:05.923Z</published>
    <updated>2022-05-14T16:39:36.324Z</updated>
    
    <content type="html"><![CDATA[<p><strong>一、连接数据步骤：</strong></p><p>1、选择需要连接的数据库</p><p><img src="/assets/2/image-20220515003726-1rms3r9.png" alt="image.png"></p><p>2、配置数据库参数，首次连接需要下载对应数据库的连接驱动</p><p>连接 SqlServer：</p><p><img src="/assets/2/image-20220515003732-65s8biz.png" alt="image.png"></p><p><img src="/assets/2/image-20220515003738-8ohqsv7.png" alt="image.png"></p><p>连接 H2：</p><p><img src="/assets/2/image-20220515003745-3g8lna9.png" alt="image.png"></p><p><img src="/assets/2/image-20220515003751-kdkqr52.png" alt="image.png"></p><p>连接MySQL：</p><p><img src="/assets/2/image-20220515003800-2xtj998.png" alt="image.png"></p><p>配置参考上面的配置</p><p><strong>二、客户端常用配置</strong></p><p>1、窗口-&gt;首选项-&gt;常规-&gt;键：设置常用快捷键</p><p><img src="/assets/2/image-20220515003807-m0v0gv4.png" alt="image.png"></p><p>2、窗口-&gt;首选项-&gt;数据库-&gt;Editors-&gt;SQL编辑器-&gt;模板：设置常用SQL模板</p><p>在SQL查询界面输入sf，再按TAB键，就能快速输入：select * from</p><p><img src="/assets/2/image-20220515003815-haflbkf.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;一、连接数据步骤：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、选择需要连接的数据库&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/2/image-20220515003726-1rms3r9.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;2、配置数</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="03_数据库" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03-%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="02_DBeaver" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03-%E6%95%B0%E6%8D%AE%E5%BA%93/02-DBeaver/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>DBeaver安装</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03_%E6%95%B0%E6%8D%AE%E5%BA%93/02_DBeaver/01_DBeaver%E5%AE%89%E8%A3%85/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03_%E6%95%B0%E6%8D%AE%E5%BA%93/02_DBeaver/01_DBeaver%E5%AE%89%E8%A3%85/</id>
    <published>2022-05-14T16:11:01.750Z</published>
    <updated>2022-05-14T16:39:36.283Z</updated>
    
    <content type="html"><![CDATA[<p>官网和 GitHub<br><a href="https://dbeaver.io/">https://dbeaver.io/</a><br><a href="https://github.com/dbeaver/dbeaver">https://github.com/dbeaver/dbeaver</a></p><h3 id="DBeaver官网"><a href="#DBeaver官网" class="headerlink" title="DBeaver官网"></a><a href="https://dbeaver.io/">DBeaver官网</a></h3><h5 id="支持Windows、Linux、MacOS；支持我需要的sqlite3、mysql，有社区版和企业版本，社区版满足我的需求。"><a href="#支持Windows、Linux、MacOS；支持我需要的sqlite3、mysql，有社区版和企业版本，社区版满足我的需求。" class="headerlink" title="支持Windows、Linux、MacOS；支持我需要的sqlite3、mysql，有社区版和企业版本，社区版满足我的需求。"></a>支持Windows、Linux、MacOS；支持我需要的sqlite3、mysql，有社区版和企业版本，社区版满足我的需求。</h5><p><img src="/assets/2/e677efd784194c5180ab9bf8f317d9ee.png" alt="image.png"></p><p>1、介绍</p><p><img src="/assets/2/image-20220515002241-aui2k9w.png" alt="image.png"></p><p>  DBeaver是一种通用数据库管理工具，适用于需要以专业方式使用数据的每个人；适用于开发人员，数据库管理员，分析师和所有需要使用数据库的人员的免费的多平台数据库工具</p><p>  使用DBeaver，您可以像在常规电子表格中一样处理数据，基于来自不同数据存储的记录创建分析报告，并以适当的格式导出信息。对于高级数据库用户，DBeaver建议使用功能强大的SQL编辑器，大量的管理功能，数据和模式迁移的能力，监视数据库连接会话等。</p><p>  开箱即用的DBeaver支持80多个数据库。支持所有流行的数据库，包括：MySQL、PostgreSQL、MariaDB、SQLite、Oracle、Db2、SQL Server、Sybase、MS Access、Teradata、Firebird、Derby 等等。商业版本更是可以支持各种 NoSQL 和大数据平台：MongoDB、InfluxDB、Apache Cassandra、Redis、Apache Hive 等。</p><p>以可用性为主要目标，DBeaver提供：</p><p>精心设计和实施的用户界面<br>支持云数据源<br>支持企业安全标准<br>具有与Excel，Git等集成的各种扩展功能。<br>大量功能<br>多平台支持<br>DBeaver 是一个基于 Java 开发，免费开源的通用数据库管理和开发工具，使用非常友好，且遵循ASL 协议。由于 DBeaver 基于 Java 开发，可以运行在各种操作系统上，比如Windows、Linux、macOS 等操作系统。DBeaver 采用 Eclipse 框架开发，支持插件扩展，并且提供了许多数据库管理工具：ER 图、数据导入&#x2F;导出、数据库比较、模拟数据生成等。</p><p>2、发展史<br>  DBeaver于2010年作为一个业余项目启动。它原本是免费的，开放源代码的，具有漂亮且方便的用户界面，并且包含数据库开发人员常用的功能。第一个正式版本于2011年在Freecode上发布。它迅速成为开源社区中的一种流行工具。</p><p>  同年，建立了官方网站，并创建了社区支持论坛（现已移至GitHub）。 2012年发布了Eclipse插件版本-此后，DBeaver成为Eclipse最受欢迎的数据库扩展之一（在所有Eclipse扩展中排名前50-60）。</p><p>  不久之后，各种软件供应商开始与DBeaver集成（主要是对其专有Eclipse RCP产品的扩展：Zend Studio，NXTware， DeltaDNA，等）。</p><p>  2014年发布了企业版（EE）版本。EE版本基于CE，但也提供对NoSQL &#x2F; BigData数据库（Cassandra，MongoDB和Redis）的支持，并包括一些其他Eclipse插件。</p><p>2015年，DBeaver源代码&#x2F;社区已移至GitHub。</p><p>  DBeaver CE在2017年获得了Apache许可的许可（从4.x版本开始）。</p><p>为了支持CE版本，DBeaver EE版本于2017年7月开始商业化。</p><p>3、版本介绍<br>社区版</p><p>  communityedition（CE）是DBeaver的初始版本。它于2010年发布，并于2011年成为开源（GPL）。CE版本包括对以下数据库的扩展支持：MySQL和MariaDB、PostgreSQL、Greenplum、Oracle、DB2 (LUW)、EXASOL、SQL Server、Sybase、Firebird、Teradata、Vertica、SAP HANA、Apache Phoenix、Netezza、Informix、Apache Derby、H2、SQLite、SnappyData任何其他具有JDBC或ODBC驱动程序的数据库。除了关系数据库，CE版本还支持WMI驱动程序（Windows Management Instrumentation–仅适用于Windows版本）。</p><p>Eclipse插件版</p><p>  一年后，为了响应多个用户的请求，Eclipse市场上发布了一个Eclipse插件版本。这个版本由使用eclipseide进行软件开发的程序员使用，他们的IDE中需要一个数据库管理工具。Eclipse插件包含了communityedition的大部分特性，并且也是在GPL许可下发布的。</p><p>企业版</p><p>  DBeaver 3.x宣布支持NoSQL数据库（最初的版本是Cassandra和MongoDB）。从那时起，DBeaver在社区版和企业版上被分成了两部分。企业版支持NoSQL数据库、持久查询管理器和其他一些企业级功能。EE版本不是开源的，需要购买许可证（可以免费生成试用版许可证）。</p><p>4、下载与安装<br>  DBeaver 社区版可以通过官方网站或者 Github 进行下载。两者都为不同的操作系统提供了安装包或者解压版，可以选择是否需要同时安装 JRE。另外，官方网站还提供了 DBeaver 的 Eclipse 插件，可以在 Eclipse 中进行集成。</p><p>  DBeaver 支持中文，安装过程非常简单，不多说，唯一需要注意的是 DBeaver 的运行依赖于 JRE。DBeaver 着实体贴了些许，不用注册帐号，直接下载即可，也是人生幸事！</p><p>1、DBeaver 下载地址：<a href="https://dbeaver.io/download/">https://dbeaver.io/download/</a></p><p><img src="/assets/2/image-20220515002310-txn01dt.png" alt="image.png"></p><p>2、选择语言和权限</p><p><img src="/assets/2/image-20220515002325-j20ypln.png" alt="image.png"></p><p><img src="/assets/2/image-20220515002331-2zhtml5.png" alt="image.png"></p><p>3、选定安装组件在进行选定安装组件部分，选择全部勾选。</p><p><img src="/assets/2/image-20220515002340-xwp28cc.png" alt="image.png"></p><p>4、安装即可</p><p><img src="/assets/2/image-20220515002347-xdlkiyj.png" alt="image.png"></p><p>5、DBeaver 连接数据库（MySql）<br>  DBeaver 下载安装完成后，并不是直接可以用，要进行数据库的连接。一般情况下，第一次运行，会自动弹出如下内容，进行选择即可。此外，还可以直接点击左侧蓝色按钮，即</p><p>进行连接。</p><p>1、选择连接类型本文选择 MySQL 8+ 。</p><p><img src="/assets/2/image-20220515002355-tw9mlvx.png" alt="image.png"></p><p>2、连接设置注意：数据库可以为空，不填写，但密码一定要填写！一定要！记得密码很重要，还记得之前文章提到过的密码设置吗？！</p><p><img src="/assets/2/image-20220515002403-lmp2yir.png" alt="image.png"></p><p>3、测试连接如果失败会主动弹出驱动设置，请求下载驱动文件，此刻选择下载即可。</p><p><img src="/assets/2/image-20220515002410-vv6sb7c.png" alt="image.png"></p><p>4、继续测试此刻会发生两种情况：第一种，成功了；第二种，继续失败，且会出现如下信息。</p><p><img src="/assets/2/image-20220515002417-v4uq30t.png" alt="image.png"></p><p>5、解决问题打开酷酷的终端，运行 MySQL ，并输入如下指令：</p><blockquote><p>show variables like ‘%time_zone%’;<br>set global time_zone&#x3D;’+8:00’;</p></blockquote><p>终端运行结果示意图</p><p><img src="/assets/2/image-20220515002439-7128f2d.png" alt="image.png"></p><p>6、连接成功</p><p>再次进行测试，显示成功。看左侧区域库与表区域，点击鼠标右键→连接即可。当小海豚下方出现一个绿色框框且有对号的图片时，即连接成功。</p><p><img src="/assets/2/image-20220515002446-pfvmu4h.png" alt="image.png"></p><p>6、DBeaver 连接数据库（Hive）<br>第一步，新建连接，选择Apache Hive</p><p><img src="/assets/2/image-20220515002453-25w6kxm.png" alt="image.png"></p><p>第二步，点击驱动属性、下载对应的驱动，驱动下载完成后，填写连接的url信息。必须开启HiveServer2服务，HiveServer2的默认端口是10000<br>  尖叫提示：如果选择自动下载驱动，会出现版本不兼容或者下载失败的情况，所以不建议使用这种方式。最简单的方式是将hive JDBC的jar包直接加载进去即可，将其放在本地的一个文件夹下(可以放置在DBeaver的安装目录下)，然后选择编辑驱动设置：如下图</p><p><img src="/assets/2/image-20220515002538-n15qi3p.png" alt="image.png"></p><p>在点击编辑驱动设置之后，会弹出一个窗口，让你选择驱动的位置，点击添加文件，选择相应的hive驱动即可。然后点击确定。</p><p><img src="/assets/2/image-20220515002549-56hssah.png" alt="image.png"></p><p>然后填写好url，点击测试链接进行测试，如下图：</p><p><img src="/assets/2/image-20220515002556-v984p88.png" alt="image.png"></p><p>成功链接之后，就可以像Hue一样操作Hive了，如下:</p><p><img src="/assets/2/image-20220515002556-v984p88.png" alt="image.png"></p><p>7、DBeaver 功能简介<br>  DBeaver 连接成功数据库之后，究竟如何操作，可以先围观一下以下信息。</p><p>1、操作界面功能版块划分</p><p><img src="/assets/2/image-20220515002611-jhjrn37.png" alt="image.png"></p><p>2、语言设置</p><p><img src="/assets/2/image-20220515002620-mnlpy0j.png" alt="image.png"></p><p>3、代码颜色设置</p><p><img src="/assets/2/image-20220515002626-5ldfs03.png" alt="image.png"></p><p>4、简易操作</p><p>在菜单栏区域，鼠标放到某个按钮下，会对应显示其功能，譬如下图按钮1，即为新建编辑器；快去尝试一下区域2 部分按钮的功能吧！</p><p><img src="/assets/2/image-20220515002632-u04b7eq.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;官网和 GitHub&lt;br&gt;&lt;a href=&quot;https://dbeaver.io/&quot;&gt;https://dbeaver.io/&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/dbeaver/dbeaver&quot;&gt;https://github.com/db</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="03_数据库" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03-%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="02_DBeaver" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03-%E6%95%B0%E6%8D%AE%E5%BA%93/02-DBeaver/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>UI自动化测试框架_关键字驱动+数据驱动</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06_%E8%87%AA%E5%8A%A8%E5%8C%96/02_%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01_UI%E8%87%AA%E5%8A%A8%E5%8C%96/UI%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/01_UI%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6_%E5%85%B3%E9%94%AE%E5%AD%97%E9%A9%B1%E5%8A%A8+%E6%95%B0%E6%8D%AE%E9%A9%B1%E5%8A%A8/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06_%E8%87%AA%E5%8A%A8%E5%8C%96/02_%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01_UI%E8%87%AA%E5%8A%A8%E5%8C%96/UI%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/01_UI%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6_%E5%85%B3%E9%94%AE%E5%AD%97%E9%A9%B1%E5%8A%A8+%E6%95%B0%E6%8D%AE%E9%A9%B1%E5%8A%A8/</id>
    <published>2022-05-10T14:39:24.415Z</published>
    <updated>2022-05-12T15:44:10.255Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>关键字驱动框架简介<br> 原理及特点<br> 关键字驱动测试是数据驱动测试的一种改进类型，它也被称为表格驱动测试或者基于动作字的测试。<br> 主要关键字包括三类：被操作对象（Item）、操作行为（Operation）和操作值（Value），用面向对象形式可将其表现为 Item.Operation(Value)。<br> 将测试逻辑按照这些关键字进行分解，形成数据文件。<br> 用关键字的形式将测试逻辑封装在数据文件中，测试工具只要能够解释这些关键字即可对其应用自动化。</p><p> <img src="/assets/2/image-20220510224044-p91vm0i.png" alt="image.png"></p></li></ol><p>优势<br>执行人员可以不需要太多的技术：一旦框架建立，手工测试人员和非技术人员都可以很容易的编写自动化测试脚本。<br>简单易懂：它存在Excel表格中，没有编码，测试脚本容易阅读和理解。关键字和操作行为这样的手工测试用例，使它变得更容易编写和维护。<br>早期介入：可以在应用未提交测试之前，就可以建立关键字驱动测试用例对象库，从而减少后期工作。使用需求和其它相关文档进行收集信息，关键字数据表可以建立手工测试程序。<br>代码的重用性：用关键字的形式将测试用例及数据进行组装并解释执行，提高代码的可重用性。</p><ol start="2"><li>工程结构说明<br> 工程结构<br> 整个测试框架分为四层，通过分层的方式，测试代码更容易理解，维护起来较为方便。</li></ol><p>第一层是“测试工具层”：</p><p>util 包：用于实现测试过程中调用的工具类方法，例如读取配置文件、页面元素的操作方法、操作 Excel 文件、生成测试报告、发送邮件等。<br>conf 包：配置文件及全局变量。<br>log 目录：日志输出文件。<br>exception_pic 目录：失败用例的截图保存目录。<br>第二层是“服务层”：相当于对测试对象的一个业务封装。对于接口测试，是对远程方法的一个实现；对于 UI 测试，是对页面元素或操作的一个封装。</p><p>action 包：封装具体的页面动作，如点击、输入文本等。<br>第三层是“测试用例逻辑层”：该层主要是将服务层封装好的各个业务对象，组织成测试逻辑，进行校验。</p><p>bussiness_process 包：基于关键字的形式，实现单条、多条用例的测试脚本逻辑。<br>test_data 目录：Excel 数据文件，包含用例步骤、被操作对象、操作动作、操作值、测试结果等。<br>第四层是“测试场景层”：将测试用例组织成测试场景，实现各种级别 cases 的管理，如冒烟，回归等测试场景。</p><p>main.py：本框架工程的运行主入口。</p><p><img src="/assets/2/image-20220510224058-kw8qpal.png" alt="image.png"></p><p><img src="/assets/2/image-20220510224106-pu6cppw.png" alt="image.png"></p><p>框架特点<br>基于关键字测试框架，即使不懂开发技术的测试人员也可以实施自动化测试，便于在整个测试团队中推广和使用自动化测试技术，降低自动化测试实施的技术门槛。<br>使用外部测试数据文件，使用Excel管理测试用例的集合和每个测试用例的所有执行步骤，实现在一个文件中完成测试用例的维护工作。<br>通过定义关键字、操作元素的定位方式和定位表达式和操作值，就可以实现每个测试步骤的执行，可以更加灵活地实现自动化测试的需求。<br>基于关键字的方式，可以进行任意关键字的扩展，以满足更加复杂的自动化测试需求。<br>实现定位表达式和测试代码的分离，实现定位表达式直接在数据文件中进行维护。<br>框架提供日志功能，方便调试和监控自动化测试程序的执行。</p><ol start="3"><li>工程代码实现<br> action 包<br> action 包为框架第二层“服务层”，相当于对测试对象的一个业务封装。对于接口测试，是对远程方法的一个实现；对于 UI 测试，是对页面元素或操作的一个封装。</li></ol><p>page_action.py<br>该模块基于关键字格式，封装了页面操作的常用函数，如打开浏览器、点击、输入文本等。</p><p>  1 from selenium import webdriver<br>  2 import time<br>  3 import traceback<br>  4 from util.datetime_util import *<br>  5 from util.find_element_util import *<br>  6 from util.ini_parser import *<br>  7 from util.log_util import *<br>  8<br>  9<br> 10 DRIVER &#x3D; “”<br> 11<br> 12<br> 13 # 初始化浏览器<br> 14 def init_browser(browser_name):<br> 15     global DRIVER<br> 16     if browser_name.lower() &#x3D;&#x3D; “chrome”:<br> 17         DRIVER &#x3D; webdriver.Chrome(CHROME_DRIVER)<br> 18     elif browser_name.lower() &#x3D;&#x3D; “firefox”:<br> 19         DRIVER &#x3D; webdriver.Firefox(FIREFOX_DRIVER)<br> 20     elif browser_name.lower() &#x3D;&#x3D; “ie”:<br> 21         DRIVER &#x3D; webdriver.Ie(IE_DRIVER)<br> 22     else:<br> 23         warning(“浏览器【%s】不支持，已默认启动chrome” % browser_name)<br> 24         DRIVER &#x3D; webdriver.Chrome(CHROME_DRIVER)<br> 25<br> 26<br> 27 # 访问指定url<br> 28 def visit(url):<br> 29     global DRIVER<br> 30     DRIVER.get(url)<br> 31<br> 32<br> 33 # 输入操作<br> 34 def input(locate_method, locate_exp, value):<br> 35     global DRIVER<br> 36     # 方式1：直接传定位方式和定位表达式<br> 37     if locate_method in [“id”, “xpath”, “classname”, “name”, “tagname”, “linktext”,<br> 38                              “partial link text”, “css selector”]:<br> 39         find_element(DRIVER, locate_method, locate_exp).send_keys(value)<br> 40     # 方式2：通过ini文件的key找到value，再分割定位方式和定位表达式<br> 41     else:<br> 42         parser &#x3D; IniParser(ELEMENT_FILE_PATH)<br> 43         locate_method, locate_exp &#x3D; tuple(parser.get_value(locate_method, locate_exp).split(“&gt;”))<br> 44         find_element(DRIVER, locate_method, locate_exp).send_keys(value)<br> 45<br> 46<br> 47 # 点击操作<br> 48 def click(locate_method, locate_exp):<br> 49     global DRIVER<br> 50     # 方式1：直接传定位方式和定位表达式<br> 51     if locate_method in [“id”, “xpath”, “classname”, “name”, “tagname”, “linktext”,<br> 52                              “partial link text”, “css selector”]:<br> 53         find_element(DRIVER, locate_method, locate_exp).click()<br> 54     # 方式2：通过ini文件的key找到value，再分割定位方式和定位表达式<br> 55     else:<br> 56         parser &#x3D; IniParser(ELEMENT_FILE_PATH)<br> 57         locate_method, locate_exp &#x3D; tuple(parser.get_value(locate_method, locate_exp).split(“&gt;”))<br> 58         find_element(DRIVER, locate_method, locate_exp).click()<br> 59<br> 60<br> 61 # 清空输入框操作<br> 62 def clear(locate_method, locate_exp):<br> 63     global DRIVER<br> 64     # 方式1：直接传定位方式和定位表达式<br> 65     if locate_method in [“id”, “xpath”, “classname”, “name”, “tagname”, “linktext”,<br> 66                              “partial link text”, “css selector”]:<br> 67         find_element(DRIVER, locate_method, locate_exp).clear()<br> 68     # 方式2：通过ini文件的key找到value，再分割定位方式和定位表达式<br> 69     else:<br> 70         parser &#x3D; IniParser(ELEMENT_FILE_PATH)<br> 71         locate_method, locate_exp &#x3D; tuple(parser.get_value(locate_method, locate_exp).split(“&gt;”))<br> 72         find_element(DRIVER, locate_method, locate_exp).clear()<br> 73<br> 74<br> 75 # 切换frame<br> 76 def switch_frame(locate_method, locate_exp):<br> 77     global DRIVER<br> 78     # 方式1：直接传定位方式和定位表达式<br> 79     if locate_method in [“id”, “xpath”, “classname”, “name”, “tagname”, “linktext”,<br> 80                              “partial link text”, “css selector”]:<br> 81         DRIVER.switch_to.frame(find_element(DRIVER, locate_method, locate_exp))<br> 82     # 方式2：通过ini文件的key找到value，再分割定位方式和定位表达式<br> 83     else:<br> 84         parser &#x3D; IniParser(ELEMENT_FILE_PATH)<br> 85         locate_method, locate_exp &#x3D; tuple(parser.get_value(locate_method, locate_exp).split(“&gt;”))<br> 86         DRIVER.switch_to.frame(find_element(DRIVER, locate_method, locate_exp))<br> 87<br> 88<br> 89 # 切换主frame<br> 90 def switch_home_frame():<br> 91     global DRIVER<br> 92     DRIVER.switch_to.default_content()<br> 93<br> 94<br> 95 # 断言<br> 96 def assert_word(keyword):<br> 97     global DRIVER<br> 98     assert keyword in DRIVER.page_source<br> 99<br>100<br>101 # 休眠<br>102 def sleep(times):<br>103     time.sleep(int(times))<br>104<br>105<br>106 # 关闭浏览器<br>107 def quit():<br>108     global DRIVER<br>109     DRIVER.quit()<br>110<br>111<br>112 # 截图函数<br>113 def take_screenshot():<br>114     global DRIVER<br>115     # 创建当前日期目录<br>116     dir &#x3D; os.path.join(SCREENSHOT_PATH, get_chinese_date())<br>117     if not os.path.exists(dir):<br>118         os.makedirs(dir)<br>119     # 以当前时间为文件名<br>120     file_name &#x3D; get_chinese_time()<br>121     file_path &#x3D; os.path.join(dir, file_name+”.png”)<br>122     try:<br>123         DRIVER.get_screenshot_as_file(file_path)<br>124         # 返回截图文件的绝对路径<br>125         return file_path<br>126     except:<br>127         error(“截图发生异常【{}】\n{}”.format(file_path, traceback.format_exc()))<br>128         return file_path<br>129<br>130<br>131 if <strong>name</strong> &#x3D;&#x3D; “<strong>main</strong>“:<br>132     init_browser(“chrome”)<br>133     visit(“<a href="http://mail.126.com&quot;/">http://mail.126.com&quot;</a>)<br>134     print(take_screenshot())</p><p>business_process 包<br>business_process 包是框架第三层“测试用例逻辑层”，该层主要是将服务层封装好的各个业务对象，组织成测试逻辑，进行校验。</p><p>case_process.py<br>测试用例文件的一行数据，拼接其中的操作动作、操作对象、操作值等关键字，形成与 page_action.py 中的函数相对应的字符串，并通过 eval() 转成表达式以执行用例。<br>记录该用例的测试结果，如测试执行结果、测试执行时间等。<br>如需数据驱动的用例集，则获取数据驱动的数据源集合，循环将每组数据传递给用例步骤。<br>如果遇到需要参数化的值 ${变量名}，则根据数据驱动的数据源，根据变量名进行参数化。</p><p> 1 import traceback<br> 2 import re<br> 3 from util.global_var import *<br> 4 from util.log_util import *<br> 5 from util.datetime_util import *<br> 6 from util.excel_util import Excel<br> 7 from action.page_action import *<br> 8<br> 9<br>10 # 执行一条测试用例（即一行测试数据）<br>11 def execute_case(excel_file_path, case_data, test_data_source&#x3D;None):<br>12     # 用例数据格式校验<br>13     if not isinstance(case_data, (list, tuple)):<br>14         error(“测试用例数据格式有误！测试数据应为列表或元组类型！【%s】” % case_data)<br>15         case_data[TEST_SCRIPT_EXCEPTION_INFO_COL] &#x3D; “测试用例数据格式有误！应为列表或元组类型！【%s】” % case_data<br>16         case_data[TEST_SCRIPT_TEST_RESULT_COL] &#x3D; “Fail”<br>17     # 该用例无需执行<br>18     if case_data[TEST_SCRIPT_IS_EXECUTE_COL].lower() &#x3D;&#x3D; “n”:<br>19         info(“测试用例步骤【%s】无需执行” % case_data[TEST_SCRIPT_NAME_COL])<br>20         return<br>21     # excel对象初始化<br>22     if isinstance(excel_file_path, Excel):<br>23         excel &#x3D; excel_file_path  # 如果传入的是excel对象，则直接使用<br>24     else:<br>25         excel &#x3D; Excel(excel_file_path)  # 如果传入的是文件路径，则初始化excel对象<br>26     # 获取各关键字<br>27     operation_action &#x3D; case_data[TEST_SCRIPT_ACTION_COL]  # 操作动作（即函数名）<br>28     locate_method &#x3D; case_data[TEST_SCRIPT_LOCATE_METHOD_COL]  # 定位方式<br>29     locate_expression &#x3D; case_data[TEST_SCRIPT_LOCATE_EXPRESSION_COL]  # 定位表达式<br>30     operation_value &#x3D; case_data[TEST_SCRIPT_VALUE_COL]  # 操作值<br>31     # 由于数据驱动，需要进行参数化的值<br>32     if test_data_source:<br>33         if re.search(r”${\w+}“, str(operation_value)):<br>34             # 取出需要参数化的值<br>35             key &#x3D; re.search(r”${(\w+)}“, str(operation_value)).group(1)<br>36             operation_value &#x3D; re.sub(r”${\w+}“, str(test_data_source[key]), str(operation_value))<br>37             # 将参数化后的值回写excel测试结果中，便于回溯<br>38             case_data[TEST_SCRIPT_VALUE_COL] &#x3D; operation_value<br>39     # 拼接关键字函数<br>40     if locate_method and locate_expression:<br>41         if operation_value:<br>42             func &#x3D; “%s(‘%s’, ‘%s’, ‘%s’)” % (operation_action, locate_method, locate_expression, operation_value)<br>43         else:<br>44             func &#x3D; “%s(‘%s’, ‘%s’)” % (operation_action, locate_method, locate_expression)<br>45     else:<br>46         if operation_value:<br>47             func &#x3D; “%s(‘%s’)” % (operation_action, operation_value)<br>48         else:<br>49             func &#x3D; “%s()” % operation_action<br>50     # 执行用例<br>51     try:<br>52         eval(func)<br>53         info(“测试用例步骤执行成功：【{}】 {}”.format(case_data[TEST_SCRIPT_NAME_COL], func))<br>54         case_data[TEST_SCRIPT_TEST_RESULT_COL] &#x3D; “Pass”<br>55     except:<br>56         info(“测试用例步骤执行失败：【{}】 {}”.format(case_data[TEST_SCRIPT_NAME_COL], func))<br>57         case_data[TEST_SCRIPT_TEST_RESULT_COL] &#x3D; “Fail”<br>58         error(traceback.format_exc())<br>59         # 进行截图<br>60         case_data[TEST_SCRIPT_SCREENSHOT_PATH_COL] &#x3D; take_screenshot()<br>61         # 异常信息记录<br>62         case_data[TEST_SCRIPT_EXCEPTION_INFO_COL] &#x3D; traceback.format_exc()<br>63     # 测试时间记录<br>64     case_data[TEST_SCRIPT_TEST_TIME_COL] &#x3D; get_english_datetime()<br>65     return case_data<br>66<br>67<br>68 if <strong>name</strong> &#x3D;&#x3D; “<strong>main</strong>“:<br>69     excel &#x3D; Excel(TEST_DATA_FILE_PATH)<br>70     excel.get_sheet(“登录（调试用）”)<br>71     all_data &#x3D; excel.get_all_row_data()<br>72     for data in all_data[1:]:<br>73         execute_case(excel, data)</p><p>data_source_process.py<br>本模块实现了获取数据驱动所需的数据源集合。</p><p>根据数据源 sheet 名，获取该 sheet 所有行数据，每行数据作为一组测试数据。<br>每行数据作为一个字典，存储在一个列表中。如 [{“登录用户名”: “xxx”, “登录密码”: “xxx”, …}, {…}, …]</p><p> 1 from util.excel_util import Excel<br> 2 from util.global_var import *<br> 3 from util.log_util import *<br> 4<br> 5<br> 6 # 数据驱动<br> 7 # 每行数据作为一个字典，存储在一个列表中。如[{“登录用户名”: “xxx”, “登录密码”: “xxx”, …}, {…}, …]<br> 8 def get_test_data(excel_file_path, sheet_name):<br> 9     # excel对象初始化<br>10     if isinstance(excel_file_path, Excel):<br>11         excel &#x3D; excel_file_path<br>12     else:<br>13         excel &#x3D; Excel(excel_file_path)<br>14     # 校验sheet名<br>15     if not excel.get_sheet(sheet_name):<br>16         error(“sheet【】不存在，停止执行！” % sheet_name)<br>17         return<br>18     result_list &#x3D; []<br>19     all_row_data &#x3D; excel.get_all_row_data()<br>20     if len(all_row_data) &lt;&#x3D; 1:<br>21         error(“sheet【】数据不大于1行，停止执行！” % sheet_name)<br>22         return<br>23     # 将参数化的测试数据存入全局字典<br>24     head_line_data &#x3D; all_row_data[0]<br>25     for data in all_row_data[1:]:<br>26         if data[-1].lower() &#x3D;&#x3D; “n”:<br>27             continue<br>28         row_dict &#x3D; {}<br>29         # 最后一列为“是否执行”列，无需取值<br>30         for i in range(len(data[:-1])):<br>31             row_dict[head_line_data[i]] &#x3D; data[i]<br>32         result_list.append(row_dict)<br>33     return result_list<br>34<br>35<br>36 if <strong>name</strong> &#x3D;&#x3D; “<strong>main</strong>“:<br>37     from util.global_var import *<br>38     print(get_test_data(TEST_DATA_FILE_PATH, “搜索词”))<br>39     # [{‘搜索词’: ‘python’, ‘断言词’: ‘python’}, {‘搜索词’: ‘mysql’, ‘断言词’: ‘mysql5.6’}]</p><p>main_process.py<br>本模块基于 case_process.py 和 data_source_process.py，实现关键字驱动+数据驱动的测试用例集的执行。</p><p>suite_process()：执行具体的测试用例步骤 sheet（如“登录”sheet、“添加联系人”sheet 等）<br>main_suite_process()：执行“测试用例”主 sheet 的用例集。每行用例集对应一个用例步骤 sheet 和数据源 sheet。</p><p>  1 from util.excel_util import *<br>  2 from util.datetime_util import *<br>  3 from util.log_util import *<br>  4 from util.global_var import *<br>  5 from business_process.case_process import execute_case<br>  6 from business_process.data_source_process import get_test_data<br>  7<br>  8<br>  9 # 执行具体模块的用例sheet（登录sheet，添加联系人sheet等）<br> 10 def suite_process(excel_file_path, sheet_name, test_data_source&#x3D;None):<br> 11     “””<br> 12     :param excel_file_path: excel文件绝对路径或excel对象<br> 13     :param sheet_name: 测试步骤sheet名<br> 14     :param test_data_source: 数据驱动的数据源，默认没有<br> 15     :return:<br> 16     “””<br> 17     # 记录测试结果统计<br> 18     global TOTAL_CASE<br> 19     global PASS_CASE<br> 20     global FAIL_CASE<br> 21     # 整个用例sheet的测试结果，默认为全部通过<br> 22     suite_test_result &#x3D; True<br> 23     # excel对象初始化<br> 24     if isinstance(excel_file_path, Excel):<br> 25         excel &#x3D; excel_file_path<br> 26     else:<br> 27         excel &#x3D; Excel(excel_file_path)<br> 28     if not excel.get_sheet(sheet_name):<br> 29         error(“sheet【%s】不存在，停止执行！” % sheet_name)<br> 30         return<br> 31     # 获取测试用例集sheet的全部行数据<br> 32     all_row_data &#x3D; excel.get_all_row_data()<br> 33     if len(all_row_data) &lt;&#x3D; 1:<br> 34         error(“sheet【%s】数据不大于1行，停止执行！” % sheet_name)<br> 35         return<br> 36     # 标题行数据<br> 37     head_line_data &#x3D; all_row_data[0]<br> 38     # 切换到测试结果明细sheet，准备写入测试结果<br> 39     if not excel.get_sheet(“测试结果明细”):<br> 40         error(“【测试结果明细】sheet不存在，停止执行！”)<br> 41         return<br> 42     excel.write_row_data(head_line_data, None, True, “green”)<br> 43     # 执行每行的测试用例<br> 44     for row_data in all_row_data[1:]:<br> 45         result_data &#x3D; execute_case(excel, row_data, test_data_source)<br> 46         # 无需执行的测试步骤，跳过<br> 47         if result_data is None:<br> 48             continue<br> 49         TOTAL_CASE +&#x3D; 1<br> 50         if result_data[TEST_SCRIPT_TEST_RESULT_COL].lower() &#x3D;&#x3D; “fail”:<br> 51             suite_test_result &#x3D; False<br> 52             FAIL_CASE +&#x3D; 1<br> 53         else:<br> 54             PASS_CASE +&#x3D; 1<br> 55         excel.write_row_data(result_data)<br> 56     # 切换到测试结果统计sheet，写入统计数据<br> 57     if not excel.get_sheet(“测试结果统计”):<br> 58         error(“【测试结果统计】sheet不存在，停止执行！”)<br> 59         return<br> 60     excel.insert_row_data(1, [TOTAL_CASE, PASS_CASE, FAIL_CASE])<br> 61     return excel, suite_test_result<br> 62<br> 63<br> 64 # 执行【测试用例集】主sheet的用例集<br> 65 def main_suite_process(excel_file_path, sheet_name):<br> 66     # 初始化excel对象<br> 67     excel &#x3D; Excel(excel_file_path)<br> 68     if not excel:<br> 69         error(“excel数据文件【%s】不存在！” % excel_file_path)<br> 70         return<br> 71     if not excel.get_sheet(sheet_name):<br> 72         error(“sheet名称【%s】不存在！” % sheet_name)<br> 73         return<br> 74     # 获取所有行数据<br> 75     all_row_datas &#x3D; excel.get_all_row_data()<br> 76     if len(all_row_datas) &lt;&#x3D; 1:<br> 77         error(“sheet【%s】数据不大于1行，停止执行！” % sheet_name)<br> 78         return<br> 79     # 标题行数据<br> 80     head_line_data &#x3D; all_row_datas[0]<br> 81     for row_data in all_row_datas[1:]:<br> 82         # 校验用例步骤sheet名是否存在<br> 83         if row_data[MAIN_CASE_SCRIPT_SHEET_COL] not in excel.get_all_sheet():<br> 84             error(“#” * 50 + “ 用例步骤集【%s】不存在！ “ % row_data[MAIN_CASE_SCRIPT_SHEET_COL] + “#” * 50 + “\n”)<br> 85             row_data[MAIN_CASE_TEST_RESULT_COL] &#x3D; “Fail”<br> 86             excel.write_row_data(head_line_data, None, True, “red”)<br> 87             excel.write_row_data(row_data)<br> 88             continue<br> 89         # 跳过不需要执行的测试用例集<br> 90         if row_data[MAIN_CASE_IS_EXECUTE_COL].lower() &#x3D;&#x3D; “n”:<br> 91             info(“#” * 50 + “ 测试用例集【%s】无需执行！” % row_data[MAIN_CASE_CASE_NAME_COL] + “#” * 50 + “\n”)<br> 92             continue<br> 93         # 记录本用例集的测试时间<br> 94         row_data[MAIN_CASE_TEST_TIME_COL] &#x3D; get_english_datetime()<br> 95         # 判断本测试用例集是否进行数据驱动<br> 96         if row_data[MAIN_CASE_DATA_SOURCE_SHEET_COL]:<br> 97             # 校验测试数据集sheet名是否存在<br> 98             if row_data[MAIN_CASE_DATA_SOURCE_SHEET_COL] not in excel.get_all_sheet():<br> 99                 error(“#” * 50 + “ 测试数据集【%s】不存在！ “ % row_data[MAIN_CASE_DATA_SOURCE_SHEET_COL] + “#” * 50 + “\n”)<br>100                 row_data[MAIN_CASE_TEST_RESULT_COL] &#x3D; “Fail”<br>101                 excel.write_row_data(head_line_data, None, True, “red”)<br>102                 excel.write_row_data(row_data)<br>103                 continue<br>104             # 获取测试数据集<br>105             test_data_source &#x3D; get_test_data(excel, row_data[MAIN_CASE_DATA_SOURCE_SHEET_COL])<br>106             # 每条数据进行一次本用例集的测试<br>107             for data_source in test_data_source:<br>108                 info(“-“ * 50 + “ 测试用例集【%s】开始执行！” % row_data[MAIN_CASE_CASE_NAME_COL] + “-“ * 50)<br>109                 excel, test_result_flag &#x3D; suite_process(excel, row_data[MAIN_CASE_SCRIPT_SHEET_COL], data_source)<br>110                 # 记录本用例集的测试结果<br>111                 if test_result_flag:<br>112                     info(“#” * 50 + “ 测试用例集【%s】执行成功！ “ % row_data[MAIN_CASE_CASE_NAME_COL] + “#” * 50 + “\n”)<br>113                     row_data[MAIN_CASE_TEST_RESULT_COL] &#x3D; “Pass”<br>114                 else:<br>115                     error(“#” * 50 + “ 测试用例集【%s】执行失败！ “ % row_data[MAIN_CASE_CASE_NAME_COL] + “#” * 50 + “\n”)<br>116                     row_data[MAIN_CASE_TEST_RESULT_COL] &#x3D; “Fail”<br>117                 # 全部测试步骤结果写入后，最后写入本用例集的标题行和测试结果行数据<br>118                 # 切换到“测试结果明细”sheet，以写入测试执行结果<br>119                 excel.get_sheet(“测试结果明细”)<br>120                 excel.write_row_data(head_line_data, None, True, “red”)<br>121                 excel.write_row_data(row_data)<br>122         # 本用例集无需数据驱动<br>123         else:<br>124             info(“-“ * 50 + “ 测试用例集【%s】开始执行！” % row_data[MAIN_CASE_CASE_NAME_COL] + “-“ * 50)<br>125             excel, test_result_flag &#x3D; suite_process(excel, row_data[MAIN_CASE_SCRIPT_SHEET_COL])<br>126             # 记录本用例集的测试结果<br>127             if test_result_flag:<br>128                 info(“#” * 50 + “ 测试用例集【%s】执行成功！ “ % row_data[MAIN_CASE_SCRIPT_SHEET_COL] + “#” * 50 + “\n”)<br>129                 row_data[MAIN_CASE_TEST_RESULT_COL] &#x3D; “Pass”<br>130             else:<br>131                 error(“#” * 50 + “ 测试用例集【%s】执行失败！ “ % row_data[MAIN_CASE_SCRIPT_SHEET_COL] + “#” * 50 + “\n”)<br>132                 row_data[MAIN_CASE_TEST_RESULT_COL] &#x3D; “Fail”<br>133             # 全部测试步骤结果写入后，最后写入本用例集的标题行和测试结果行数据<br>134             # 切换到“测试结果明细”sheet，以写入测试执行结果<br>135             excel.get_sheet(“测试结果明细”)<br>136             excel.write_row_data(head_line_data, None, True, “red”)<br>137             excel.write_row_data(row_data)<br>138     return excel<br>139<br>140<br>141 if <strong>name</strong> &#x3D;&#x3D; “<strong>main</strong>“:<br>142     from util.report_util import create_excel_report_and_send_email<br>143     # excel, _ &#x3D; suite_process(TEST_DATA_FILE_PATH_1, “登录1”)<br>144     excel &#x3D; main_suite_process(TEST_DATA_FILE_PATH, “测试用例集”)<br>145     create_excel_report_and_send_email(excel, “<a href="mailto:&#49;&#56;&#50;&#50;&#x33;&#48;&#x31;&#x32;&#x34;&#64;&#113;&#113;&#x2e;&#99;&#x6f;&#109;">&#49;&#56;&#50;&#50;&#x33;&#48;&#x31;&#x32;&#x34;&#64;&#113;&#113;&#x2e;&#99;&#x6f;&#109;</a>“, “UI自动化测试”, “请查收附件：UI自动化测试报告”)</p><p>util 包<br>util 包属于第一层的测试工具层：用于实现测试过程中调用的工具类方法，例如读取配置文件、页面元素的操作方法、操作 Excel 文件、生成测试报告、发送邮件等。</p><p>global_var.py<br>本模块用于定义测试过程中所需的全局变量。</p><p> 1 import os<br> 2<br> 3<br> 4 # 工程根路径<br> 5 PROJECT_ROOT_PATH &#x3D; os.path.dirname(os.path.dirname(os.path.abspath(<strong>file</strong>)))<br> 6<br> 7 # 元素定位方法的ini配置文件路径<br> 8 ELEMENT_FILE_PATH &#x3D; os.path.join(PROJECT_ROOT_PATH, “conf”, “ElementsRepository.ini”)<br> 9<br>10 # excel文件路径<br>11 TEST_DATA_FILE_PATH &#x3D; os.path.join(PROJECT_ROOT_PATH, “test_data”, “test_case.xlsx”)<br>12<br>13 # 驱动路径<br>14 CHROME_DRIVER &#x3D; “E:\auto_test_driver\chromedriver.exe”<br>15 IE_DRIVER &#x3D; “E:\auto_test_driver\IEDriverServer.exe”<br>16 FIREFOX_DRIVER &#x3D; “E:\auto_test_driver\geckodriver.exe”<br>17<br>18 # 截图路径<br>19 SCREENSHOT_PATH &#x3D; os.path.join(PROJECT_ROOT_PATH, “exception_pic”)<br>20<br>21 # 日志配置文件路径<br>22 LOG_CONF_FILE_PATH &#x3D; os.path.join(PROJECT_ROOT_PATH, “conf”, “Logger.conf”)<br>23<br>24 # 测试报告存放路径<br>25 TEST_REPORT_FILE_DIR &#x3D; os.path.join(PROJECT_ROOT_PATH, “test_report”)<br>26<br>27 # 对应excel测试数据文件中具体模块sheet中的列号<br>28 TEST_SCRIPT_NAME_COL &#x3D; 1<br>29 TEST_SCRIPT_ACTION_COL &#x3D; 2<br>30 TEST_SCRIPT_LOCATE_METHOD_COL &#x3D; 3<br>31 TEST_SCRIPT_LOCATE_EXPRESSION_COL &#x3D; 4<br>32 TEST_SCRIPT_VALUE_COL &#x3D; 5<br>33 TEST_SCRIPT_IS_EXECUTE_COL &#x3D; 6<br>34 TEST_SCRIPT_TEST_TIME_COL &#x3D; 7<br>35 TEST_SCRIPT_TEST_RESULT_COL &#x3D; 8<br>36 TEST_SCRIPT_EXCEPTION_INFO_COL &#x3D; 9<br>37 TEST_SCRIPT_SCREENSHOT_PATH_COL &#x3D; 10<br>38<br>39 # 对应excel测试数据文件中“测试用例集”sheet列号<br>40 MAIN_CASE_CASE_NAME_COL &#x3D; 3<br>41 MAIN_CASE_BROWSER_NAME_COL &#x3D; 5<br>42 MAIN_CASE_SCRIPT_SHEET_COL &#x3D; 6<br>43 MAIN_CASE_DATA_SOURCE_SHEET_COL &#x3D; 7<br>44 MAIN_CASE_IS_EXECUTE_COL &#x3D; 8<br>45 MAIN_CASE_TEST_TIME_COL &#x3D; 9<br>46 MAIN_CASE_TEST_RESULT_COL &#x3D; 10<br>47<br>48 # 测试结果统计<br>49 TOTAL_CASE &#x3D; 0<br>50 PASS_CASE &#x3D; 0<br>51 FAIL_CASE &#x3D; 0<br>52<br>53<br>54 if <strong>name</strong> &#x3D;&#x3D; “<strong>main</strong>“:<br>55     print(PROJECT_ROOT_PATH)</p><p>find_element_util.py<br>本模块封装了基于显式等待的界面元素定位方法。</p><p> 1 from selenium.webdriver.support.ui import WebDriverWait<br> 2<br> 3<br> 4 # 显式等待一个元素<br> 5 def find_element(driver, locate_method, locate_exp):<br> 6     # 显式等待对象（最多等10秒，每0.2秒判断一次等待的条件）<br> 7     return WebDriverWait(driver, 10, 0.2).until(lambda x: x.find_element(locate_method, locate_exp))<br> 8<br> 9 # 显式等待一组元素<br>10 def find_elements(driver, locate_method, locate_exp):<br>11     # 显式等待对象（最多等10秒，每0.2秒判断一次等待的条件）<br>12     return WebDriverWait(driver, 10, 0.2).until(lambda x: x.find_elements(locate_method, locate_exp))</p><p>excel_util.py<br>本模块封装了对 excel 的读写操作（openpyxl 版本：3.0.4）。</p><p>  1 import os<br>  2 from openpyxl import load_workbook<br>  3 from openpyxl.styles import PatternFill, Font, Side, Border<br>  4 from util.datetime_util import *<br>  5 from util.global_var import *<br>  6 from util.log_util import *<br>  7<br>  8<br>  9 # 支持excel读写操作的工具类<br> 10 class Excel:<br> 11<br> 12     # 初始化读取excel文件<br> 13     def <strong>init</strong>(self, file_path):<br> 14         if not os.path.exists(file_path):<br> 15             return<br> 16         self.wb &#x3D; load_workbook(file_path)<br> 17         # 初始化默认sheet<br> 18         self.ws &#x3D; self.wb.active<br> 19         self.data_file_path &#x3D; file_path<br> 20         # 初始化颜色字典，供设置样式用<br> 21         self.color_dict &#x3D; {“red”: “FFFF3030”, “green”: “FF008B00”}<br> 22<br> 23     def get_all_sheet(self):<br> 24         return self.wb.get_sheet_names()<br> 25<br> 26     # 打开指定sheet<br> 27     def get_sheet(self, sheet_name):<br> 28         if sheet_name not in self.get_all_sheet():<br> 29             error(“sheet名称【%s】不存在！” % sheet_name)<br> 30             return<br> 31         self.ws &#x3D; self.wb.get_sheet_by_name(sheet_name)<br> 32         return True<br> 33<br> 34     # 获取最大行号<br> 35     def get_max_row_no(self):<br> 36         # openpyxl的API的行、列索引默认都从1开始<br> 37         return self.ws.max_row<br> 38<br> 39     # 获取最大列号<br> 40     def get_max_col_no(self):<br> 41         return self.ws.max_column<br> 42<br> 43     # 获取所有行数据<br> 44     def get_all_row_data(self, head_line&#x3D;True):<br> 45         # 是否需要标题行数据的标识，默认需要<br> 46         if head_line:<br> 47             min_row &#x3D; 1  # 行号从1开始，即1为标题行<br> 48         else:<br> 49             min_row &#x3D; 2<br> 50         result &#x3D; []<br> 51         # min_row&#x3D;None：默认获取标题行数据<br> 52         for row in self.ws.iter_rows(min_row&#x3D;min_row, max_row&#x3D;self.get_max_row_no(), max_col&#x3D;self.get_max_col_no()):<br> 53             result.append([cell.value for cell in row])<br> 54         return result<br> 55<br> 56     # 获取指定行数据<br> 57     def get_row_data(self, row_num):<br> 58         # 0 为标题行<br> 59         return [cell.value for cell in self.ws[row_num+1]]<br> 60<br> 61     # 获取指定列数据<br> 62     def get_col_data(self, col_num):<br> 63         # 索引从0开始<br> 64         return [cell.value for cell in tuple(self.ws.columns)[col_num]]<br> 65<br> 66     # 追加行数据且可以设置样式<br> 67     def write_row_data(self, data, font_color&#x3D;None, border&#x3D;True, fill_color&#x3D;None):<br> 68         if not isinstance(data, (list, tuple)):<br> 69             print(“写入数据失败：数据不为列表或元组类型！【%s】” % data)<br> 70         self.ws.append(data)<br> 71         # 设置字体颜色<br> 72         if font_color:<br> 73             if font_color.lower() in self.color_dict.keys():<br> 74                 font_color &#x3D; self.color_dict[font_color]<br> 75         # 设置单元格填充颜色<br> 76         if fill_color:<br> 77             if fill_color.lower() in self.color_dict.keys():<br> 78                 fill_color &#x3D; self.color_dict[fill_color]<br> 79         # 设置单元格边框<br> 80         if border:<br> 81             bd &#x3D; Side(style&#x3D;”thin”, color&#x3D;”000000”)<br> 82         # 记录数据长度（否则会默认与之前行最长数据行的长度相同，导致样式超过了该行实际长度）<br> 83         count &#x3D; 0<br> 84         for cell in self.ws[self.get_max_row_no()]:<br> 85             # 设置完该行的实际数据长度样式后，则退出<br> 86             if count &gt; len(data) - 1:<br> 87                 break<br> 88             if font_color:<br> 89                 cell.font &#x3D; Font(color&#x3D;font_color)<br> 90             # 如果没有设置字体颜色，则默认给执行结果添加字体颜色<br> 91             else:<br> 92                 if cell.value is not None and isinstance(cell.value, str):<br> 93                     if cell.value.lower() &#x3D;&#x3D; “pass” or cell.value &#x3D;&#x3D; “成功”:<br> 94                         cell.font &#x3D; Font(color&#x3D;self.color_dict[“green”])<br> 95                     elif cell.value.lower() &#x3D;&#x3D; “fail” or cell.value &#x3D;&#x3D; “失败”:<br> 96                         cell.font &#x3D; Font(color&#x3D;self.color_dict[“red”])<br> 97             if border:<br> 98                 cell.border &#x3D; Border(left&#x3D;bd, right&#x3D;bd, top&#x3D;bd, bottom&#x3D;bd)<br> 99             if fill_color:<br>100                 cell.fill &#x3D; PatternFill(fill_type&#x3D;”solid”, fgColor&#x3D;fill_color)<br>101             count +&#x3D; 1<br>102<br>103     # 指定行插入数据（行索引从0开始）<br>104     def insert_row_data(self, row_no, data, font_color&#x3D;None, border&#x3D;True, fill_color&#x3D;None):<br>105         if not isinstance(data, (list, tuple)):<br>106             print(“写入数据失败：数据不为列表或元组类型！【%s】” % data)<br>107         for idx, cell in enumerate(self.ws[row_no+1]):  # 此处行索引从1开始<br>108             cell.value &#x3D; data[idx]<br>109<br>110     # 生成写入了测试结果的excel数据文件<br>111     def save(self, save_file_name, timestamp):<br>112         save_dir &#x3D; os.path.join(TEST_REPORT_FILE_DIR, get_chinese_date())<br>113         if not os.path.exists(save_dir):<br>114             os.mkdir(save_dir)<br>115         save_file &#x3D; os.path.join(save_dir, save_file_name + “_” + timestamp + “.xlsx”)<br>116         self.wb.save(save_file)<br>117         info(“生成测试结果文件：%s” % save_file)<br>118         return save_file<br>119<br>120<br>121 if <strong>name</strong> &#x3D;&#x3D; “<strong>main</strong>“:<br>122     from util.global_var import *<br>123     from util.datetime_util import *<br>124     excel &#x3D; Excel(TEST_DATA_FILE_PATH)<br>125     excel.get_sheet(“测试结果统计”)<br>126     # print(excel.get_all_row_data())<br>127     # print(excel.get_row_data(1))<br>128     # print(excel.get_col_data(1))<br>129     # excel.write_row_data([“4”, None, “嘻哈”], “green”, True, “red”)<br>130     excel.insert_row_data(1, [1,2,3])<br>131     excel.save(get_timestamp())</p><p>ini_reader.py<br>本模块封装了对 ini 配置文件的读取操作。</p><p> 1 import configparser<br> 2<br> 3<br> 4 class IniParser:<br> 5<br> 6     # 初始化打开指定ini文件并指定编码<br> 7     def <strong>init</strong>(self, file_path):<br> 8         self.cf &#x3D; configparser.ConfigParser()<br> 9         self.cf.read(file_path, encoding&#x3D;”utf-8”)<br>10<br>11     # 获取所有分组名称<br>12     def get_sections(self):<br>13         return self.cf.sections()<br>14<br>15     # 获取指定分组的所有键<br>16     def get_options(self, section):<br>17         return self.cf.options(section)<br>18<br>19     # 获取指定分组的键值对<br>20     def get_items(self, section):<br>21         return self.cf.items(section)<br>22<br>23     # 获取指定分组的指定键的值<br>24     def get_value(self, section, key):<br>25         return self.cf.get(section, key)<br>26<br>27<br>28 if <strong>name</strong> &#x3D;&#x3D; “<strong>main</strong>“:<br>29     from conf.global_var import *<br>30     parser &#x3D; IniParser(ELEMENT_FILE_PATH)<br>31     print(parser.get_sections())<br>32     print(parser.get_options(“126mail_indexPage”))<br>33     print(parser.get_value(“126mail_indexPage”, ‘indexpage.frame’))</p><p>email_util.py<br>本模块封装了邮件发送功能。（示例代码中的用户名&#x2F;密码已隐藏）</p><p> 1 import yagmail<br> 2 import traceback<br> 3 from util.log_util import *<br> 4<br> 5<br> 6 def send_mail(attachments_report_name, receiver, subject, content):<br> 7     try:<br> 8         # 连接邮箱服务器<br> 9         # 注意：若使用QQ邮箱，则password为授权码而非邮箱密码；使用其它邮箱则为邮箱密码<br>10         # encoding设置为GBK，否则中文附件名会乱码<br>11         yag &#x3D; yagmail.SMTP(user&#x3D;”<strong><strong><strong>@163.com”, password&#x3D;”</strong></strong></strong>“, host&#x3D;”smtp.163.com”, encoding&#x3D;’GBK’)<br>12<br>13         # 收件人、标题、正文、附件（若多个收件人或多个附件，则可使用列表）<br>14         yag.send(to&#x3D;receiver, subject&#x3D;subject, contents&#x3D;content, attachments&#x3D;attachments_report_name)<br>15<br>16         # 可简写：yag.send(“****@163.com”, subject, contents, report)<br>17<br>18         info(“测试报告邮件发送成功!【邮件标题：%s】【邮件附件：%s】【收件人：%s】” % (subject, attachments_report_name, receiver))<br>19     except:<br>20         error(“测试报告邮件发送失败!【邮件标题：%s】【邮件附件：%s】【收件人：%s】” % (subject, attachments_report_name, receiver))<br>21         error(traceback.format_exc())<br>22<br>23<br>24 if <strong>name</strong> &#x3D;&#x3D; “<strong>main</strong>“:<br>25    send_mail(“e:\code.txt”, “<a href="mailto:&#x31;&#x38;&#x32;&#x32;&#51;&#x30;&#49;&#50;&#x34;&#64;&#x71;&#x71;&#x2e;&#99;&#111;&#x6d;">&#x31;&#x38;&#x32;&#x32;&#51;&#x30;&#49;&#50;&#x34;&#64;&#x71;&#x71;&#x2e;&#99;&#111;&#x6d;</a>“, “测试邮件”, “正文”)</p><p>datetime_util.py<br>该模块实现了获取各种格式的当前日期时间。</p><p> 1 import time<br> 2<br> 3<br> 4 # 返回中文格式的日期：xxxx年xx月xx日<br> 5 def get_chinese_date():<br> 6     year &#x3D; time.localtime().tm_year<br> 7     if len(str(year)) &#x3D;&#x3D; 1:<br> 8         year &#x3D; “0” + str(year)<br> 9     month &#x3D; time.localtime().tm_mon<br>10     if len(str(month)) &#x3D;&#x3D; 1:<br>11         month &#x3D; “0” + str(month)<br>12     day &#x3D; time.localtime().tm_mday<br>13     if len(str(day)) &#x3D;&#x3D; 1:<br>14         day &#x3D; “0” + str(day)<br>15     return “{}年{}月{}日”.format(year, month, day)<br>16<br>17<br>18 # 返回英文格式的日期：xxxx&#x2F;xx&#x2F;xx<br>19 def get_english_date():<br>20     year &#x3D; time.localtime().tm_year<br>21     if len(str(year)) &#x3D;&#x3D; 1:<br>22         year &#x3D; “0” + str(year)<br>23     month &#x3D; time.localtime().tm_mon<br>24     if len(str(month)) &#x3D;&#x3D; 1:<br>25         month &#x3D; “0” + str(month)<br>26     day &#x3D; time.localtime().tm_mday<br>27     if len(str(day)) &#x3D;&#x3D; 1:<br>28         day &#x3D; “0” + str(day)<br>29     return “{}&#x2F;{}&#x2F;{}”.format(year, month, day)<br>30<br>31<br>32 # 返回中文格式的时间：xx时xx分xx秒<br>33 def get_chinese_time():<br>34     hour &#x3D; time.localtime().tm_hour<br>35     if len(str(hour)) &#x3D;&#x3D; 1:<br>36         hour &#x3D; “0” + str(hour)<br>37     minute &#x3D; time.localtime().tm_min<br>38     if len(str(minute)) &#x3D;&#x3D; 1:<br>39         minute &#x3D; “0” + str(minute)<br>40     second &#x3D; time.localtime().tm_sec<br>41     if len(str(second)) &#x3D;&#x3D; 1:<br>42         second &#x3D; “0” + str(second)<br>43     return “{}时{}分{}秒”.format(hour, minute, second)<br>44<br>45<br>46 # 返回英文格式的时间：xx:xx:xx<br>47 def get_english_time():<br>48     hour &#x3D; time.localtime().tm_hour<br>49     if len(str(hour)) &#x3D;&#x3D; 1:<br>50         hour &#x3D; “0” + str(hour)<br>51     minute &#x3D; time.localtime().tm_min<br>52     if len(str(minute)) &#x3D;&#x3D; 1:<br>53         minute &#x3D; “0” + str(minute)<br>54     second &#x3D; time.localtime().tm_sec<br>55     if len(str(second)) &#x3D;&#x3D; 1:<br>56         second &#x3D; “0” + str(second)<br>57     return “{}:{}:{}”.format(hour, minute, second)<br>58<br>59<br>60 # 返回中文格式的日期时间<br>61 def get_chinese_datetime():<br>62     return get_chinese_date() + “ “ + get_chinese_time()<br>63<br>64<br>65 # 返回英文格式的日期时间<br>66 def get_english_datetime():<br>67     return get_english_date() + “ “ + get_english_time()<br>68<br>69<br>70 # 返回时间戳<br>71 def get_timestamp():<br>72     year &#x3D; time.localtime().tm_year<br>73     if len(str(year)) &#x3D;&#x3D; 1:<br>74         year &#x3D; “0” + str(year)<br>75     month &#x3D; time.localtime().tm_mon<br>76     if len(str(month)) &#x3D;&#x3D; 1:<br>77         month &#x3D; “0” + str(month)<br>78     day &#x3D; time.localtime().tm_mday<br>79     if len(str(day)) &#x3D;&#x3D; 1:<br>80         day &#x3D; “0” + str(day)<br>81     hour &#x3D; time.localtime().tm_hour<br>82     if len(str(hour)) &#x3D;&#x3D; 1:<br>83         hour &#x3D; “0” + str(hour)<br>84     minute &#x3D; time.localtime().tm_min<br>85     if len(str(minute)) &#x3D;&#x3D; 1:<br>86         minute &#x3D; “0” + str(minute)<br>87     second &#x3D; time.localtime().tm_sec<br>88     if len(str(second)) &#x3D;&#x3D; 1:<br>89         second &#x3D; “0” + str(second)<br>90     return “{}{}{}_{}{}{}”.format(year, month, day, hour, minute, second)<br>91<br>92<br>93 if <strong>name</strong> &#x3D;&#x3D; “<strong>main</strong>“:<br>94     print(get_chinese_datetime())<br>95     print(get_english_datetime())</p><p>log_util.py<br>该模块封装了日志打印输出、级别设定等功能。</p><p> 1 import logging<br> 2 import logging.config<br> 3 from conf.global_var import *<br> 4<br> 5<br> 6 # 日志配置文件：多个logger，每个logger指定不同的handler<br> 7 # handler：设定了日志输出行的格式<br> 8 #          以及设定写日志到文件（是否回滚）？还是到屏幕<br> 9 #          还定了打印日志的级别<br>10 logging.config.fileConfig(LOG_CONF_FILE_PATH)<br>11 logger &#x3D; logging.getLogger(“example01”)<br>12<br>13<br>14 def debug(message):<br>15     logging.debug(message)<br>16<br>17<br>18 def info(message):<br>19     logging.info(message)<br>20<br>21<br>22 def warning(message):<br>23     logging.warning(message)<br>24<br>25<br>26 def error(message):<br>27     logging.error(message)<br>28<br>29<br>30 if <strong>name</strong>&#x3D;&#x3D;”<strong>main</strong>“:<br>31     debug(“hi”)<br>32     info(“hiphop”)<br>33     warning(“hello”)<br>34     error(“这是一个error日志”)</p><p>report_util.py<br>生成测试结果文件并发送邮件。</p><p> 1 from util.email_util import send_mail<br> 2 from util.datetime_util import *<br> 3<br> 4<br> 5 # 生成测试报告并发送邮件<br> 6 def create_excel_report_and_send_email(excel_obj, receiver, subject, content):<br> 7     “””<br> 8     :param excel_obj: excel对象用于保存文件<br> 9     :param timestamp: 用于文件命名的时间戳<br>10     :return: 返回excel测试报告文件名<br>11     “””<br>12     time_stamp &#x3D; get_timestamp()<br>13     report_path &#x3D; excel_obj.save(subject, time_stamp)<br>14     send_mail(report_path, receiver, subject+”_”+time_stamp, content)</p><p>conf 目录<br>conf 目录属于第一层测试工具层，用于存储各配置文件。</p><p>elements_repository.ini<br>该配置文件存储了各页面的元素对象的定位方式和定位表达式。</p><p> 1 [126mail_indexPage]<br> 2 indexPage.loginlink&#x3D;xpath&gt;&#x2F;&#x2F;a[contains(text(),’密码登录’)]<br> 3 indexPage.frame&#x3D;xpath&gt;&#x2F;&#x2F;iframe[contains(@id,’x-URS-iframe’)]<br> 4 indexPage.username&#x3D;xpath&gt;&#x2F;&#x2F;input[@name&#x3D;’email’]<br> 5 indexPage.password&#x3D;xpath&gt;&#x2F;&#x2F;input[@name&#x3D;’password’]<br> 6 indexPage.loginbutton&#x3D;id&gt;dologin<br> 7<br> 8 [126mail_homePage]<br> 9 homePage.addressLink&#x3D;xpath&gt;&#x2F;&#x2F;div[text()&#x3D;’通讯录’]<br>10<br>11 [126mail_contactPersonPage]<br>12 contactPersonPage.createButton&#x3D;xpath&gt;&#x2F;&#x2F;span[text()&#x3D;’新建联系人’]<br>13 contactPersonPage.name&#x3D;xpath&gt;&#x2F;&#x2F;a[@title&#x3D;’编辑详细姓名’]&#x2F;preceding-sibling::div&#x2F;input<br>14 contactPersonPage.email&#x3D;xpath&gt;&#x2F;&#x2F;<em>[@id&#x3D;’iaddress_MAIL_wrap’]&#x2F;&#x2F;input<br>15 contactPersonPage.starContacts&#x3D;xpath&gt;&#x2F;&#x2F;span[text()&#x3D;’设为星标联系人’]&#x2F;preceding-sibling::span&#x2F;b<br>16 contactPersonPage.phone&#x3D;xpath&gt;&#x2F;&#x2F;</em>[@id&#x3D;’iaddress_TEL_wrap’]&#x2F;&#x2F;dd&#x2F;&#x2F;input<br>17 contactPersonPage.otherinfo&#x3D;xpath&gt;&#x2F;&#x2F;textarea<br>18 contactPersonPage.confirmButton&#x3D;xpath&gt;&#x2F;&#x2F;span[.&#x3D;’确 定’]</p><p>logger.conf</p><p>###############################################<br>[loggers]<br>keys&#x3D;root,example01,example02<br>[logger_root]<br>level&#x3D;DEBUG<br>handlers&#x3D;hand01,hand02</p><p>[logger_example01]<br>handlers&#x3D;hand01,hand02<br>qualname&#x3D;example01<br>propagate&#x3D;0</p><p>[logger_example02]<br>handlers&#x3D;hand01,hand03<br>qualname&#x3D;example02<br>propagate&#x3D;0</p><p>###############################################<br>[handlers]<br>keys&#x3D;hand01,hand02,hand03</p><p>[handler_hand01]<br>class&#x3D;StreamHandler<br>level&#x3D;INFO<br>formatter&#x3D;form01<br>args&#x3D;(sys.stderr,)</p><p>[handler_hand02]<br>class&#x3D;FileHandler<br>level&#x3D;DEBUG<br>formatter&#x3D;form01<br>args&#x3D;(‘E:\pycharm_project_dir\UIKeywordFramework\log\ui_test.log’, ‘a’)</p><p>[handler_hand03]<br>class&#x3D;handlers.RotatingFileHandler<br>level&#x3D;INFO<br>formatter&#x3D;form01<br>args&#x3D;(‘E:\pycharm_project_dir\UIKeywordFramework\log\ui_test.log’, ‘a’, 10<em>1024</em>1024, 5)</p><p>###############################################<br>[formatters]<br>keys&#x3D;form01,form02</p><p>[formatter_form01]<br>format&#x3D;%(asctime)s [%(levelname)s] %(message)s<br>datefmt&#x3D;%Y-%m-%d %H:%M:%S</p><p>[formatter_form02]<br>format&#x3D;%(name)-12s: [%(levelname)-8s] %(message)s<br>datefmt&#x3D;%Y-%m-%d %H:%M:%S</p><p>test_data 目录<br>test_data 目录用于存放测试数据文件（Excel），存储了用例步骤、用例执行关键字、数据源等测试数据。</p><p><img src="/assets/2/image-20220510224210-86i3t56.png" alt="image.png"></p><p><img src="/assets/2/image-20220510224216-eb51jsa.png" alt="image.png"></p><p><img src="/assets/2/image-20220510224222-xoo66lr.png" alt="image.png"></p><p>main.py<br>本模块是本框架的运行主入口，属于第四层“测试场景层”，将测试用例组织成测试场景，实现各种级别 cases 的管理，如冒烟，回归等测试场景。</p><p>基于 business_process&#x2F;main_process.py 中的模块用例 sheet 执行函数或主 sheet 执行函数，组装测试场景。<br>可直接用代码组装测试场景，也可根据 excel 数据文件的用例集合和用例步骤的维护来设定测试场景。<br>完成测试执行后生成测试结果文件并发送邮件。</p><p> 1 from business_process.main_process import *<br> 2 from util.report_util import *<br> 3<br> 4<br> 5 # 组装测试场景<br> 6 # 冒烟测试<br> 7 def smoke_test(report_name):<br> 8     excel, _ &#x3D; suite_process(TEST_DATA_FILE_PATH, “登录（非数据驱动）”)<br> 9     excel, _ &#x3D; suite_process(excel, “关闭浏览器”)<br>10     # 生成测试报告并发送邮件<br>11     create_excel_report_and_send_email(excel, [‘<a href="mailto:&#x69;&#x74;&#x73;&#106;&#x75;&#x6e;&#111;&#x40;&#49;&#54;&#51;&#46;&#99;&#x6f;&#x6d;">&#x69;&#x74;&#x73;&#106;&#x75;&#x6e;&#111;&#x40;&#49;&#54;&#51;&#46;&#99;&#x6f;&#x6d;</a>‘, ‘<a href="mailto:&#x31;&#56;&#50;&#x32;&#51;&#48;&#49;&#50;&#x34;&#x40;&#113;&#113;&#x2e;&#99;&#x6f;&#109;">&#x31;&#56;&#50;&#x32;&#51;&#48;&#49;&#50;&#x34;&#x40;&#113;&#113;&#x2e;&#99;&#x6f;&#109;</a>‘], report_name, “请查收附件：UI自动化测试报告”)<br>12<br>13<br>14 # 全量测试：执行主sheet的用例集<br>15 def suite_test(report_name):<br>16     excel &#x3D; main_suite_process(TEST_DATA_FILE_PATH, “测试用例集”)<br>17     create_excel_report_and_send_email(excel, [‘<a href="mailto:&#x69;&#x74;&#x73;&#106;&#117;&#x6e;&#x6f;&#x40;&#x31;&#x36;&#51;&#46;&#x63;&#111;&#109;">&#x69;&#x74;&#x73;&#106;&#117;&#x6e;&#x6f;&#x40;&#x31;&#x36;&#51;&#46;&#x63;&#111;&#109;</a>‘, ‘<a href="mailto:&#49;&#56;&#50;&#50;&#x33;&#x30;&#49;&#x32;&#x34;&#64;&#x71;&#x71;&#46;&#99;&#x6f;&#109;">&#49;&#56;&#50;&#50;&#x33;&#x30;&#49;&#x32;&#x34;&#64;&#x71;&#x71;&#46;&#99;&#x6f;&#109;</a>‘], report_name, “请查收附件：UI自动化测试报告”)<br>18<br>19<br>20 if <strong>name</strong> &#x3D;&#x3D; “<strong>main</strong>“:<br>21     # smoke_test(“UI自动化测试报告_冒烟测试”)<br>22     suite_test(“UI自动化测试报告_全量测试”)</p><p><img src="/assets/2/image-20220510224231-f0bp0i7.png" alt="image.png"></p><p>test_report 目录<br>本目录用于存放测试结果文件。</p><p><img src="/assets/2/image-20220510224246-mblacyv.png" alt="image.png"></p><p><img src="/assets/2/image-20220510224252-wzmcw0q.png" alt="image.png"></p><p><img src="/assets/2/image-20220510224258-cxousa9.png" alt="image.png"></p><p>exception_pic 目录<br>本目录用于存放失败用例的截图。</p><p><img src="/assets/2/image-20220510224309-zvu91ms.png" alt="image.png"></p><p>log 目录<br>本目录用于存放日志输出文件（日志内容同时也会输出到控制台）。</p><p>log&#x2F;ui_test.log：</p><p><img src="/assets/2/image-20220510224316-xhmpjmi.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;关键字驱动框架简介&lt;br&gt; 原理及特点&lt;br&gt; 关键字驱动测试是数据驱动测试的一种改进类型，它也被称为表格驱动测试或者基于动作字的测试。&lt;br&gt; 主要关键字包括三类：被操作对象（Item）、操作行为（Operation）和操作值（Value），用面向对象形</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="06_自动化" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="02_自动化实操" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/"/>
    
    <category term="01_UI自动化" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01-UI%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="UI自动化测试框架" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01-UI%E8%87%AA%E5%8A%A8%E5%8C%96/UI%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/"/>
    
    
    <category term="课后" scheme="http://example.com/tags/%E8%AF%BE%E5%90%8E/"/>
    
  </entry>
  
  <entry>
    <title>Hudson的使用</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/07_%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E5%B7%A5%E5%85%B7/02_hudson/02_Hudson%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/07_%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E5%B7%A5%E5%85%B7/02_hudson/02_Hudson%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2022-05-08T14:12:14.629Z</published>
    <updated>2022-05-12T15:45:18.772Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hudson之——Hudson的使用（使用-Hudson-来自动化编译、分析、打包、发布、部署项目）"><a href="#Hudson之——Hudson的使用（使用-Hudson-来自动化编译、分析、打包、发布、部署项目）" class="headerlink" title="Hudson之——Hudson的使用（使用 Hudson 来自动化编译、分析、打包、发布、部署项目）"></a>Hudson之——Hudson的使用（使用 Hudson 来自动化编译、分析、打包、发布、部署项目）</h2><p>添加项目</p><p><img src="/assets/2/image-20220508221334-gk5k0ho.png" alt="image.png"></p><p><img src="/assets/2/image-20220508221340-c16t81i.png" alt="image.png"></p><p><img src="/assets/2/image-20220508221351-l752mzc.png" alt="image.png"></p><p><img src="/assets/2/image-20220508221358-wfw05al.png" alt="image.png"></p><p><img src="/assets/2/image-20220508221419-px8s80t.png" alt="image.png"></p><p><img src="/assets/2/image-20220508221427-d9t0fj1.png" alt="image.png"></p><p>edu-common-parent为所有项目的父级项目，没有任务Java代码，如果项目中有Java代码，则与上述配置稍微有点区别，具体看下面的步骤。</p><p><img src="/assets/2/image-20220508221440-gpkcq72.png" alt="image.png"></p><p><img src="/assets/2/image-20220508221447-0nmzqyi.png" alt="image.png"></p><p><img src="/assets/2/image-20220508221453-jovsw4g.png" alt="image.png"></p><p><img src="/assets/2/image-20220508221459-jvx6n3r.png" alt="image.png"></p><p><img src="/assets/2/image-20220508221506-hr223s4.png" alt="image.png"></p><p><img src="/assets/2/image-20220508221513-3z1s497.png" alt="image.png"></p><p><img src="/assets/2/image-20220508221519-9tu6ftx.png" alt="image.png"></p><p><img src="/assets/2/image-20220508221552-90dkabg.png" alt="image.png"></p><p><img src="/assets/2/image-20220508221559-rkjzp80.png" alt="image.png"></p><p><img src="/assets/2/image-20220508221604-pbz1sht.png" alt="image.png"></p><p>附录：</p><p>service-user.sh代码如下：</p><blockquote><p>#!&#x2F;bin&#x2F;sh</p><h2 id="java-env"><a href="#java-env" class="headerlink" title="java env"></a>java env</h2><p>export JAVA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;java&#x2F;jdk1.7.0_72<br>export JRE_HOME&#x3D;$JAVA_HOME&#x2F;jre</p><h2 id="service-name"><a href="#service-name" class="headerlink" title="service name"></a>service name</h2><p>APP_NAME&#x3D;user</p><p>SERVICE_DIR&#x3D;&#x2F;home&#x2F;wusc&#x2F;edu&#x2F;service&#x2F;$APP_NAME<br>SERVICE_NAME&#x3D;edu-service-$APP_NAME<br>JAR_NAME&#x3D;$SERVICE_NAME.jar<br>PID&#x3D;$SERVICE_NAME.pid</p><p>cd $SERVICE_DIR</p><p>case “$1” in</p><pre><code>start)    nohup $JRE_HOME/bin/java -Xms256m -Xmx512m -jar $JAR_NAME &gt;/dev/null 2&gt;&amp;1 &amp;    echo $! &gt; $SERVICE_DIR/$PID    echo &quot;=== start $SERVICE_NAME&quot;    ;;stop)    kill `cat $SERVICE_DIR/$PID`    rm -rf $SERVICE_DIR/$PID    echo &quot;=== stop $SERVICE_NAME&quot;    sleep 5    P_ID=`ps -ef | grep -w &quot;$SERVICE_NAME&quot; | grep -v &quot;grep&quot; | awk &#39;&#123;print $2&#125;&#39;`    if [ &quot;$P_ID&quot; == &quot;&quot; ]; then        echo &quot;=== $SERVICE_NAME process not exists or stop success&quot;    else        echo &quot;=== $SERVICE_NAME process pid is:$P_ID&quot;        echo &quot;=== begin kill $SERVICE_NAME process, pid is:$P_ID&quot;        kill -9 $P_ID    fi    ;;restart)    $0 stop    sleep 2    $0 start    echo &quot;=== restart $SERVICE_NAME&quot;    ;;*)    ## restart    $0 stop    sleep 2    $0 start    ;;</code></pre><p>esac<br>exit 0</p></blockquote><p>restart.sh代码如下：</p><blockquote><h2 id="java-env-1"><a href="#java-env-1" class="headerlink" title="java env"></a>java env</h2><p>export JAVA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;java&#x2F;jdk1.7.0_72<br>export JRE_HOME&#x3D;$JAVA_HOME&#x2F;jre</p><h2 id="restart-tomcat"><a href="#restart-tomcat" class="headerlink" title="restart tomcat"></a>restart tomcat</h2><p>&#x2F;home&#x2F;wusc&#x2F;edu&#x2F;web&#x2F;boss-tomcat&#x2F;bin&#x2F;shutdown.sh<br>sleep 3<br>rm -rf &#x2F;home&#x2F;wusc&#x2F;edu&#x2F;web&#x2F;boss-tomcat&#x2F;webapps&#x2F;edu-web-boss<br>&#x2F;home&#x2F;wusc&#x2F;edu&#x2F;web&#x2F;boss-tomcat&#x2F;bin&#x2F;startup.sh</p></blockquote><h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Hudson之——Hudson的使用（使用-Hudson-来自动化编译、分析、打包、发布、部署项目）&quot;&gt;&lt;a href=&quot;#Hudson之——Hudson的使用（使用-Hudson-来自动化编译、分析、打包、发布、部署项目）&quot; class=&quot;headerlink&quot;</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="07_持续集成工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/07-%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E5%B7%A5%E5%85%B7/"/>
    
    <category term="02_hudson" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/07-%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E5%B7%A5%E5%85%B7/02-hudson/"/>
    
    
    <category term="课后" scheme="http://example.com/tags/%E8%AF%BE%E5%90%8E/"/>
    
  </entry>
  
  <entry>
    <title>xmind转Excel</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/01_%E6%B5%8B%E8%AF%95%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/11_TAPD/02_xmind%E8%BD%ACExcel/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/01_%E6%B5%8B%E8%AF%95%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/11_TAPD/02_xmind%E8%BD%ACExcel/</id>
    <published>2022-05-07T12:23:15.048Z</published>
    <updated>2022-05-12T15:37:53.779Z</updated>
    
    <content type="html"><![CDATA[<h3 id="xmind转Excel测试用例"><a href="#xmind转Excel测试用例" class="headerlink" title="xmind转Excel测试用例"></a>xmind转Excel测试用例</h3><ul><li>一、引言</li><li>二、环境准备</li><li>三、脚本编写</li><li><ul><li>1、读取xmind文件</li><li>2、根据读取数据，解析数据</li><li>3、定义测试用例标题</li><li>4、数据写入Excel中</li><li>5、运行入口</li></ul></li><li>四、总结</li></ul><h1 id="一、引言"><a href="#一、引言" class="headerlink" title="一、引言"></a>一、引言</h1><p>作为一名测试点工，我们是需要经常写测试用例的，一般我们都会使用xmind或者freemain先写出导图，然后根据导图再编写我们的测试用例。那我们能不能直接把导图中的内容直接转成Excel测试用例呢，…有了想法，开始行动起来，测试人不要怂，开始干。</p><h1 id="二、环境准备"><a href="#二、环境准备" class="headerlink" title="二、环境准备"></a>二、环境准备</h1><p>点工一般都使用python居多，本次我们也是用python来写脚本实现本次需求，从网上了解到xmindparser库可以解析xmind文件数据，支持将xmind文件解析为dict、json、xml数据类型。数据解析完成后，还需要把解析的数据存在Excel中，python处理Excel库很多，在这边我使用的是openpyxl库。</p><pre><code class="python">python 3.7.1xmindparser 1.0.9openpyxl 3.0.9</code></pre><p>上面介绍完本次使用的库，还有一个重点就是，xmind的导图如何每个人写法都不一样，我们该如何解析形成统一标准呢，所以我们应该制定一个写导图的规则，下方是我制定的一个规则，后面都以此规则讲解。规则不是唯一，可根据实际情况自行制定。</p><p>中心主题：项目标题<br>二级标题：模块标题<br>三级标题：用例正标题<br>四级标题：操作步骤<br>五级标题：预期结果<br><img src="/assets/2/image-20220507202514-i7vov3m.png" alt="image.png"></p><h1 id="三、脚本编写"><a href="#三、脚本编写" class="headerlink" title="三、脚本编写"></a>三、脚本编写</h1><h2 id="1、读取xmind文件"><a href="#1、读取xmind文件" class="headerlink" title="1、读取xmind文件"></a>1、读取xmind文件</h2><p>读取xmind文件数据，xmind_to_dict(xmind_file_path)[0][“topic”] 返回数据如图所示，我们读取文件时把中心主题和二级目录下分支数据取出，用于后续处理。<br><img src="/assets/2/image-20220507202505-y0no9di.png" alt="image.png"><br>代码如下：</p><pre><code class="python">from xmindparser import xmind_to_dictdef read_xmind_data(xmind_file_path):    &quot;&quot;&quot;    读取xmind文件，返回中心主题标题和其他分支list数据    :param xmind_file: xmind文件路径    :return:    &quot;&quot;&quot;    case_data_dict=xmind_to_dict(xmind_file_path)[0][&quot;topic&quot;]    title = case_data_dict[&quot;title&quot;]    data_list=case_data_dict[&quot;topics&quot;]    return title,data_list</code></pre><h2 id="2、根据读取数据，解析数据"><a href="#2、根据读取数据，解析数据" class="headerlink" title="2、根据读取数据，解析数据"></a>2、根据读取数据，解析数据</h2><p>上面我们已经读取出数据，先分析下数据构成，我们发现每一个topics下面都有下一级的list，我们可以使用循环或者递归来提取出数据，并形成类似：登录-输入正确账号密码登录-进入登录页面-成功进入登录页面 这种结构的数据。<br>返回数据如下：<br><img src="/assets/2/image-20220507202458-j2pgajd.png" alt="image.png"></p><p>代码如下：</p><pre><code class="python">def xmind_to_caselist(data_list,title,listcase,strcase=&#39;&#39;):    &quot;&quot;&quot;    根据传入的list数据，递归解析出数据，形成以：    登录-输入正确账号密码登录-进入登录页面-成功进入登录页面 的数据    :param data_list: 传入解析后list    :param strcase: 初始字符串，默认为空    :param listcase: 存用例数据的list    :return: 返回以每条用例数据的list    &quot;&quot;&quot;    for branch_one in data_list:        strcase_one = strcase + branch_one[&#39;title&#39;] + &#39;_&#39;        if &#39;topics&#39; not in branch_one:            # 分支中不存在topics时，把数据添加到listcase中            strcase_one=title+&#39;_&#39;+ strcase_one            listcase.append(strcase_one)            continue        branch = branch_one[&#39;topics&#39;]        # 递归，遍历所有分支        xmind_to_caselist(branch,title,listcase,strcase=strcase_one)    return listcase</code></pre><h2 id="3、定义测试用例标题"><a href="#3、定义测试用例标题" class="headerlink" title="3、定义测试用例标题"></a>3、定义测试用例标题</h2><p>目前我所在的公司使用tapd，tapd中所用的测试用例模板标标题为：ID 用例目录 用例名称 前置条件 用例步骤 预期结果 用例类型 用例状态 用例等级。其中一些标题一般都没什么变化，我这边使用默认值。由上面返回的listcase数据，把数据拆分后重新组成一条用例，一条用例为一个list，方便后续写入Excel中。<br>返回数据如下：<br><img src="/assets/2/image-20220507202451-wovoyq6.png" alt="image.png"></p><p>代码如下：</p><pre><code class="python">def change_case(listcase,top_term=&#39;&#39;,case_type=&#39;功能测试&#39;,case_state=&#39;待更新&#39;,case_grade=&#39;中&#39;):    &quot;&quot;&quot;    Excel中用例标题分为如下9个（tapd上的上传标准）：    ID用例目录用例名称前置条件用例步骤预期结果用例类型用例状态用例等级    ID：自增    用例目录：项目名称-模块名称 例如：某某某项目-登录模块    用例名称：提取传入数据的三级标题+四级标题+五级标题    前置条件：默认为空，可自己填写通用数据    用例步骤：提取数据的四级标题    预期结果：提取数据的五级标题    用例类型：默认值为功能测试，可填其他值为：性能测试，安全性测试    用例状态：默认值为待更新，可填其他值为：正常，已废弃    用例登记：默认值为中，可填其他值为：高，低    :param data_list: 传入已从xmind分解成的list数据    :param top_term: 前置条件    :param case_type: 用例类型    :param case_state: 用例状态    :param case_grade: 用例等级    :return: 返回以一条用例为一个list的数据，例如[[用例1],[用例2],[用例3]]    &quot;&quot;&quot;    total_case=[]#总的用例格式的list    case_id=1    for data in listcase:        case_list=[]#每一条用例的list        data_sp=data.split(&#39;_&#39;)        case_list.append(case_id)        case_list.append(data_sp[0]+&quot;-&quot;+data_sp[1])        case_list.append(data_sp[2]+&#39;，&#39;+data_sp[3]+&#39;，&#39;+data_sp[4])        case_list.append(top_term)        case_list.append(data_sp[3])        case_list.append(data_sp[4])        case_list.append(case_type)        case_list.append(case_state)        case_list.append(case_grade)        total_case.append(case_list)        case_id+=1    return total_case</code></pre><h2 id="4、数据写入Excel中"><a href="#4、数据写入Excel中" class="headerlink" title="4、数据写入Excel中"></a>4、数据写入Excel中</h2><p>在上面步骤中，已经完成对数据的梳理，下面使用openpyxl库完成对数据的写入并相应的调整样式。<br>代码如下：</p><pre><code class="python">def write_excel_case(total_case,save_path):    &quot;&quot;&quot;    把解析的数据写入Excel中    :param total_case: 解析完成的数据    :param save_path: 文件保存路径    :return:     &quot;&quot;&quot;    wb=Workbook()    ws=wb.active    ws[&#39;A1&#39;]=&#39;ID&#39;    ws[&#39;B1&#39;]=&#39;用例目录&#39;    ws[&#39;C1&#39;]=&#39;用例名称&#39;    ws[&#39;D1&#39;]=&#39;前置条件&#39;    ws[&#39;E1&#39;]=&#39;用例步骤&#39;    ws[&#39;F1&#39;]=&#39;预期结果&#39;    ws[&#39;G1&#39;]=&#39;用例类型&#39;    ws[&#39;H1&#39;]=&#39;用例状态&#39;    ws[&#39;I1&#39;]=&#39;用例等级&#39;    i=1    for case in total_case:        ws[&#39;A&#123;&#125;&#39;.format(i + 1)] = case[0]        ws[&#39;B&#123;&#125;&#39;.format(i + 1)] = case[1]        ws[&#39;C&#123;&#125;&#39;.format(i + 1)] = case[2]        ws[&#39;D&#123;&#125;&#39;.format(i + 1)] = case[3]        ws[&#39;E&#123;&#125;&#39;.format(i + 1)] = case[4]        ws[&#39;F&#123;&#125;&#39;.format(i + 1)] = case[5]        ws[&#39;G&#123;&#125;&#39;.format(i + 1)] = case[6]        ws[&#39;H&#123;&#125;&#39;.format(i + 1)] = case[7]        ws[&#39;I&#123;&#125;&#39;.format(i + 1)] = case[8]        i+=1    column_list = [&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;, &#39;E&#39;, &#39;F&#39;, &#39;G&#39;, &#39;H&#39;, &#39;I&#39;]    cell_list = [&#39;A1&#39;, &#39;B1&#39;, &#39;C1&#39;, &#39;D1&#39;, &#39;E1&#39;, &#39;F1&#39;, &#39;G1&#39;, &#39;H1&#39;, &#39;I1&#39;]    #设置表头字体    font=Font(name=&#39;宋体&#39;,bold=True)    for cel in cell_list:        cell=ws[cel]        cell.font=font    # 设置列的表格居中    alignment = Alignment(horizontal=&#39;center&#39;,wrapText=True)    for col_name in column_list:        col_list = ws[col_name]        for col in col_list:            col.alignment = alignment    #设置列的宽度    ws.column_dimensions[&#39;B&#39;].width = 20    ws.column_dimensions[&#39;C&#39;].width = 60    ws.column_dimensions[&#39;D&#39;].width = 30    ws.column_dimensions[&#39;E&#39;].width = 30    ws.column_dimensions[&#39;F&#39;].width = 30    ws.column_dimensions[&#39;G&#39;].width = 15    ws.column_dimensions[&#39;H&#39;].width = 15    ws.column_dimensions[&#39;I&#39;].width = 15    #设置行的高度    for x in range(2,ws.max_row+1):        ws.row_dimensions[x].height = 40    wb.save(save_path)</code></pre><h2 id="5、运行入口"><a href="#5、运行入口" class="headerlink" title="5、运行入口"></a>5、运行入口</h2><p>上述步骤中已经把脚本所需函数完成，下面写下运行脚本函数：<br>代码如下：</p><pre><code class="python">def run_main(xmind_file_path,save_path,top_term=&#39;&#39;,case_type=&#39;功能测试&#39;,case_state=&#39;待更新&#39;,case_grade=&#39;中&#39;):    &quot;&quot;&quot;    :param xmind_file_path: xmind文件路径    :param save_path: 文件保存路径    :param top_term: 前置条件    :param case_type: 用例类型    :param case_state: 用例状态    :param case_grade: 用例等级    :return:    &quot;&quot;&quot;    title,data_list=read_xmind_data(xmind_file_path)    listcase=xmind_to_caselist(data_list,title,[])    total_case = change_case(listcase, top_term=top_term,case_type=case_type,case_state=case_state,case_grade=case_grade)    write_excel_case(total_case,save_path)</code></pre><p>运行结果图如下：<br><img src="/assets/2/image-20220507202439-2jl83d6.png" alt="image.png"></p><h1 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h1><p>实现该需求并不是很难，主要是使用对应库解析数据并保存，目前只是实现了脚本，后续继续学习，希望把脚本转换成Tkinter桌面应用，使用更方便。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;xmind转Excel测试用例&quot;&gt;&lt;a href=&quot;#xmind转Excel测试用例&quot; class=&quot;headerlink&quot; title=&quot;xmind转Excel测试用例&quot;&gt;&lt;/a&gt;xmind转Excel测试用例&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;一、引言&lt;/li&gt;
&lt;l</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="01_测试管理工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/01-%E6%B5%8B%E8%AF%95%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/"/>
    
    <category term="11_TAPD" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/01-%E6%B5%8B%E8%AF%95%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/11-TAPD/"/>
    
    
    <category term="课后" scheme="http://example.com/tags/%E8%AF%BE%E5%90%8E/"/>
    
  </entry>
  
</feed>
