<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>软件测试技术分享</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-07-25T06:36:59.106Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>yulong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>metersphere开机自动重启</title>
    <link href="http://example.com/05_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/01_%E6%B5%8B%E8%AF%95%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/12_metersphere/02_metersphere%E5%BC%80%E6%9C%BA%E8%87%AA%E5%8A%A8%E9%87%8D%E5%90%AF/"/>
    <id>http://example.com/05_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/01_%E6%B5%8B%E8%AF%95%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/12_metersphere/02_metersphere%E5%BC%80%E6%9C%BA%E8%87%AA%E5%8A%A8%E9%87%8D%E5%90%AF/</id>
    <published>2022-07-25T06:28:43.558Z</published>
    <updated>2022-07-25T06:36:59.106Z</updated>
    
    <content type="html"><![CDATA[<p>在MeterSphere日常使用过程中，服务器重启或者出现故障是可预见性的且实际存在的，如做服务器的冷迁移或者资源变更或者关机等情况，所以系统跟随服务器自启动必然也会成为某些用户的需求。</p><p>现就针对此需求，说明一下如何对metersphere 进行设置开机自启动(metersphere安装或者升级过程中并未添加docker自启动及MS服务启动）</p><p>一、设置docker服务自启动<br>#设置开机启动docker服务:<br>systemctl enable docker<br>二、创建metersphere的服务文件<br>1、进入&#x2F;etc&#x2F;init.d目录下，创建metersphere文件</p><p>cd &#x2F;etc&#x2F;init.d<br>vi metersphere</p><p><img src="/assets/2/image-20220725143000-rk1nlwx.png" alt="image.png"></p><p>2、编辑文件内容</p><p>注意脚本的第二行与第三行是需要加上的</p><p>其中第二行 chkconfig: 2345 10 90 的含义为：</p><p>2345是默认启动级别 ， 10是启动优先级，90是停止优先级，优先级范围是0－100，数字越大，优先级越低</p><pre><code>#!/bin/bash# chkconfig: 2345 10 90# description: MeterSphere service auto startfunction startMeterSphere&#123;msctl reload&#125;function stopMeterSphere&#123;msctl stop&#125;function restartMeterSphere&#123;stopMeterSpherestartMeterSphere&#125;function statusMeterSphere&#123;msctl status&#125;export HOSTNAME=$HOSTNAMEcase &quot;$1&quot; instart)startMeterSphere;;stop)stopMeterSphere;;restart)restartMeterSphere;;status)statusMeterSphere;;*)echo &quot;Usage: $0 &#123;start|stop|restart|status&#125;&quot;;;esac</code></pre><h3 id="三、将服务添加到自启动列表"><a href="#三、将服务添加到自启动列表" class="headerlink" title="三、将服务添加到自启动列表"></a>三、将服务添加到自启动列表</h3><p>chkconifg –list</p><p>备注：如果执行chkconifg –list  提示  ——–&gt;  bash:chkconfig:command not found   需要尝试：  sudo chkconfig –list</p><p><img src="/assets/2/image-20220725143110-3kuofe6.png" alt="image.png"></p><p>将metersphere服务加到chkconifg列表</p><pre><code>#自启动打开chkconfig metersphere on#自启动关闭# chkconfig metersphere off</code></pre><p>执行成功之后，发现metersphere服务已经添加上去了</p><p><img src="/assets/2/image-20220725143132-qsv60tz.png" alt="image.png"></p><p>最后执行reboot指令，等待一分钟后重新进入服务器，发现MeterSphere自启动已经生效了</p><p><img src="/assets/2/image-20220725143618-ezgah71.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在MeterSphere日常使用过程中，服务器重启或者出现故障是可预见性的且实际存在的，如做服务器的冷迁移或者资源变更或者关机等情况，所以系统跟随服务器自启动必然也会成为某些用户的需求。&lt;/p&gt;
&lt;p&gt;现就针对此需求，说明一下如何对metersphere 进行设置开机自启动</summary>
      
    
    
    
    <category term="05_测试工具" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="01_测试管理工具" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/01-%E6%B5%8B%E8%AF%95%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/"/>
    
    <category term="12_metersphere" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/01-%E6%B5%8B%E8%AF%95%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/12-metersphere/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>metersphere安装部署</title>
    <link href="http://example.com/05_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/01_%E6%B5%8B%E8%AF%95%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/12_metersphere/01_metersphere%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/"/>
    <id>http://example.com/05_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/01_%E6%B5%8B%E8%AF%95%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/12_metersphere/01_metersphere%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</id>
    <published>2022-07-25T06:26:25.242Z</published>
    <updated>2022-07-25T06:39:44.088Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://metersphere.io/docs/index.html">官方文档</a></p><h2 id="部署问题："><a href="#部署问题：" class="headerlink" title="部署问题："></a>部署问题：</h2><h3 id="服务器重启不能访问："><a href="#服务器重启不能访问：" class="headerlink" title="服务器重启不能访问："></a>服务器重启不能访问：</h3><p>metersphere所在服务器重启后无法访问WEB<br>先用msctl status或者docker ps -a指令查看metersphere的状态，如果也出现EXITED的状态，就需要用指令重启<br>msctl reload重启指令<br>这时再次查看状态msctl status。发现所有状态都为UP<br>这是去访问页面即可访问成功（如果这个浏览器不行，可以换一个浏览器尝试访问WEB）</p><p><a href="/05_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/01_%E6%B5%8B%E8%AF%95%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/12_metersphere/02_metersphere%E5%BC%80%E6%9C%BA%E8%87%AA%E5%8A%A8%E9%87%8D%E5%90%AF">开机重启操作</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://metersphere.io/docs/index.html&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;部署问题：&quot;&gt;&lt;a href=&quot;#部署问题：&quot; class=&quot;headerlink&quot; title=&quot;部署问题：&quot;&gt;&lt;/a&gt;部署问题：&lt;</summary>
      
    
    
    
    <category term="05_测试工具" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="01_测试管理工具" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/01-%E6%B5%8B%E8%AF%95%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/"/>
    
    <category term="12_metersphere" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/01-%E6%B5%8B%E8%AF%95%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/12-metersphere/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/05_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/15_%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2_%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/%E5%AE%B9%E5%99%A8/Kubernetes/"/>
    <id>http://example.com/05_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/15_%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2_%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/%E5%AE%B9%E5%99%A8/Kubernetes/</id>
    <published>2022-07-21T01:10:52.989Z</published>
    <updated>2022-07-21T01:10:52.990Z</updated>
    
    
    
    
    <category term="05_测试工具" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="15_环境部署_持续集成" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/15-%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2-%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    
    <category term="容器" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/15-%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2-%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/%E5%AE%B9%E5%99%A8/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/05_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/15_%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2_%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/%E5%AE%B9%E5%99%A8/jenkins/"/>
    <id>http://example.com/05_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/15_%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2_%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/%E5%AE%B9%E5%99%A8/jenkins/</id>
    <published>2022-07-21T01:10:07.923Z</published>
    <updated>2022-07-21T01:10:07.923Z</updated>
    
    
    
    
    <category term="05_测试工具" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="15_环境部署_持续集成" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/15-%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2-%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    
    <category term="容器" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/15-%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2-%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/%E5%AE%B9%E5%99%A8/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/05_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/15_%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2_%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/%E5%AE%B9%E5%99%A8/docker/"/>
    <id>http://example.com/05_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/15_%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2_%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/%E5%AE%B9%E5%99%A8/docker/</id>
    <published>2022-07-21T01:09:07.703Z</published>
    <updated>2022-07-21T01:09:07.704Z</updated>
    
    
    
    
    <category term="05_测试工具" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="15_环境部署_持续集成" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/15-%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2-%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    
    <category term="容器" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/15-%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2-%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/%E5%AE%B9%E5%99%A8/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/06_%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A/01_%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    <id>http://example.com/06_%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A/01_%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/</id>
    <published>2022-07-04T01:45:39.012Z</published>
    <updated>2022-07-04T01:45:39.012Z</updated>
    
    
    
    
    <category term="06_名词解释" scheme="http://example.com/categories/06-%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A/"/>
    
    
  </entry>
  
  <entry>
    <title>HTML5 示例</title>
    <link href="http://example.com/01_%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/03_%E5%89%8D%E7%AB%AFhtml/02_html%E5%9F%BA%E7%A1%80%20-%20%E7%A4%BA%E4%BE%8B/"/>
    <id>http://example.com/01_%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/03_%E5%89%8D%E7%AB%AFhtml/02_html%E5%9F%BA%E7%A1%80%20-%20%E7%A4%BA%E4%BE%8B/</id>
    <published>2022-06-30T02:30:53.912Z</published>
    <updated>2022-06-30T02:55:54.186Z</updated>
    
    <content type="html"><![CDATA[<p>HTML+CSS+JS实现十款好看的登录注册界面，赶紧收藏起来吧！<br>需要的小伙伴关注评论区留言哦</p><p>界面一：</p><p><img src="/assets/2/image-20220630103223-xrfo3w0.png" alt="image.png"></p><p>代码如下：</p><pre><code> &lt;div class=&quot;demo form-bg&quot;&gt; &lt;div class=&quot;container&quot;&gt;       &lt;div class=&quot;row&quot;&gt;                 &lt;div class=&quot;col-md-offset-4 col-md-4 col-sm-offset-3 col-sm-6&quot;&gt;                     &lt;form class=&quot;form-horizontal&quot;&gt;                         &lt;div class=&quot;heading&quot;&gt;注册页面&lt;/div&gt;                         &lt;div class=&quot;form-group&quot;&gt;                             &lt;i class=&quot;fa fa-user&quot;&gt;&lt;/i&gt;&lt;input required name=&quot;login[username]&quot; type=&quot;email&quot; class=&quot;form-control&quot; placeholder=&quot;Username&quot; id=&quot;exampleInputEmail1&quot;&gt;                         &lt;/div&gt;                         &lt;div class=&quot;form-group&quot;&gt;                             &lt;i class=&quot;fa fa-lock&quot;&gt;&lt;/i&gt;&lt;input required name=&quot;login[password]&quot; type=&quot;password&quot; class=&quot;form-control&quot; placeholder=&quot;Password&quot; /&gt;                         &lt;/div&gt;                         &lt;div class=&quot;form-group&quot;&gt;                             &lt;button type=&quot;submit&quot; class=&quot;btn btn-default&quot;&gt;&lt;i class=&quot;fa fa-arrow-right&quot;&gt;&lt;/i&gt;&lt;/button&gt;                             &lt;span&gt;&lt;a href=&quot;&quot; class=&quot;create_account&quot;&gt;注册&lt;/a&gt;&lt;/span&gt;                         &lt;/div&gt;                     &lt;/form&gt;                 &lt;/div&gt;             &lt;/div&gt;         &lt;/div&gt;     &lt;/div&gt;</code></pre><p>界面二</p><p><img src="/assets/2/image-20220630103235-eymmqnm.png" alt="image.png"></p><p>部分代码如下：</p><pre><code> &lt;body&gt; &lt;!--User-Login--&gt; &lt;h1&gt;用户登录&lt;/h1&gt; &lt;div class=&quot;avtar&quot;&gt;     &lt;img src=&quot;images/avtar.png&quot; /&gt; &lt;/div&gt;     &lt;div class=&quot;login-form&quot;&gt;         &lt;p&gt;新用户?&lt;a href=&quot;#&quot;&gt;在这注册!&lt;/a&gt;&lt;/p&gt;             &lt;form&gt;                 &lt;div class=&quot;form-text&quot;&gt;                     &lt;input type=&quot;text&quot; class=&quot;text&quot; value=&quot;用户名&quot; οnfοcus=&quot;this.value = &#39;&#39;;&quot; οnblur=&quot;if (this.value == &#39;&#39;) &#123;this.value = &#39;USERNAME&#39;;&#125;&quot; &gt;                     &lt;input type=&quot;password&quot; value=&quot;密码&quot; οnfοcus=&quot;this.value = &#39;&#39;;&quot; οnblur=&quot;if (this.value == &#39;&#39;) &#123;this.value = &#39;Password&#39;;&#125;&quot;&gt;                 &lt;/div&gt;                     &lt;input type=&quot;submit&quot;value=&quot;GO&quot; &gt;             &lt;/form&gt;     &lt;/div&gt;</code></pre><p>界面三</p><p><img src="/assets/2/image-20220630103247-gbbympw.png" alt="image.png"></p><p>代码如下：</p><pre><code> &lt;body&gt; &lt;div id=&quot;window&quot; style=&quot;display:none;&quot;&gt;     &lt;div class=&quot;page page-front&quot;&gt;         &lt;div class=&quot;page-content&quot;&gt;             &lt;div class=&quot;input-row&quot;&gt;                 &lt;label class=&quot;label fadeIn&quot;&gt;用户名&lt;/label&gt;                 &lt;input id=&quot;username&quot; type=&quot;text&quot; data-fyll=&quot;pineapple&quot; class=&quot;input fadeIn delay1&quot;/&gt;             &lt;/div&gt;             &lt;div class=&quot;input-row&quot;&gt;                 &lt;label class=&quot;label fadeIn delay2&quot;&gt;密码&lt;/label&gt;                 &lt;input id=&quot;password&quot; type=&quot;password&quot; data-fyll=&quot;hackmeplease&quot; class=&quot;input fadeIn delay3&quot;/&gt;             &lt;/div&gt;             &lt;div class=&quot;input-row perspective&quot;&gt;                 &lt;button id=&quot;submit&quot; class=&quot;button load-btn fadeIn delay4&quot;&gt;                     &lt;span class=&quot;default&quot;&gt;&lt;i class=&quot;ion-arrow-right-b&quot;&gt;&lt;/i&gt;登录&lt;/span&gt;                     &lt;div class=&quot;load-state&quot;&gt;                         &lt;div class=&quot;ball&quot;&gt;&lt;/div&gt;                         &lt;div class=&quot;ball&quot;&gt;&lt;/div&gt;                         &lt;div class=&quot;ball&quot;&gt;&lt;/div&gt;                     &lt;/div&gt;                 &lt;/button&gt;             &lt;/div&gt;         &lt;/div&gt;     &lt;/div&gt;</code></pre><p>界面四</p><p><img src="/assets/2/image-20220630103259-ydihacb.png" alt="image.png"></p><p>部分代码如下：</p><pre><code> &lt;div class=&quot;main&quot;&gt;             &lt;div class=&quot;login&quot;&gt;                 &lt;div class=&quot;log-con&quot;&gt;                     &lt;span&gt;登录&lt;/span&gt;                     &lt;input type=&quot;text&quot; class=&quot;name&quot; placeholder=&quot;请输入用户名&quot;/&gt;                     &lt;input type=&quot;text&quot; class=&quot;password&quot; placeholder=&quot;请输入密码&quot;/&gt;                     &lt;input type=&quot;text&quot; class=&quot;code&quot; placeholder=&quot;请输入验证码&quot;/&gt;                     &lt;input type=&quot;button&quot; id=&quot;code&quot; οnclick=&quot;change();&quot;/&gt;                     &lt;a&gt;立即登录&lt;/a&gt;                 &lt;/div&gt;             &lt;/div&gt;         &lt;/div&gt;</code></pre><p>界面五</p><p><img src="/assets/2/image-20220630103308-th3xunj.png" alt="image.png"></p><p>部分代码如下：</p><pre><code> &lt;div class=&quot;limiter&quot;&gt;        &lt;div class=&quot;container-login100&quot;&gt;            &lt;div class=&quot;wrap-login100&quot;&gt;                &lt;div class=&quot;login100-form-title&quot; style=&quot;background-image: url(images/bg-01.jpg);&quot;&gt;                    &lt;span class=&quot;login100-form-title-1&quot;&gt;登 录&lt;/span&gt;                &lt;/div&gt;                &lt;form class=&quot;login100-form validate-form&quot;&gt;                    &lt;div class=&quot;wrap-input100 validate-input m-b-26&quot; data-validate=&quot;用户名不能为空&quot;&gt;                        &lt;span class=&quot;label-input100&quot;&gt;用户名&lt;/span&gt;                        &lt;input class=&quot;input100&quot; type=&quot;text&quot; name=&quot;username&quot; placeholder=&quot;请输入用户名&quot;&gt;                        &lt;span class=&quot;focus-input100&quot;&gt;&lt;/span&gt;                    &lt;/div&gt;                    &lt;div class=&quot;wrap-input100 validate-input m-b-18&quot; data-validate=&quot;密码不能为空&quot;&gt;                        &lt;span class=&quot;label-input100&quot;&gt;密码&lt;/span&gt;                        &lt;input class=&quot;input100&quot; type=&quot;password&quot; name=&quot;pass&quot; placeholder=&quot;请输入用户名&quot;&gt;                        &lt;span class=&quot;focus-input100&quot;&gt;&lt;/span&gt;                    &lt;/div&gt;                    &lt;div class=&quot;flex-sb-m w-full p-b-30&quot;&gt;                        &lt;div class=&quot;contact100-form-checkbox&quot;&gt;                            &lt;input class=&quot;input-checkbox100&quot; id=&quot;ckb1&quot; type=&quot;checkbox&quot; name=&quot;remember-me&quot;&gt;                            &lt;label class=&quot;label-checkbox100&quot; for=&quot;ckb1&quot;&gt;记住我&lt;/label&gt;                        &lt;/div&gt;                &lt;div&gt;                            &lt;a href=&quot;javascript:&quot; class=&quot;txt1&quot;&gt;忘记密码？&lt;/a&gt;                        &lt;/div&gt;                    &lt;/div&gt;                    &lt;div class=&quot;container-login100-form-btn&quot;&gt;                        &lt;button class=&quot;login100-form-btn&quot;&gt;登 录&lt;/button&gt;                    &lt;/div&gt;                &lt;/form&gt;            &lt;/div&gt;        &lt;/div&gt;    &lt;/div&gt;</code></pre><p>界面六</p><p><img src="/assets/2/image-20220630103323-c3gvdxh.png" alt="image.png"></p><p><img src="/assets/2/image-20220630103332-9bkvb73.png" alt="image.png"></p><pre><code>&lt;div class=&quot;container right-panel-active&quot;&gt;            &lt;!-- Sign Up --&gt;            &lt;div class=&quot;container__form container--signup&quot;&gt;                &lt;form action=&quot;#&quot; class=&quot;form&quot; id=&quot;form1&quot;&gt;                    &lt;h2 class=&quot;form__title&quot;&gt;注 册&lt;/h2&gt;                    &lt;input type=&quot;text&quot; placeholder=&quot;用户名&quot; class=&quot;input&quot; /&gt;                    &lt;input type=&quot;email&quot; placeholder=&quot;Email&quot; class=&quot;input&quot; /&gt;                    &lt;input type=&quot;password&quot; placeholder=&quot;密码&quot; class=&quot;input&quot; /&gt;                    &lt;button class=&quot;btn&quot;&gt;注 册&lt;/button&gt;                &lt;/form&gt;            &lt;/div&gt;            &lt;!-- Sign In --&gt;            &lt;div class=&quot;container__form container--signin&quot;&gt;                &lt;form action=&quot;#&quot; class=&quot;form&quot; id=&quot;form2&quot;&gt;                    &lt;h2 class=&quot;form__title&quot;&gt;登 录&lt;/h2&gt;                    &lt;input type=&quot;email&quot; placeholder=&quot;Email&quot; class=&quot;input&quot; /&gt;                    &lt;input type=&quot;password&quot; placeholder=&quot;密码&quot; class=&quot;input&quot; /&gt;                    &lt;a href=&quot;#&quot; class=&quot;link&quot;&gt;忘记密码?&lt;/a&gt;                    &lt;button class=&quot;btn&quot;&gt;注 册&lt;/button&gt;                &lt;/form&gt;            &lt;/div&gt;&lt;!-- Overlay --&gt;            &lt;div class=&quot;container__overlay&quot;&gt;                &lt;div class=&quot;overlay&quot;&gt;                    &lt;div class=&quot;overlay__panel overlay--left&quot;&gt;                        &lt;button class=&quot;btn&quot; id=&quot;signIn&quot;&gt;登 录&lt;/button&gt;                    &lt;/div&gt;                    &lt;div class=&quot;overlay__panel overlay--right&quot;&gt;                        &lt;button class=&quot;btn&quot; id=&quot;signUp&quot;&gt;注 册&lt;/button&gt;                    &lt;/div&gt;                &lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;</code></pre><blockquote></blockquote><p>界面七</p><p><img src="/assets/2/image-20220630103345-czoe6ri.png" alt="image.png"></p><pre><code>&lt;div class=&quot;dowebok&quot;&gt;        &lt;div class=&quot;logo&quot;&gt;&lt;/div&gt;        &lt;div class=&quot;form-item&quot;&gt;            &lt;input id=&quot;username&quot; type=&quot;text&quot; autocomplete=&quot;off&quot; placeholder=&quot;邮箱&quot;&gt;            &lt;p class=&quot;tip&quot;&gt;请输入合法的邮箱地址&lt;/p&gt;        &lt;/div&gt;        &lt;div class=&quot;form-item&quot;&gt;            &lt;input id=&quot;password&quot; type=&quot;password&quot; autocomplete=&quot;off&quot; placeholder=&quot;登录密码&quot;&gt;            &lt;p class=&quot;tip&quot;&gt;邮箱或密码不正确&lt;/p&gt;        &lt;/div&gt;        &lt;div class=&quot;form-item&quot;&gt;&lt;button id=&quot;submit&quot;&gt;登 录&lt;/button&gt;&lt;/div&gt;        &lt;div class=&quot;reg-bar&quot;&gt;            &lt;a class=&quot;reg&quot; href=&quot;#&quot; target=&quot;_blank&quot;&gt;立即注册&lt;/a&gt;            &lt;a class=&quot;forget&quot; href=&quot;#&quot; target=&quot;_blank&quot;&gt;忘记密码&lt;/a&gt;        &lt;/div&gt;&lt;/div&gt;</code></pre><p>界面八</p><p><img src="/assets/2/image-20220630103354-tb6guvg.png" alt="image.png"></p><pre><code>&lt;div class=&quot;dowebok&quot;&gt;    &lt;div class=&quot;container-login100&quot;&gt;        &lt;div class=&quot;wrap-login100&quot;&gt;            &lt;div class=&quot;login100-pic js-tilt&quot; data-tilt&gt;                &lt;img src=&quot;images/img-01.png&quot; alt=&quot;IMG&quot;&gt;            &lt;/div&gt;            &lt;form class=&quot;login100-form validate-form&quot;&gt;                &lt;span class=&quot;login100-form-title&quot;&gt;                    会员登陆                &lt;/span&gt;                &lt;div class=&quot;wrap-input100 validate-input&quot;&gt;                    &lt;input class=&quot;input100&quot; type=&quot;text&quot; name=&quot;email&quot; placeholder=&quot;邮箱&quot;&gt;                    &lt;span class=&quot;focus-input100&quot;&gt;&lt;/span&gt;                    &lt;span class=&quot;symbol-input100&quot;&gt;                        &lt;i class=&quot;fa fa-envelope&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;                    &lt;/span&gt;                &lt;/div&gt;&lt;div class=&quot;wrap-input100 validate-input&quot;&gt;                    &lt;input class=&quot;input100&quot; type=&quot;password&quot; name=&quot;pass&quot; placeholder=&quot;密码&quot;&gt;                    &lt;span class=&quot;focus-input100&quot;&gt;&lt;/span&gt;                    &lt;span class=&quot;symbol-input100&quot;&gt;                        &lt;i class=&quot;fa fa-lock&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;                    &lt;/span&gt;                &lt;/div&gt;                &lt;div class=&quot;container-login100-form-btn&quot;&gt;                    &lt;button class=&quot;login100-form-btn&quot;&gt;                        登陆                    &lt;/button&gt;                &lt;/div&gt;                &lt;div class=&quot;text-center p-t-12&quot;&gt;                    &lt;a class=&quot;txt2&quot; href=&quot;javascript:&quot;&gt;                        忘记密码？                    &lt;/a&gt;                &lt;/div&gt;&lt;div class=&quot;text-center p-t-136&quot;&gt;                    &lt;a class=&quot;txt2&quot; href=&quot;#&quot; &gt;                            还没有账号？立即注册                        &lt;i class=&quot;fa fa-long-arrow-right m-l-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;                    &lt;/a&gt;                &lt;/div&gt;            &lt;/form&gt;        &lt;/div&gt;    &lt;/div&gt;&lt;/div&gt;</code></pre><p>界面九</p><p><img src="/assets/2/image-20220630103406-9p5am9k.png" alt="image.png"></p><pre><code>&lt;div id=&quot;header&quot;&gt;    &lt;div class=&quot;header_title&quot;&gt;        &lt;span class=&quot;title_con&quot;&gt;学工系统&lt;/span&gt;    &lt;/div&gt;&lt;/div&gt;&lt;div id=&quot;content&quot;&gt;    &lt;center&gt;        &lt;div class=&quot;con&quot;&gt;        &lt;div class=&quot;con_title&quot;&gt;            &lt;span class=&quot;con_title_sp&quot;&gt;欢迎登录学工系统&lt;/span&gt;        &lt;/div&gt;        &lt;div class=&quot;con_panel&quot;&gt;            &lt;div class=&quot;con_input&quot;&gt;                &lt;span&gt;用户名：&lt;/span&gt;&lt;input type=&quot;text&quot; placeholder=&quot;学号/工号&quot;/&gt;            &lt;/div&gt;            &lt;div class=&quot;con_input&quot;&gt;                &lt;span&gt;密`&amp;nbsp;&amp;nbsp;``&amp;nbsp;&amp;nbsp;`码：&lt;/span&gt;&lt;input type=&quot;text&quot; placeholder=&quot;密码&quot;/&gt;            &lt;/div&gt;            &lt;div class=&quot;con_select&quot;&gt;                &lt;input type=&quot;radio&quot; name=&quot;t1&quot; value=&quot;学生&quot; /&gt;学生                &lt;input type=&quot;radio&quot; name=&quot;t1&quot; value=&quot;教师&quot; /&gt;教师                &lt;input type=&quot;radio&quot; name=&quot;t1&quot; value=&quot;管理员&quot; /&gt;管理员            &lt;/div&gt;            &lt;input type=&quot;submit&quot; value=&quot;登录&quot; class=&quot;submit-btn&quot;/&gt;        &lt;/div&gt;    &lt;/div&gt;    &lt;/center&gt;&lt;/div&gt;&lt;/body&gt;</code></pre><p>界面十</p><p><img src="/assets/2/image-20220630103417-q6ovkdp.png" alt="image.png"></p><pre><code>&lt;div class=&quot;main&quot;&gt;        &lt;div class=&quot;login-form&quot;&gt;            &lt;h2&gt;SignIn Form&lt;/h2&gt;            &lt;div class=&quot;agileits-top&quot;&gt;                &lt;form action=&quot;#&quot; method=&quot;post&quot;&gt;                    &lt;div class=&quot;styled-input&quot;&gt;                        &lt;input type=&quot;text&quot; name=&quot;User Name&quot; required=&quot;&quot;/&gt;                        &lt;label&gt;User Name&lt;/label&gt;                        &lt;span&gt;&lt;/span&gt;                    &lt;/div&gt;                    &lt;div class=&quot;styled-input&quot;&gt;                        &lt;input type=&quot;password&quot; name=&quot;Password&quot; required=&quot;&quot;&gt;                        &lt;label&gt;Password&lt;/label&gt;                        &lt;span&gt;&lt;/span&gt;                    &lt;/div&gt;                    &lt;div class=&quot;wthree-text&quot;&gt;                        &lt;ul&gt;                            &lt;li&gt;                                &lt;input type=&quot;checkbox&quot; id=&quot;brand&quot; value=&quot;&quot;&gt;                                &lt;label for=&quot;brand&quot;&gt;&lt;span&gt;&lt;/span&gt; Remember me ?&lt;/label&gt;&lt;br /&gt;&lt;/li&gt;                            &lt;li&gt; &lt;a href=&quot;#&quot;&gt;Forgot password?&lt;/a&gt; &lt;/li&gt;                        &lt;/ul&gt;                        &lt;div class=&quot;clear&quot;&gt; &lt;/div&gt;                    &lt;/div&gt;&lt;br /&gt;&lt;/form&gt;            &lt;/div&gt;            &lt;div class=&quot;agileits-bottom&quot;&gt;                &lt;form action=&quot;#&quot; method=&quot;post&quot;&gt;                    &lt;input type=&quot;submit&quot; value=&quot;Sign In&quot;&gt;                &lt;/form&gt;            &lt;/div&gt;        &lt;/div&gt;    &lt;/div&gt;&lt;br /&gt;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;HTML+CSS+JS实现十款好看的登录注册界面，赶紧收藏起来吧！&lt;br&gt;需要的小伙伴关注评论区留言哦&lt;/p&gt;
&lt;p&gt;界面一：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/2/image-20220630103223-xrfo3w0.png&quot; alt=&quot;image.p</summary>
      
    
    
    
    <category term="01_测试初阶" scheme="http://example.com/categories/01-%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/"/>
    
    <category term="03_前端html" scheme="http://example.com/categories/01-%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/03-%E5%89%8D%E7%AB%AFhtml/"/>
    
    
    <category term="html前端" scheme="http://example.com/tags/html%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>HTML5 简介</title>
    <link href="http://example.com/01_%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/03_%E5%89%8D%E7%AB%AFhtml/01_html%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/01_%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/03_%E5%89%8D%E7%AB%AFhtml/01_html%E5%9F%BA%E7%A1%80/</id>
    <published>2022-06-30T01:52:19.280Z</published>
    <updated>2022-06-30T02:20:04.589Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a></h2><h1 id="HTML5简介-amp-教程"><a href="#HTML5简介-amp-教程" class="headerlink" title="HTML5简介&amp;教程"></a><a href="https://www.runoob.com/html/html-tutorial.html">HTML5简介&amp;教程</a></h1><p><img src="https://www.runoob.com/wp-content/uploads/2013/07/pic_html5.gif" alt="HTML">HTML5是HTML最新的修订版本，2014年10月由万维网联盟（W3C）完成标准制定。</p><p>HTML5的设计目的是为了在移动设备上支持多媒体。</p><p>HTML5 简单易学。</p><hr><h2 id="什么是-HTML5"><a href="#什么是-HTML5" class="headerlink" title="什么是 HTML5?"></a>什么是 HTML5?</h2><p>HTML5 是下一代 HTML 标准。</p><p>HTML , HTML 4.01的上一个版本诞生于 1999 年。自从那以后，Web 世界已经经历了巨变。</p><p>HTML5 仍处于完善之中。然而，大部分现代浏览器已经具备了某些 HTML5 支持。</p><hr><h2 id="HTML5-是如何起步的？"><a href="#HTML5-是如何起步的？" class="headerlink" title="HTML5 是如何起步的？"></a>HTML5 是如何起步的？</h2><p>HTML5 是 W3C 与 WHATWG 合作的结果,WHATWG 指 Web Hypertext Application Technology Working Group。</p><p>WHATWG 致力于 web 表单和应用程序，而 W3C 专注于 XHTML 2.0。在 2006 年，双方决定进行合作，来创建一个新版本的 HTML。</p><p>HTML5 中的一些有趣的新特性：</p><ul><li>用于绘画的 canvas 元素</li><li>用于媒介回放的 video 和 audio 元素</li><li>对本地离线存储的更好的支持</li><li>新的特殊内容元素，比如 article、footer、header、nav、section</li><li>新的表单控件，比如 calendar、date、time、email、url、search</li></ul><hr><h2 id="HTML5-lt-DOCTYPE-gt"><a href="#HTML5-lt-DOCTYPE-gt" class="headerlink" title="HTML5 &lt;!DOCTYPE&gt;"></a>HTML5 &lt;!DOCTYPE&gt;</h2><!doctype><p> 声明必须位于 HTML5 文档中的第一行,使用非常简单:</p><p><strong>&lt;**!**DOCTYPE**html**&gt;</strong></p><hr><h2 id="最小的HTML5文档"><a href="#最小的HTML5文档" class="headerlink" title="最小的HTML5文档"></a>最小的HTML5文档</h2><p>下面是一个简单的HTML5文档：</p><p><strong>&lt;**!**DOCTYPE**html**&gt;</strong><br><strong>&lt;**html**&gt;</strong><br><strong>&lt;**head**&gt;</strong><br><strong>&lt;**meta**charset**&#x3D;**”**utf-8**”**&gt;</strong><br><strong>&lt;**title**&gt;<strong>文档标题</strong>&lt;&#x2F;**title**&gt;</strong><br><strong>&lt;&#x2F;**head**&gt;</strong></p><p><strong>&lt;**body**&gt;</strong><br>文档内容……<br><strong>&lt;&#x2F;**body**&gt;</strong></p><p>**&lt;&#x2F;**html**&gt;</p><blockquote><p><strong>注意：</strong> 对于中文网页需要使用 <strong><meta charset="utf-8"></strong> 声明编码，否则会出现乱码。</p></blockquote><hr><h2 id="HTML5-的改进"><a href="#HTML5-的改进" class="headerlink" title="HTML5 的改进"></a>HTML5 的改进</h2><ul><li>新元素</li><li>新属性</li><li>完全支持 CSS3</li><li>Video 和 Audio</li><li>2D&#x2F;3D 制图</li><li>本地存储</li><li>本地 SQL 数据</li><li>Web 应用</li></ul><hr><h2 id="HTML5-多媒体"><a href="#HTML5-多媒体" class="headerlink" title="HTML5 多媒体"></a>HTML5 多媒体</h2><p>使用 HTML5 你可以简单的在网页中播放 视频(video)与音频 (audio) 。</p><ul><li>HTML5 <a href="https://www.runoob.com/html/html5-video.html"><code>&amp;lt;&lt;</code>video<code>&amp;gt;&gt;</code></a></li><li>HTML5 <a href="https://www.runoob.com/html/html5-audio.html"><code>&amp;lt;&lt;</code>audio<code>&amp;gt;&gt;</code></a></li></ul><hr><h2 id="HTML5-应用"><a href="#HTML5-应用" class="headerlink" title="HTML5 应用"></a>HTML5 应用</h2><p>使用 HTML5 你可以简单地开发应用</p><ul><li>本地数据存储</li><li>访问本地文件</li><li>本地 SQL 数据</li><li>缓存引用</li><li>Javascript 工作者</li><li>XHTMLHttpRequest 2</li></ul><hr><h2 id="HTML5-图形"><a href="#HTML5-图形" class="headerlink" title="HTML5 图形"></a>HTML5 图形</h2><p>使用 HTML5 你可以简单的绘制图形:</p><ul><li>使用 <a href="https://www.runoob.com/html/html5-canvas.html"><code>&amp;lt;&lt;</code>canvas<code>&amp;gt;&gt;</code></a> 元素。</li><li>使用内联 <a href="https://www.runoob.com/html/html5-svg.html">SVG</a>。</li><li>使用 <a href="https://www.runoob.com/css3/css3-2dtransforms.html">CSS3 2D 转换</a>、<a href="https://www.runoob.com/css3/css3-3dtransforms.html">CSS3 3D 转换</a>。</li></ul><hr><h2 id="HTML5-使用-CSS3"><a href="#HTML5-使用-CSS3" class="headerlink" title="HTML5 使用 CSS3"></a>HTML5 使用 CSS3</h2><ul><li>新选择器</li><li>新属性</li><li>动画</li><li>2D&#x2F;3D 转换</li><li>圆角</li><li>阴影效果</li><li>可下载的字体</li></ul><p>了解更多CSS3知识请查看本站的 <a href="https://www.runoob.com/css3/css3-tutorial.html">CSS3 教程。</a></p><hr><h2 id="语义元素"><a href="#语义元素" class="headerlink" title="语义元素"></a>语义元素</h2><p>HTML5 添加了很多语义元素如下所示：</p><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td>&lt;article&gt;</td><td>定义页面独立的内容区域。</td></tr><tr><td>&lt;aside&gt;</td><td>定义页面的侧边栏内容。</td></tr><tr><td>&lt;bdi&gt;</td><td>允许您设置一段文本，使其脱离其父元素的文本方向设置。</td></tr><tr><td>&lt;command&gt;</td><td>定义命令按钮，比如单选按钮、复选框或按钮</td></tr><tr><td>&lt;details&gt;</td><td>用于描述文档或文档某个部分的细节</td></tr><tr><td>&lt;dialog&gt;</td><td>定义对话框，比如提示框</td></tr><tr><td>&lt;summary&gt;</td><td>标签包含 details 元素的标题</td></tr><tr><td>&lt;figure&gt;</td><td>规定独立的流内容（图像、图表、照片、代码等等）。</td></tr><tr><td>&lt;figcaption&gt;</td><td>定义 &lt;figure&gt; 元素的标题</td></tr><tr><td>&lt;footer&gt;</td><td>定义 section 或 document 的页脚。</td></tr><tr><td>&lt;header&gt;</td><td>定义了文档的头部区域</td></tr><tr><td>&lt;mark&gt;</td><td>定义带有记号的文本。</td></tr><tr><td>&lt;meter&gt;</td><td>定义度量衡。仅用于已知最大和最小值的度量。</td></tr><tr><td>&lt;nav&gt;</td><td>定义导航链接的部分。</td></tr><tr><td>&lt;progress&gt;</td><td>定义任何类型的任务的进度。</td></tr><tr><td>&lt;ruby&gt;</td><td>定义 ruby 注释（中文注音或字符）。</td></tr><tr><td>&lt;rt&gt;</td><td>定义字符（中文注音或字符）的解释或发音。</td></tr><tr><td>&lt;rp&gt;</td><td>在 ruby 注释中使用，定义不支持 ruby 元素的浏览器所显示的内容。</td></tr><tr><td>&lt;section&gt;</td><td>定义文档中的节（section、区段）。</td></tr><tr><td>&lt;time&gt;</td><td>定义日期或时间。</td></tr><tr><td>&lt;wbr&gt;</td><td>规定在文本中的何处适合添加换行符。</td></tr></tbody></table><h2 id="HTML5-表单"><a href="#HTML5-表单" class="headerlink" title="HTML5 表单"></a>HTML5 表单</h2><p>新表单元素, 新属性，新输入类型，自动验证。</p><hr><h2 id="已移除元素"><a href="#已移除元素" class="headerlink" title="已移除元素"></a>已移除元素</h2><p>以下的 HTML 4.01 元素在HTML5中已经被删除:</p><ul><li>&lt;acronym&gt;</li><li>&lt;applet&gt;</li><li>&lt;basefont&gt;</li><li>&lt;big&gt;</li><li>&lt;center&gt;</li><li>&lt;dir&gt;</li><li>&lt;font&gt;</li><li>&lt;frame&gt;</li><li>&lt;frameset&gt;</li><li>&lt;noframes&gt;</li><li>&lt;strike&gt;</li></ul><hr><h2 id="每一章中的实例"><a href="#每一章中的实例" class="headerlink" title="每一章中的实例"></a>每一章中的实例</h2><p>通过我们的 HTML 编辑器，您能够编辑 HTML，然后点击按钮来查看结果。</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt; &lt;/head&gt;&lt;body&gt; &lt;video width=&quot;320&quot; height=&quot;240&quot; controls&gt;  &lt;source src=&quot;movie.mp4&quot; type=&quot;video/mp4&quot;&gt;  &lt;source src=&quot;movie.ogg&quot; type=&quot;video/ogg&quot;&gt;  你的浏览器不支持 video 标签。&lt;/video&gt; &lt;/body&gt;&lt;/html&gt;</code></pre><p><a href="https://www.runoob.com/try/try.php?filename=tryhtml5_video_bear">尝试一下 »</a></p><p><strong>点击 “尝试一下” 按钮查看在线运行结果。</strong></p><hr><h2 id="HTML5-浏览器支持"><a href="#HTML5-浏览器支持" class="headerlink" title="HTML5 浏览器支持"></a>HTML5 浏览器支持</h2><p>最新版本的 Safari、Chrome、Firefox 以及 Opera 支持某些 HTML5 特性。Internet Explorer 9 将支持某些 HTML5 特性。</p><p><img src="https://www.runoob.com/wp-content/uploads/2013/07/browsers_say.png"></p><p>IE9 以下版本浏览器兼容HTML5的方法，使用本站的静态资源的html5shiv包：</p><pre><code>&lt;!--[if lt IE 9]&gt;    &lt;script src=&quot;http://cdn.static.runoob.com/libs/html5shiv/3.7/html5shiv.min.js&quot;&gt;&lt;/script&gt;&lt;![endif]--&gt;</code></pre><p>载入后，初始化新标签的CSS：</p><pre><code>/*html5*/article,aside,dialog,footer,header,section,nav,figure,menu&#123;display:block&#125;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h1 id=&quot;HTML5简介-amp-教程&quot;&gt;&lt;a href=&quot;#HTML5简介-amp-教程&quot; class=&quot;headerlink&quot; title=&quot;HTML5</summary>
      
    
    
    
    <category term="01_测试初阶" scheme="http://example.com/categories/01-%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/"/>
    
    <category term="03_前端html" scheme="http://example.com/categories/01-%E6%B5%8B%E8%AF%95%E5%88%9D%E9%98%B6/03-%E5%89%8D%E7%AB%AFhtml/"/>
    
    
    <category term="html前端" scheme="http://example.com/tags/html%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>python爬取抖音app</title>
    <link href="http://example.com/05_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06_%E8%87%AA%E5%8A%A8%E5%8C%96/02_%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/03_APP%E8%87%AA%E5%8A%A8%E5%8C%96/01_appium/02_2/"/>
    <id>http://example.com/05_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06_%E8%87%AA%E5%8A%A8%E5%8C%96/02_%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/03_APP%E8%87%AA%E5%8A%A8%E5%8C%96/01_appium/02_2/</id>
    <published>2022-06-06T17:12:20.963Z</published>
    <updated>2022-06-06T17:44:08.305Z</updated>
    
    <content type="html"><![CDATA[<ol><li>准备<br> 安装夜神模拟器<br> 安装Xposed<a href="assets/3/android.xposed.installer.apk">xposed.installer</a><br> <a href="https://blog.csdn.net/weixin_48140105/article/details/118359568">因Xposed服务不能访问，本地方法：</a><br> 安装包：<a href="assets/3/xposed-v89-sdk22-x86.zip">xposed-v89-sdk22-x86</a><br> <a href="assets/3/JustTrustMe.apk">JustTrustMe</a><br> 安装mitmproxy： pip install mitmproxy<br> 查看mitmproxy是否安装的命令：mitmdimp –version<br> 安装 mongdb数据库<br> <a href="https://fastdl.mongodb.org/windows/mongodb-windows-x86_64-5.0.9.zip">官网下载地址（zip）</a><br> <a href="https://fastdl.mongodb.org/windows/mongodb-windows-x86_64-5.0.9-signed.msi">官网下载地址（msi）</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;准备&lt;br&gt; 安装夜神模拟器&lt;br&gt; 安装Xposed&lt;a href=&quot;assets/3/android.xposed.installer.apk&quot;&gt;xposed.installer&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://blog.csdn.net/</summary>
      
    
    
    
    <category term="05_测试工具" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="06_自动化" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="02_自动化实操" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/"/>
    
    <category term="03_APP自动化" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/03-APP%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="01_appium" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/03-APP%E8%87%AA%E5%8A%A8%E5%8C%96/01-appium/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>4位验证码识别</title>
    <link href="http://example.com/05_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06_%E8%87%AA%E5%8A%A8%E5%8C%96/02_%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01_UI%E8%87%AA%E5%8A%A8%E5%8C%96/python%E6%8F%92%E4%BB%B6/4%E4%BD%8D%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB/"/>
    <id>http://example.com/05_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06_%E8%87%AA%E5%8A%A8%E5%8C%96/02_%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01_UI%E8%87%AA%E5%8A%A8%E5%8C%96/python%E6%8F%92%E4%BB%B6/4%E4%BD%8D%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB/</id>
    <published>2022-06-02T16:37:50.709Z</published>
    <updated>2022-06-02T16:39:37.515Z</updated>
    
    <content type="html"><![CDATA[<pre><code>#!/usr/bin/evn python# -*- coding: utf-8 -*-# @Time          ： 2022/05/30 21:21# @Author        ： YuLong# @site          ： # @file          ： server.py# @explanation   ： ddddocr 验证码验证模型# @software      : PyCharm Community Editionimport osimport ddddocrfrom time import sleepfrom PIL import Imagefrom selenium import webdriverfrom selenium.webdriver.common.by import Byclass GetVerificationCode:    def __init__(self):        self.res = None        # 德尚商城登录页面        url = &#39;https://dsshop.csdeshang.com/home/Login/login.html&#39;        self.driver = webdriver.Chrome()        self.driver.maximize_window()  # 将浏览器最大化        self.driver.get(url)    # 获取验证码信息    def getVerification(self):        # 获取当前文件的位置、并获取保存截屏的位置        current_location = os.path.dirname(__file__)        screenshot_path = os.path.join(current_location, &quot;&quot;, &quot;VerificationCode&quot;)        # 截取当前网页并放到自定义目录下，并命名为printscreen，该截图中有我们需要的验证码        sleep(1)        self.driver.save_screenshot(screenshot_path + &#39;/&#39; + &#39;printscreen.png&#39;)        sleep(1)        # 定位验证码        imgelement = self.driver.find_element(By.XPATH, &#39;//*[@id=&quot;codeimage&quot;]&#39;)        # 获取验证码x,y轴坐标        location = imgelement.location        # 获取验证码的长宽        size = imgelement.size        # 写成我们需要截取的位置坐标        rangle = (int(location[&#39;x&#39;] +257),                  int(location[&#39;y&#39;]+125 ),                  int(location[&#39;x&#39;] + size[&#39;width&#39;]+ 300 ),                  int(location[&#39;y&#39;] + size[&#39;height&#39;]+140 ))        # 打开截图        i = Image.open(screenshot_path + &#39;/&#39; + &#39;printscreen.png&#39;)        # 使用Image的crop函数，从截图中再次截取我们需要的区域        fimg = i.crop(rangle)        fimg = fimg.convert(&#39;RGB&#39;)        # 保存我们截下来的验证码图片，并读取验证码内容        fimg.save(screenshot_path + &#39;/&#39; + &#39;code.png&#39;)        ocr = ddddocr.DdddOcr()        with open(screenshot_path + &#39;/&#39; + &#39;code.png&#39;, &#39;rb&#39;) as f:            img_bytes = f.read()        self.res = ocr.classification(img_bytes)        print(&#39;识别出的验证码为：&#39; + self.res)        # 判断验证码错误时的提示信息是否存在    def isElementPresent(self, by, value):        try:            element = self.driver.find_element(by=by, value=value)        except NoSuchElementException:            pass            # 发生了NoSuchElementException异常，说明页面中未找到该元素，返回False            return False        else:            # 没有发生异常，表示在页面中找到了该元素，返回True            return True    # 登录    def login(self):        self.getVerification()        self.driver.find_element(By.XPATH, &#39;//*[@id=&quot;member_name&quot;]&#39;).send_keys(&#39;用户名&#39;)        self.driver.find_element(By.XPATH, &#39;//*[@id=&quot;member_password&quot;]&#39;).send_keys(&#39;密码&#39;)        self.driver.find_element(By.XPATH, &#39;//*[@id=&quot;captcha_normal&quot;]&#39;).send_keys(self.res)        sleep(1)        self.driver.find_element(By.XPATH, &#39;//*[@id=&quot;login_normal_form&quot;]/div[5]/input[2]&#39;).click()        sleep(2)        isFlag = True        while isFlag:            try:                isPresent = self.isElementPresent(By.XPATH, &#39;//*[@id=&quot;captcha_normal-error&quot;]&#39;)                if isPresent is True:                    codeText = self.driver.find_element(By.XPATH, &#39;//*[@id=&quot;captcha_normal-error&quot;]&#39;).text                    if codeText == &quot;验证码不正确&quot;:                        self.getVerification()                        sleep(2)                        self.driver.find_element(By.XPATH, &#39;//*[@id=&quot;captcha_normal&#39;).clear()                        sleep(1)                        self.driver.find_element(By.XPATH, &#39;//*[@id=&quot;captcha_normal&#39;).send_keys(self.res)                        sleep(1)                        self.driver.find_element(By.XPATH, &#39;//*[@id=&quot;login_normal_form&quot;]/div[5]/input[2]&#39;).click()                        sleep(2)                    tips = self.driver.find_element(By.XPATH,&#39;//*[@id=&quot;captcha_normal-error&quot;]&#39;).text                    if tips == &quot;验证码不能为空&quot;:                        self.getVerification()                        sleep(2)                        self.driver.find_element(By.XPATH, &#39;//*[@id=&quot;captcha_normal&quot;]&#39;).click()                        sleep(1)                        self.driver.find_element(By.XPATH, &#39;//*[@id=&quot;captcha_normal&quot;]&#39;).send_keys(self.res)                        sleep(1)                        self.driver.find_element(By.XPATH, &#39;//*[@id=&quot;login_normal_form&quot;]/div[5]/input[2]&#39;).click()                        sleep(2)                    continue                else:                    print(&quot;验证码正确，登录成功！&quot;)            except NoSuchElementException:                pass            else:                isFlag = False            sleep(5)            self.driver.quit()if __name__ == &#39;__main__&#39;:    GetVerificationCode().login()&#39;&#39;&#39;ERROR: pip&#39;s dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.paddlepaddle 2.2.2 requires numpy&lt;=1.19.3,&gt;=1.13; python_version &gt;= &quot;3.5&quot; and platform_system == &quot;Windows&quot;, but you have numpy 1.21.6 which is incompatible.错误：pip 的依赖解析器当前不考虑所有已安装的包。此行为是以下依赖冲突的根源。 paddlepaddle 2.2.2 需要 numpy&lt;=1.19.3,&gt;=1.13; python_version &gt;= &quot;3.5&quot; 和 platform_system == &quot;Windows&quot;，但是你有不兼容的 numpy 1.21.6。ERROR: pip&#39;s dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.onnxruntime 1.11.1 requires numpy&gt;=1.21.6, but you have numpy 1.19.3 which is incompatible.错误：pip 的依赖解析器当前不考虑所有已安装的包。此行为是以下依赖冲突的根源。 onnxruntime 1.11.1 需要 numpy&gt;=1.21.6，但你有 numpy 1.19.3，这是不兼容的。&#39;&#39;&#39;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre&gt;&lt;code&gt;#!/usr/bin/evn python
# -*- coding: utf-8 -*-
# @Time          ： 2022/05/30 21:21
# @Author        ： YuLong
# @site          ： 
#</summary>
      
    
    
    
    <category term="05_测试工具" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="06_自动化" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="02_自动化实操" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/"/>
    
    <category term="01_UI自动化" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01-UI%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="python插件" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01-UI%E8%87%AA%E5%8A%A8%E5%8C%96/python%E6%8F%92%E4%BB%B6/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>pytesseract安装使用</title>
    <link href="http://example.com/05_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06_%E8%87%AA%E5%8A%A8%E5%8C%96/02_%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01_UI%E8%87%AA%E5%8A%A8%E5%8C%96/python%E6%8F%92%E4%BB%B6/pytesseract%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/05_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06_%E8%87%AA%E5%8A%A8%E5%8C%96/02_%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01_UI%E8%87%AA%E5%8A%A8%E5%8C%96/python%E6%8F%92%E4%BB%B6/pytesseract%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</id>
    <published>2022-05-30T12:30:31.411Z</published>
    <updated>2022-05-30T12:41:58.176Z</updated>
    
    <content type="html"><![CDATA[<ol><li>安装配置和测试<br> pytesseract是google的tesseract的一个python版本的接口库，想要真正使用，首先需要安装tesseract</li></ol><p>1.1 tesseract安装<br>下载安装tesseract，去这个网址下载：<a href="https://digi.bib.uni-mannheim.de/tesseract/%E3%80%82%EF%BC%88%E6%88%96%E8%80%85%E5%9C%A8github%E7%9A%84wiki%E9%A1%B5%E9%9D%A2%E4%B8%8A%E4%B9%9F%E5%8F%AF%E4%BB%A5%E6%89%BE%E5%88%B0%E8%BF%99%E4%B8%AA%E9%A1%B5%E9%9D%A2%E8%BF%9B%E8%A1%8C%E4%B8%8B%E8%BD%BD%EF%BC%89%EF%BC%8C%E6%A0%B9%E6%8D%AETesseract">https://digi.bib.uni-mannheim.de/tesseract/。（或者在github的wiki页面上也可以找到这个页面进行下载），根据Tesseract</a> document可知，Tesseract4.0及以上配备了LSTM网络，之前的低版本是没有的，所以按照自己需求去找相应的版本。<br>双击安装，记得勾选中文包（这个下载比较慢）</p><p><img src="/assets/2/image-20220530203405-z3znqfw.png" alt="image.png"></p><p>配置系统环境变量，只要配置到tesseract.exe所在的文件夹那一级就行</p><p><img src="/assets/2/image-20220530203414-zej2ozj.png" alt="image.png"></p><p>测试是否安装成功，在命令行输入tesseract –help查看是否会返回一些提示信息。</p><p><img src="/assets/2/image-20220530203421-i5eoze7.png" alt="image.png"></p><p>或者可以直接测试一张含有文字的图片，看看效果，tesseract image.png result</p><pre><code>tesseract 9450.jpg resultTesseract Open Source OCR Engine v5.0.0.20190623 with LeptonicaWarning: Invalid resolution 0 dpi. Using 70 instead. Estimating resolution as 319#     然后会在当前命令路径下看到一个result.txt，其中存放在识别结果</code></pre><p>1.2 pytessract安装<br>上面那个搞好了，这个就很好搞，直接</p><pre><code>pip install pytesseract #     或者通过conda安装conda  install -c conda-forge pytesseract</code></pre><ol start="2"><li>简单使用和参数说明</li></ol><p>2.1 无法调用<br>如果报错：</p><pre><code>XXXXFileNotFoundError: [WinError 2] 系统找不到指定的文件。XXXXpytesseract.pytesseract.TesseractNotFoundError: tesseract is not installed or it&#39;s not in your path</code></pre><p>有两种解决方案，</p><p>一种是在pytessercat.py脚本中更改tesseract_cmd路径为tesseract安装路径，要具体到tesseract.exe文件，但是不用写.exe这个后缀</p><p><img src="/assets/2/image-20220530203835-c39zwl4.png" alt="image.png"></p><p>另一种就是每次在代码中加入以下代码，指明tesseract_cmd命令的位置，方便pytesseract调用：</p><pre><code>tesseract_cmd = r&#39;C:\Program Files (x86)\Tesseract-OCR\tesseract&#39;pytesseract.pytesseract.tesseract_cmd =tesseract_cmd</code></pre><p>2.2 基本用法<br>以下代码粘贴自jupyter notebook文件，</p><pre><code>from PIL import Imageimport pytesseractimport matplotlib.pyplot as plt&lt;br /&gt;%matplotlib inlinepath=&quot;9450.jpg&quot;&quot;&quot;&quot;指明tesseract命令位置&quot;&quot;&quot;tesseract_cmd = r&#39;C:\Program Files (x86)\Tesseract-OCR\tesseract&#39;pytesseract.pytesseract.tesseract_cmd =tesseract_cmd&quot;&quot;&quot; 基础的图片转换为文字&quot;&quot;&quot;# 显示image=Image.open(path)plt.figure(figsize=(2,2))plt.axis(&#39;off&#39;)plt.imshow(image)print(pytesseract.image_to_string(image))&quot;&quot;&quot;当前支持的语言 osd On Screen Display 屏幕显示字符&quot;&quot;&quot;print(pytesseract.get_languages(config=&#39;&#39;))&quot;&quot;&quot;尝试修改语言参数&quot;&quot;&quot;print(pytesseract.image_to_string(image, lang=&#39;osd&#39;))&quot;&quot;&quot;🐱👓识别超时就停止&quot;&quot;&quot;try:    print(pytesseract.image_to_string(image, timeout=2)) # Timeout after 2 seconds    print(pytesseract.image_to_string(image, timeout=0.5)) # Timeout after half a secondexcept RuntimeError as timeout_error:    # Tesseract processing is terminated    pass&quot;&quot;&quot;将识别结果导出成文字可选的pdf这个达成的效果，就是会把图片转成pdf，同时其中的文字会是可编辑/可选的&quot;&quot;&quot;pdf = pytesseract.image_to_pdf_or_hocr(Image.open(&quot;1.png&quot;), extension=&#39;pdf&#39;)with open(&#39;test.pdf&#39;, &#39;w+b&#39;) as f:    f.write(pdf) # pdf type is bytes by default&quot;&quot;&quot;修改参数&quot;&quot;&quot;configdigit=&#39;--psm 6 --oem 1&#39;print(pytesseract.image_to_string(img_cv,config=configdigit))configdigit=&#39;--psm 6 --oem 3  -c tessedit_char_whitelist=0123456789&#39;print(pytesseract.image_to_string(img_cv,config=configdigit))&quot;&quot;&quot;关于其中的psm参数和oem参数，可以查看帮助文档&quot;&quot;&quot;! tesseract --help-extraPage segmentation modes:0    Orientation and script detection (OSD) only.1    Automatic page segmentation with OSD.2    Automatic page segmentation, but no OSD, or OCR. (not implemented)3    Fully automatic page segmentation, but no OSD. (Default)4    Assume a single column of text of variable sizes.5    Assume a single uniform block of vertically aligned text.6    Assume a single uniform block of text.7    Treat the image as a single text line.8    Treat the image as a single word.9    Treat the image as a single word in a circle.10    Treat the image as a single character.11    Sparse text. Find as much text as possible in no particular order.12    Sparse text with OSD.13    Raw line. Treat the image as a single text line,    bypassing hacks that are Tesseract-specific.OCR Engine modes:0    Legacy engine only.1    Neural nets LSTM engine only.2    Legacy + LSTM engines.3    Default, based on what is available.</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;安装配置和测试&lt;br&gt; pytesseract是google的tesseract的一个python版本的接口库，想要真正使用，首先需要安装tesseract&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;1.1 tesseract安装&lt;br&gt;下载安装tesseract，去这个网址</summary>
      
    
    
    
    <category term="05_测试工具" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="06_自动化" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="02_自动化实操" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/"/>
    
    <category term="01_UI自动化" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01-UI%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="python插件" scheme="http://example.com/categories/05-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01-UI%E8%87%AA%E5%8A%A8%E5%8C%96/python%E6%8F%92%E4%BB%B6/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>scrapy_gerapy爬虫管理框架</title>
    <link href="http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/05_scrapy_gerapy%E7%88%AC%E8%99%AB%E7%AE%A1%E7%90%86%E6%A1%86%E6%9E%B6/"/>
    <id>http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/05_scrapy_gerapy%E7%88%AC%E8%99%AB%E7%AE%A1%E7%90%86%E6%A1%86%E6%9E%B6/</id>
    <published>2022-05-23T06:57:07.077Z</published>
    <updated>2022-05-27T07:09:56.753Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-gerapy介绍"><a href="#1-gerapy介绍" class="headerlink" title="1. gerapy介绍"></a>1. gerapy介绍</h2><p>gerapy 是一款分布式爬虫管理框架，支持Python3，基于scrapy、scrapyd<br>scrapyd-client、scrapy-redis、scrapyd-api、scrapy-splash、jinjia2、django、vue.js开发、gerapy可以帮助我们：<br>    1. 更方便的控制爬虫运行<br>    2. 更直观的查看爬虫状态<br>    3. 更实时的查看爬去结果<br>    4. 更简单的实现项目部署<br>    5. 更统一地实现主机管理</p><h2 id="2-gerapy的安装"><a href="#2-gerapy的安装" class="headerlink" title="2. gerapy的安装"></a>2. gerapy的安装</h2><pre><code>1. 执行如下命令，等待安装完毕    pip install gerapy2. 验证gerapy是否安装成功    在终端中执行gerapy 会出现如下信息    ![wer](2232)3. gerapy 配置启动    1. 新建一个项目        gerapy init        执行完该命令之后在当前目录下生成一个gerapy文件夹，进入该文件夹，会找到一个名为projects 的文件    2. 对数据库进行初始化（在gerapy目录中操作），执行如下命令        gerapy migrate        ![image.png](assets/2/image-20220527144809-zun804x.png)        对数据库初始化之后会生成一个SQLite数据库，数据库保存主机配置和部署版本等        ![image.png](assets/2/image-20220527144834-crdotse.png)    3. 启动gerapy服务        此时启动gerapy服务的这台机器的8000端口上开启了gerapy服务，在浏览器中输入http://localhost:8000就能进入gerapy管理界面，在管理界面就可以进行主机管理和界面管理        ![image.png](assets/2/image-20220527145151-fkkxt6b.png)    4. 通过gerapy配置管理scrapy项目    5. 配置project        1. 我们可以将scrapy项目直接放到/gerapy/projects下        2. 可以在gerapy后台看到有个项目        ![image.png](assets/2/image-20220527145500-k99cqu4.png)        3. 点击部署点击部署按钮进行打包和部署，在右下角我么可以输入打包时的描述信息，类似于git的commit信息，        ![image.png](assets/2/image-20220527145743-ls1oklb.png)        然后点击打包按钮，即可发现gerapy会提示打包成功，同时在右侧显示打包的结果和打包名称        ![image.png](assets/2/image-20220527145820-tdw8if1.png)        4. 选择一个站点，点击右侧部署，将该项目部署到该站点上        ![image.png](assets/2/image-20220527150104-my849n7.png)        5. 成功部署之后会显示描述和部署时间        ![image.png](assets/2/image-20220527150307-9u2rn2l.png)        6. 来到client界面，找到部署该项目的节点，点击调度        ![image.png](assets/2/image-20220527150412-68g8gf6.png)        7. 在该节点中的项目列表中找到项目，点击右侧run运行项目        ![image.png](assets/2/image-20220527150528-q4ueh1u.png)    6. 补充        1.gerapy 与scrad有什么联系            我们仅仅使用scrapyd 是可以调用scrapy进行爬虫，只是需要使用命令进行开启爬虫 curl http://127.0.0.1:6800/schedule.json -d project=工程名 -d spider=爬虫名 使用gerapy就是将使用命令进行开启爬虫变成“小手一点”，我们在gerapy中配置scrad后，不需要使用命令行，可以通过图形化界面直接开启爬虫</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-gerapy介绍&quot;&gt;&lt;a href=&quot;#1-gerapy介绍&quot; class=&quot;headerlink&quot; title=&quot;1. gerapy介绍&quot;&gt;&lt;/a&gt;1. gerapy介绍&lt;/h2&gt;&lt;p&gt;gerapy 是一款分布式爬虫管理框架，支持Python3，基于scra</summary>
      
    
    
    
    <category term="03_测试高阶" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
    <category term="01_爬虫技术" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/"/>
    
    <category term="scrapy框架" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/"/>
    
    <category term="学习笔记" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="测试高阶" scheme="http://example.com/tags/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>scrapy_scrapyd部署</title>
    <link href="http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/04_scrapy_scrapyd%E9%83%A8%E7%BD%B2/"/>
    <id>http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/04_scrapy_scrapyd%E9%83%A8%E7%BD%B2/</id>
    <published>2022-05-23T06:57:06.809Z</published>
    <updated>2022-05-27T06:32:45.789Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-scrapyd的介绍"><a href="#1-scrapyd的介绍" class="headerlink" title="1. scrapyd的介绍"></a>1. scrapyd的介绍</h3><p>scrapyd是一个用于部署和运行scrapy爬虫的程序，它允许你通过json api 来部署爬虫项目和控制爬虫运行，scrapyd 是一个守护进程，监听爬虫的运行和请求，然后启动进程来执行他们</p><blockquote><p>所谓json api本质就是post请求的webapi</p></blockquote><h3 id="2-scrapyd的安装"><a href="#2-scrapyd的安装" class="headerlink" title="2. scrapyd的安装"></a>2. scrapyd的安装</h3><p>scrapyd 服务 ： pip install scrapyd<br>scrapyd 客户端： pip install scrapyd-client</p><h3 id="3-启动scrapyd服务"><a href="#3-启动scrapyd服务" class="headerlink" title="3. 启动scrapyd服务"></a>3. 启动scrapyd服务</h3><ol><li>在scrapy项目路径下 启动scrapyd 的命令： sudo scrapyd 或scrapyd</li><li>启动之后可以在本地打开运行的scrapyd，浏览器中访问本地6800端口可以查看scrapyd 的监控界面</li><li><img src="/111" alt="为配图，待截图"></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-scrapyd的介绍&quot;&gt;&lt;a href=&quot;#1-scrapyd的介绍&quot; class=&quot;headerlink&quot; title=&quot;1. scrapyd的介绍&quot;&gt;&lt;/a&gt;1. scrapyd的介绍&lt;/h3&gt;&lt;p&gt;scrapyd是一个用于部署和运行scrapy爬虫的程序</summary>
      
    
    
    
    <category term="03_测试高阶" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
    <category term="01_爬虫技术" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/"/>
    
    <category term="scrapy框架" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/"/>
    
    <category term="学习笔记" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="测试高阶" scheme="http://example.com/tags/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>03_scrapy_splash框架问题分析</title>
    <link href="http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03_scrapy_splash%E6%A1%86%E6%9E%B6%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90/"/>
    <id>http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03_scrapy_splash%E6%A1%86%E6%9E%B6%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90/</id>
    <published>2022-05-23T06:57:06.429Z</published>
    <updated>2022-05-28T10:10:32.961Z</updated>
    
    <content type="html"><![CDATA[<h2 id="启动splash服务"><a href="#启动splash服务" class="headerlink" title="启动splash服务"></a>启动splash服务</h2><h2 id="1-sittings-py-文件配置："><a href="#1-sittings-py-文件配置：" class="headerlink" title="1. sittings.py 文件配置："></a>1. sittings.py 文件配置：</h2><h5 id="1-修改settings-py，配置SPLASH-URL。在这里我们的Splash是在本地运行的，所以可以直接配置本地的地址："><a href="#1-修改settings-py，配置SPLASH-URL。在这里我们的Splash是在本地运行的，所以可以直接配置本地的地址：" class="headerlink" title="1. 修改settings.py，配置SPLASH_URL。在这里我们的Splash是在本地运行的，所以可以直接配置本地的地址："></a>1. 修改settings.py，配置SPLASH_URL。在这里我们的Splash是在本地运行的，所以可以直接配置本地的地址：</h5><pre><code>SPLASH_URL = &#39;http://localhost:8050&#39;</code></pre><h5 id="如果Splash是在远程服务器运行的，那此处就应该配置为远程的地址。例如运行在IP为120-27-34-25的服务器上，则此处应该配置为："><a href="#如果Splash是在远程服务器运行的，那此处就应该配置为远程的地址。例如运行在IP为120-27-34-25的服务器上，则此处应该配置为：" class="headerlink" title="如果Splash是在远程服务器运行的，那此处就应该配置为远程的地址。例如运行在IP为120.27.34.25的服务器上，则此处应该配置为："></a>如果Splash是在远程服务器运行的，那此处就应该配置为远程的地址。例如运行在IP为120.27.34.25的服务器上，则此处应该配置为：</h5><pre><code>SPLASH_URL = &#39;http://120.27.34.25:8050&#39;</code></pre><h5 id="2-还需要配置几个Middleware，代码如下所示："><a href="#2-还需要配置几个Middleware，代码如下所示：" class="headerlink" title="2. 还需要配置几个Middleware，代码如下所示："></a>2. 还需要配置几个Middleware，代码如下所示：</h5><pre><code>DOWNLOADER_MIDDLEWARES = &#123;   &#39;scrapy_splash.SplashCookiesMiddleware&#39;: 723,   &#39;scrapy_splash.SplashMiddleware&#39;: 725,   &#39;scrapy.downloadermiddlewares.httpcompression.HttpCompressionMiddleware&#39;: 810,&#125;SPIDER_MIDDLEWARES = &#123;   &#39;scrapy_splash.SplashDeduplicateArgsMiddleware&#39;: 100,&#125;</code></pre><p>这里配置了三个Downloader Middleware和一个Spider Middleware，这是Scrapy-Splash的核心部分。我们不再需要像对接Selenium那样实现一个Downloader Middleware，Scrapy-Splash库都为我们准备好了，直接配置即可。</p><h5 id="3-还需要配置一个去重的类DUPEFILTER-CLASS，代码如下所示："><a href="#3-还需要配置一个去重的类DUPEFILTER-CLASS，代码如下所示：" class="headerlink" title="3. 还需要配置一个去重的类DUPEFILTER_CLASS，代码如下所示："></a>3. 还需要配置一个去重的类DUPEFILTER_CLASS，代码如下所示：</h5><pre><code>DUPEFILTER_CLASS = &#39;scrapy_splash.SplashAwareDupeFilter&#39;1</code></pre><h5 id="4-最后配置一个Cache存储HTTPCACHE-STORAGE，代码如下所示："><a href="#4-最后配置一个Cache存储HTTPCACHE-STORAGE，代码如下所示：" class="headerlink" title="4. 最后配置一个Cache存储HTTPCACHE_STORAGE，代码如下所示："></a>4. 最后配置一个Cache存储HTTPCACHE_STORAGE，代码如下所示：</h5><pre><code>HTTPCACHE_STORAGE = &#39;scrapy_splash.SplashAwareFSCacheStorage&#39;</code></pre><h2 id="2-使用过程中遇到的问题分析"><a href="#2-使用过程中遇到的问题分析" class="headerlink" title="2. 使用过程中遇到的问题分析"></a>2. 使用过程中遇到的问题分析</h2><h3 id="1-错误演示-如图"><a href="#1-错误演示-如图" class="headerlink" title="1. 错误演示  如图"></a>1. 错误演示  如图</h3><p>spider文件编写代码错误</p><pre><code>    def start_requests(self):         yield SplashRequest(             url=self.start_urls[0],       # 这是一个错误的演示， 必须使用for循环取值，不能使用下标获取值，使用下标的话 会报 404的错误，找不到原因             callback=self.parse,             args=&#123;&quot;wait&quot;:10&#125;, # 最大超时时间，单位：s             endpoint=&quot;reader.html&quot;         )</code></pre><p><img src="/assets/2/image-20220526211507-asoegu2.png" alt="image.png"></p><h4 id="正确演示："><a href="#正确演示：" class="headerlink" title="正确演示："></a>正确演示：</h4><pre><code>    def start_requests(self):         for start_url in self.start_urls:             yield SplashRequest(start_url,                                 callback=self.parse,                                 args=&#123;&#39;wait&#39;: 10&#125;,  # 最大超时时间，单位：秒                                 endpoint=&#39;render.html&#39;)  # 使用splash服务的固定参数</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;启动splash服务&quot;&gt;&lt;a href=&quot;#启动splash服务&quot; class=&quot;headerlink&quot; title=&quot;启动splash服务&quot;&gt;&lt;/a&gt;启动splash服务&lt;/h2&gt;&lt;h2 id=&quot;1-sittings-py-文件配置：&quot;&gt;&lt;a href=&quot;#1-</summary>
      
    
    
    
    <category term="03_测试高阶" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
    <category term="01_爬虫技术" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/"/>
    
    <category term="scrapy框架" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/"/>
    
    <category term="学习笔记" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="测试高阶" scheme="http://example.com/tags/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>python第-scrapy框架_概念和流程</title>
    <link href="http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/01_scrapy_%E6%A6%82%E5%BF%B5%E5%92%8C%E6%B5%81%E7%A8%8B/"/>
    <id>http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/01_scrapy_%E6%A6%82%E5%BF%B5%E5%92%8C%E6%B5%81%E7%A8%8B/</id>
    <published>2022-05-23T06:56:21.085Z</published>
    <updated>2022-05-23T06:58:05.331Z</updated>
    
    <content type="html"><![CDATA[<h1 id="scrapy-的概念和流程"><a href="#scrapy-的概念和流程" class="headerlink" title="scrapy 的概念和流程"></a>scrapy 的概念和流程</h1><h2 id="第一讲"><a href="#第一讲" class="headerlink" title="第一讲"></a>第一讲</h2><h3 id="学习目的"><a href="#学习目的" class="headerlink" title="学习目的"></a>学习目的</h3><ol><li>了解scrapy的概念</li><li>了解dcrapy框架的作用</li><li>掌握scrapy框架的运行流程</li><li>掌握scrapy中的每个模块的作用</li></ol><h3 id="1-scrapy的概念"><a href="#1-scrapy的概念" class="headerlink" title="1.scrapy的概念"></a>1.scrapy的概念</h3><h4 id="scrapy是一个python编写的开源网络爬虫框架，他是一个被设计-用于爬取网络数据、提取结构性数据的框架"><a href="#scrapy是一个python编写的开源网络爬虫框架，他是一个被设计-用于爬取网络数据、提取结构性数据的框架" class="headerlink" title="scrapy是一个python编写的开源网络爬虫框架，他是一个被设计 用于爬取网络数据、提取结构性数据的框架"></a>scrapy是一个python编写的开源网络爬虫框架，他是一个被设计 用于爬取网络数据、提取结构性数据的框架</h4><pre><code> scrapy使用了twisted异步网络框架，可以加快我们的下载速度</code></pre><p>scrapy文档：<a href="https://scrapy-chs.readthedocs.io/zh_CN/0.24/">https://scrapy-chs.readthedocs.io/zh_CN&#x2F;0.24&#x2F;</a></p><h3 id="2-scrapy框架的作用"><a href="#2-scrapy框架的作用" class="headerlink" title="2.scrapy框架的作用"></a>2.scrapy框架的作用</h3><h4 id="少量的代码，就能够快速的抓取"><a href="#少量的代码，就能够快速的抓取" class="headerlink" title="少量的代码，就能够快速的抓取"></a>少量的代码，就能够快速的抓取</h4><h3 id="3-scrapy的工作流程"><a href="#3-scrapy的工作流程" class="headerlink" title="3.scrapy的工作流程"></a>3.scrapy的工作流程</h3><h4 id="3-1-回顾之前的爬虫流程"><a href="#3-1-回顾之前的爬虫流程" class="headerlink" title="3.1 回顾之前的爬虫流程"></a>3.1 回顾之前的爬虫流程</h4><p> <img src="/assets/2/image-20220523141200-qq1ar39.png" alt="image.png"></p><h4 id="3-2-上面流程可以修改为"><a href="#3-2-上面流程可以修改为" class="headerlink" title="3.2 上面流程可以修改为"></a>3.2 上面流程可以修改为</h4><p> <img src="/assets/2/image-20220523142540-r3yhln7.png" alt="image.png"></p><h4 id="3-3-scrapy-的流程"><a href="#3-3-scrapy-的流程" class="headerlink" title="3.3 scrapy 的流程"></a>3.3 scrapy 的流程</h4><p><img src="/assets/2/scrapy1.jpg" alt="image.png"><br><img src="/assets/2/image-20220523142912-6lkduyf.png" alt="image.png"><br>其流程可以描述如下：<br>    1. 爬虫中起始的url构造成request对象–&gt;爬虫中间件–&gt;迎请–&gt;调度器<br>    2.  调度器把request–&gt;迎请–&gt;下载中间件–&gt;下载器<br>    3.  下载器发送请求，获取response 响应–&gt;下载中间件–&gt;引擎–&gt;爬虫<br>    4.  爬虫提取url地址，组装成request对象–&gt;爬虫中间件–&gt;引擎–&gt;调度器，重复步骤2<br>    5.  爬虫提取数据–&gt;引擎–&gt;管道处理和保存数据<br>注意：<br>    * 图中中文是为了方便理解后加上去的<br>    * 图中绿色线条的表示数据的传递<br>    * 注意中间件的位置，决定其作用<br>    * 注意其中引擎的位置，所有的模块之间相互独立，只和引擎进行交互</p><h4 id="3-4-scrapy的三个内组织对象"><a href="#3-4-scrapy的三个内组织对象" class="headerlink" title="3.4 scrapy的三个内组织对象"></a>3.4 scrapy的三个内组织对象</h4><pre><code>* request请求对象：由url method post_data headers 等构成* response响应对象：由url body status headers等构成* item数据对象：本质是个字典</code></pre><h4 id="3-5-scrapy中的每个模块的具体作用"><a href="#3-5-scrapy中的每个模块的具体作用" class="headerlink" title="3.5 scrapy中的每个模块的具体作用"></a>3.5 scrapy中的每个模块的具体作用</h4><p>![image.png](assets&#x2F;2&#x2F;  image-20220523144758-47dlg2q.png)<br>注意：<br>    * 爬虫中间件和下载中间件知识运行逻辑的位置不同，作用是重复的：如替换UA等</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;scrapy-的概念和流程&quot;&gt;&lt;a href=&quot;#scrapy-的概念和流程&quot; class=&quot;headerlink&quot; title=&quot;scrapy 的概念和流程&quot;&gt;&lt;/a&gt;scrapy 的概念和流程&lt;/h1&gt;&lt;h2 id=&quot;第一讲&quot;&gt;&lt;a href=&quot;#第一讲&quot; c</summary>
      
    
    
    
    <category term="03_测试高阶" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
    <category term="01_爬虫技术" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/"/>
    
    <category term="scrapy框架" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/"/>
    
    <category term="学习笔记" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="测试高阶" scheme="http://example.com/tags/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>python第-scrapy框架_入门使用</title>
    <link href="http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/02_scrapy_%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/02_scrapy_%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8/</id>
    <published>2022-05-23T06:02:15.176Z</published>
    <updated>2022-05-26T13:10:16.665Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习目标："><a href="#学习目标：" class="headerlink" title="学习目标："></a>学习目标：</h2><pre><code>1. 掌握scrapy的安装2. 应用创建scrapy的项目3. 应用创建scrapy爬虫4. 应用运行scrapy爬虫5. 应用scrapy定位以及提取数据或属性值得方法6. 掌握response响应对象的常用属性</code></pre><h2 id="1-安装scrapy"><a href="#1-安装scrapy" class="headerlink" title="1. 安装scrapy"></a>1. 安装scrapy</h2><h4 id="命令："><a href="#命令：" class="headerlink" title="命令："></a>命令：</h4><blockquote><p>sudo apt-get install scrapy</p></blockquote><h4 id="或者"><a href="#或者" class="headerlink" title="或者"></a>或者</h4><blockquote><p>pip&#x2F;pip3 install  scrapy</p></blockquote><h2 id="2-scrapy-项目开发流程"><a href="#2-scrapy-项目开发流程" class="headerlink" title="2. scrapy 项目开发流程"></a>2. scrapy 项目开发流程</h2><pre><code>1.创建项目：    scrapy startoject mySpider2.生成一个爬虫    scrapy genspider itcast itcast.cn3.提取数据    根据网站结果在spider中实现数据采集相关内容4.保存数据    使用pipeline进行数据后续处理和保存</code></pre><h2 id="3-创建项目"><a href="#3-创建项目" class="headerlink" title="3. 创建项目"></a>3. 创建项目</h2><blockquote><p>通过命令将scrapy项目的文件生成出来，后续步骤都是在项目文件中进行相关操作，下面抓取传智师资库来学习scrapy的入门使用：<a href="http://www.itcast.cn/channel/teacher.shtml">http://www.itcast.cn/channel/teacher.shtml</a><br>创建scrapy项目的命令：<br>scrapy startpoject &lt;项目名称&gt;<br>示例：<br>scrapy startproject myspider<br>生成的目录和文件结构如图：<br><img src="/assets/image-20220523151330-kj8lufa.png" alt="image.png"></p></blockquote><h2 id="4-创建爬虫"><a href="#4-创建爬虫" class="headerlink" title="4. 创建爬虫"></a>4. 创建爬虫</h2><h3 id="通过命令创建出爬虫文件，爬虫文件为主要的代码作业文件通常一个网站的爬虫动作都会在爬虫文件中进行编写"><a href="#通过命令创建出爬虫文件，爬虫文件为主要的代码作业文件通常一个网站的爬虫动作都会在爬虫文件中进行编写" class="headerlink" title="通过命令创建出爬虫文件，爬虫文件为主要的代码作业文件通常一个网站的爬虫动作都会在爬虫文件中进行编写"></a>通过命令创建出爬虫文件，爬虫文件为主要的代码作业文件通常一个网站的爬虫动作都会在爬虫文件中进行编写</h3><h4 id="命令：-1"><a href="#命令：-1" class="headerlink" title="命令："></a>命令：</h4><pre><code>在项目路径下执行：    &gt; scrapy genspider &lt;爬虫名字&gt;&lt;允许爬取的域名&gt;</code></pre><h4 id="爬虫名字：作为爬虫运行时的参数"><a href="#爬虫名字：作为爬虫运行时的参数" class="headerlink" title="爬虫名字：作为爬虫运行时的参数"></a>爬虫名字：作为爬虫运行时的参数</h4><h4 id="允许爬取的域名：为对于爬虫设置的爬取范围，设置之后用于过滤要爬取的url，如果爬取的url与允许的域不同则被过滤掉"><a href="#允许爬取的域名：为对于爬虫设置的爬取范围，设置之后用于过滤要爬取的url，如果爬取的url与允许的域不同则被过滤掉" class="headerlink" title="允许爬取的域名：为对于爬虫设置的爬取范围，设置之后用于过滤要爬取的url，如果爬取的url与允许的域不同则被过滤掉"></a>允许爬取的域名：为对于爬虫设置的爬取范围，设置之后用于过滤要爬取的url，如果爬取的url与允许的域不同则被过滤掉</h4><h4 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h4><blockquote><p>cd myspider<br>scrapy genspider itcast  itcast.cn</p></blockquote><p>生成的目录和文件结果如下：<br><img src="/assets/2/image-20220523153511-rqee69q.png" alt="image.png"></p><h3 id="5-完善爬虫"><a href="#5-完善爬虫" class="headerlink" title="5. 完善爬虫"></a>5. 完善爬虫</h3><blockquote><p>“””<br>filename:itcast.py<br>“””<br>import scrapy</p></blockquote><blockquote><p>class ItcastSpider(scrapy.Spider):</p><h1 id="爬虫名称"><a href="#爬虫名称" class="headerlink" title="爬虫名称"></a>爬虫名称</h1><p>   name &#x3D; ‘itcast’</p><h1 id="允许爬取的范围"><a href="#允许爬取的范围" class="headerlink" title="允许爬取的范围"></a>允许爬取的范围</h1><p>   allowed_domains &#x3D; [‘itcast.cn’]</p><h1 id="开始爬取的url地址"><a href="#开始爬取的url地址" class="headerlink" title="开始爬取的url地址"></a>开始爬取的url地址</h1><h1 id="start-urls-x3D-‘http-itcast-cn-39"><a href="#start-urls-x3D-‘http-itcast-cn-39" class="headerlink" title="start_urls &#x3D; [‘http://itcast.cn/&#39;]"></a>start_urls &#x3D; [‘<a href="http://itcast.cn/&#39;]">http://itcast.cn/&#39;]</a></h1><h1 id="修改开始爬取的地址"><a href="#修改开始爬取的地址" class="headerlink" title="修改开始爬取的地址"></a>修改开始爬取的地址</h1><p>   start_urls &#x3D; [‘<a href="http://www.itcast.cn/channel/teacher.shtml#ajavaee&#39;]">http://www.itcast.cn/channel/teacher.shtml#ajavaee&#39;]</a></p></blockquote><blockquote><h1 id="数据提取的方法，接受下载中间件传过来的response"><a href="#数据提取的方法，接受下载中间件传过来的response" class="headerlink" title="数据提取的方法，接受下载中间件传过来的response"></a>数据提取的方法，接受下载中间件传过来的response</h1><p>   def parse(self, response):<br>       #  获取所有教师节点<br>       node_list &#x3D; response.xpath(‘&#x2F;&#x2F;div[@class &#x3D; “li_txt”]’)<br>       # 遍历所有教师节点<br>       for  node   in   node_list:<br>           temp &#x3D; {}<br>           # xpath 方法返回的是选择器对象列表，<br>           # extract()用于从选择器兑现中提取数据<br>           #extract_first()  就不需要前面的索引[0],可能返回空列表可以处理，给None，列表只有一个值时使用<br>           temp[“name”] &#x3D; node.xpath(‘.&#x2F;h3&#x2F;text()’)[0].extract()<br>           temp[“title”] &#x3D; node.xpath(‘.&#x2F;h4&#x2F;text()’)[0].extract()<br>           temp[“desc”] &#x3D; node.xpath(‘.&#x2F;p&#x2F;text()’)[0].extract()<br>           # xpath 结果为只有一个值得列表可以使用extract_first()<br>           # xpath 结果如果有多个值时使用extract()<br>           yield  temp</p></blockquote><h4 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h4><pre><code>* scrapy.Spider爬虫类中必须有名为parse的解析* 如果网站结果层次比较负载，也可以自定义其他解析函数* 在解析函数中提取的url地址如果要发送请求，则必须属于allowed_domains范围内，但是start_urls中的url地址不受这个限制，我们会在后续课程中学习如何在解析函数中构造发送请求* 启动爬虫的时候注意启动的位置，是在项目路径下启动* parse()函数中使用yield返回数据，注意：解析函数中的yield能够传递对象只能是：Baseltem，Request，dict，None</code></pre><h4 id="5-2-定位元素以及提取数据、属性值的方法"><a href="#5-2-定位元素以及提取数据、属性值的方法" class="headerlink" title="5.2 定位元素以及提取数据、属性值的方法"></a>5.2 定位元素以及提取数据、属性值的方法</h4><blockquote><p>解析并获取scrapy爬虫中的数据，利用xpath规则字符串进行定位和提取<br>    1. response.xpath方法的返回结果是一个类似list的类型，其中包含的是selector对象，操作和列表一样<br>    2. 额外方法extract():返回一个包含字符串的列表<br>    3. 额外方法extract_first():返回列表中的第一个字符串，列表为空返回None</p></blockquote><h4 id="5-3-response响应对象的常见属性"><a href="#5-3-response响应对象的常见属性" class="headerlink" title="5.3 response响应对象的常见属性"></a>5.3 response响应对象的常见属性</h4><pre><code>* response.url：当前响应的url地址* response.request.url：当前响应对应的请求的url地址* response.headers：响应头* response.requests.headers:当前响应的请求头* response.body ：响应体，也就是html代码，byte类型</code></pre><h3 id="7-运行scrapy"><a href="#7-运行scrapy" class="headerlink" title="7. 运行scrapy"></a>7. 运行scrapy</h3><h4 id="命令：在项目目录下执行scrapy-crawl-lt-爬虫名字-gt"><a href="#命令：在项目目录下执行scrapy-crawl-lt-爬虫名字-gt" class="headerlink" title="命令：在项目目录下执行scrapy crawl&lt;爬虫名字&gt;"></a>命令：在项目目录下执行scrapy crawl&lt;爬虫名字&gt;</h4><blockquote><p>scrapy crawl itcast</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;学习目标：&quot;&gt;&lt;a href=&quot;#学习目标：&quot; class=&quot;headerlink&quot; title=&quot;学习目标：&quot;&gt;&lt;/a&gt;学习目标：&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;1. 掌握scrapy的安装
2. 应用创建scrapy的项目
3. 应用创建scrapy爬虫
4.</summary>
      
    
    
    
    <category term="03_测试高阶" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
    <category term="01_爬虫技术" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/"/>
    
    <category term="scrapy框架" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/"/>
    
    <category term="学习笔记" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="测试高阶" scheme="http://example.com/tags/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>Jupyter Notebook安装（Windows）</title>
    <link href="http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/03_python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/02_python%E6%8F%92%E4%BB%B6_jupyter/"/>
    <id>http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/03_python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/02_python%E6%8F%92%E4%BB%B6_jupyter/</id>
    <published>2022-05-20T18:07:37.681Z</published>
    <updated>2022-06-02T17:14:12.965Z</updated>
    
    <content type="html"><![CDATA[<p>Jupyter Notebook安装（Windows）</p><ol><li><p>下载Jupyter Notebook<br> （1）打开cmd（如果没有把Python安装目录添加到Path，就需要切换到Python安装目录的Scripts目录下，不过大多数的Python安装教程都会有这一步）；</p><p> <img src="/assets/2/image-20220521020425-aftpk03.png" alt="image.png"></p></li></ol><p>（2）输入pip install jupyter；</p><ol start="2"><li><p>启动Juypter Notebook<br> （1）命令行窗口输入jupyter notebook；</p><p> <img src="/assets/2/image-20220521020437-ydugrs8.png" alt="image.png"></p></li></ol><p>同时，默认浏览器会打开Jupyter Notebook窗口，说明Jupyter Notebook安装成功。</p><p><img src="/assets/2/image-20220521020447-b4gi4oq.png" alt="image.png"></p><ol start="3"><li><p>配置Jupyter Notebook<br> （1）命令行窗口输入jupyter notebook –generate-config，会发现C:\Users\用户名\ .jupyter下多出了一个配置文件jupyter_notebook_config.py；</p><p> <img src="/assets/2/image-20220521020459-2dhd2aa.png" alt="image.png"></p></li></ol><p>（2）打开这个配置文件，找到下面这句#c.NotebookApp.notebook_dir &#x3D; ‘’。</p><p><img src="/assets/2/image-20220521020506-0fcek2s.png" alt="image.png"></p><p>可以把它修改成c.NotebookApp.notebook_dir &#x3D; ‘D:\jupyter-notebook’，当然具体的目录由自己创建的文件夹决定（需要自己创建）。</p><p><img src="/assets/2/image-20220521020519-vll8ozo.png" alt="image.png"></p><p>配置文件修改完成后，以后在jupyter notebook中写的代码都会保存在该目录下。现在重新启动jupyter notebook，就进入了新的工作目录；</p><p><img src="/assets/2/image-20220521020528-wexy3m4.png" alt="image.png"></p><ol start="4"><li>添加代码自动补全功能（可选）<br> （1）打开cmd，输入pip install jupyter_contrib_nbextensions，等待安装成功；</li></ol><p>（2）安装完之后需要配置nbextension（配置前要确保已关闭jupyter notebook），在cmd中输入jupyter contrib nbextension install –user –skip-running-check，等待配置成功；</p><p>（3）在前两步成功的情况下，启动jupyter notebook，会发现在选项栏中多出了Nbextension的选项，点开该选项，并勾选Hinterland，即可添加代码自动补全功能。</p><p><img src="/assets/2/image-20220521020535-pwhm2y0.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Jupyter Notebook安装（Windows）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;下载Jupyter Notebook&lt;br&gt; （1）打开cmd（如果没有把Python安装目录添加到Path，就需要切换到Python安装目录的Scripts目录下，不过大多数的Pyth</summary>
      
    
    
    
    <category term="03_测试高阶" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
    <category term="03_python数据分析" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/03-python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    
    <category term="测试高阶" scheme="http://example.com/tags/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>python数据分析入门实例-pandas_matplotlib</title>
    <link href="http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/03_python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/01_pandas_matplotlib/"/>
    <id>http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/03_python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/01_pandas_matplotlib/</id>
    <published>2022-05-20T16:49:23.564Z</published>
    <updated>2022-06-02T17:14:07.412Z</updated>
    
    <content type="html"><![CDATA[<pre><code># 1. 读取csv文件道程序中，用一个合适的变量存储它# 2. 清洗，处理# 3. 可视化，画图# 安装 第三方库   jupyter# series  一维数据,dataframe  二维数据（csv）# 打开jupyter服务import pandas as pddf = pd.read_csv(&quot;文件名.csv&quot;)  #  读取所有的数据type(df)# pandas.core.frame.DateFramedf# 表格文件df.info()    # 文件属性df.columns   # 获取所有的列名# 删除无用列del(df[&quot;需要删除的列名&quot;]) # 删除原数据   df.列名(列名不能包含空格)dfhead()# df.drop(删除一行或者一列) df.drop_duplicates(删除重复数据)  df.dropna(删除空白数据) # df.drop([&quot;列名1&quot;,&quot;列名2&quot;]，axis = 1,inplace = True)# 一列表的形式删除列    inplace 是否在原数据上执行df.columns   # 获取所有的列名df.columns = [要修改的列名]   # 修改列名df.place #  假设此列为出版地# 先分组，然后数每组有多少数据count_df = df.groupby([&quot;place&quot;,&quot;date&quot;])    # 分组place_count = count_df[&quot;Identifier&quot;].count()  # 统计place_sorted = place_count.sort_values(ascending = False)    # False  降序   True  升序# 数据可视化，画图# 画什么图？？# 趋势，规律  画线图# 分布占比图  饼图@matplotlib inlineimport matplotlib.pyplot  as  pltlabels = place_sorted.index[:6]   #  取前六位values = place_sorted.values[:6]  #  取前六位plt.pie(calues,labels = labels,autopct=&quot;%.1f%%&quot;)plt.axis(&quot;equal&quot;)</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre&gt;&lt;code&gt;# 1. 读取csv文件道程序中，用一个合适的变量存储它
# 2. 清洗，处理
# 3. 可视化，画图
# 安装 第三方库   jupyter
# series  一维数据,dataframe  二维数据（csv）
# 打开jupyter服务
import </summary>
      
    
    
    
    <category term="03_测试高阶" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
    <category term="03_python数据分析" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/03-python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    
    <category term="测试高阶" scheme="http://example.com/tags/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>python_tkinter_图形界面编程</title>
    <link href="http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/02_python_tkinter/01_tkinter/"/>
    <id>http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/02_python_tkinter/01_tkinter/</id>
    <published>2022-05-20T16:06:49.695Z</published>
    <updated>2022-06-02T17:14:00.838Z</updated>
    
    <content type="html"><![CDATA[<h2 id="系统登录"><a href="#系统登录" class="headerlink" title="系统登录"></a>系统登录</h2><pre><code># 安装  pip install tkinterfrom tkinter import *from tkinter import messageboxwindow = TK()window.title(&quot;灵犀教育管理系统&quot;)window.geometry(&quot;300x300+400+400&quot;)name_label = Lable(window,text = &quot;用户名&quot;)pwd_label = Lable(window,text = &quot;密码&quot;)name_entry=Entry(window)pwd_entry = Entry(window,show = &quot;*&quot;)uesrs = &#123;    &quot;admin&quot;:&quot;123&quot;&#125;def login()    # 获取用户名密码    name=name_entry.get()    pwd = pwd_entry.get()    if name ==&quot;&quot;:        messagebox.showerror(title= &quot;错误提示&quot;，message = &quot;用户名不能为空&quot;)    elif pwd ==&quot;&quot;:        messagebox.showerror(title= &quot;错误提示&quot;，message = &quot;密码不能为空&quot;)    else:        # 判断用户名是否存在，以及密码是否正确        if useer.get(name) == pwd:            messagebos.showinfo(title= &quot;提示&quot;，message = &quot;登陆成功&quot;)        else:            messagebox.showerror(title= &quot;错误提示&quot;，message = &quot;登陆失败&quot;)            login_btn = Button(window,text = &quot;登录&quot;，width = 8, command =login )#name_label.pack()  #  pack 居中顺序排列#pwd_label.pack()#name_entry.pack()#pwd_entry.pack()#login_btn.pack()# place(x,y)  #  详细位置布局# grid 表格形式name_label.grid(row = 0,column = 0,padx = 30,pady = 20)name_entry.grid(row = 0,column = 1)pwd_label.grid(row = 1,column = 0)pwd_entry.grid(row = 1,column = 1)login_btn.grid(row = 2,colimn = 1,pady = 20,stick = E)window.mainloop()</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;系统登录&quot;&gt;&lt;a href=&quot;#系统登录&quot; class=&quot;headerlink&quot; title=&quot;系统登录&quot;&gt;&lt;/a&gt;系统登录&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;# 安装  pip install tkinter
from tkinter import *
from t</summary>
      
    
    
    
    <category term="03_测试高阶" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
    <category term="02_python_tkinter" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/02-python-tkinter/"/>
    
    
    <category term="测试高阶" scheme="http://example.com/tags/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>python第三方库-scrapy爬虫框架</title>
    <link href="http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/01_python_scrapy%E6%A1%86%E6%9E%B6/"/>
    <id>http://example.com/03_%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01_%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/01_python_scrapy%E6%A1%86%E6%9E%B6/</id>
    <published>2022-05-20T13:12:06.336Z</published>
    <updated>2022-05-23T07:30:52.268Z</updated>
    
    <content type="html"><![CDATA[<h1 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a><a href="https://scrapy-chs.readthedocs.io/zh_CN/0.24/">官方文档</a></h1><h2 id="爬虫原理"><a href="#爬虫原理" class="headerlink" title="爬虫原理"></a>爬虫原理</h2><h3 id="基础库的使用，"><a href="#基础库的使用，" class="headerlink" title="基础库的使用，"></a>基础库的使用，</h3><h3 id="进阶，"><a href="#进阶，" class="headerlink" title="进阶，"></a>进阶，</h3><h3 id="反爬虫，"><a href="#反爬虫，" class="headerlink" title="反爬虫，"></a>反爬虫，</h3><h3 id="单线程爬虫，"><a href="#单线程爬虫，" class="headerlink" title="单线程爬虫，"></a>单线程爬虫，</h3><h3 id="多线程爬虫，"><a href="#多线程爬虫，" class="headerlink" title="多线程爬虫，"></a>多线程爬虫，</h3><h3 id="scrapy（异步并发），"><a href="#scrapy（异步并发），" class="headerlink" title="scrapy（异步并发），"></a>scrapy（异步并发），</h3><h3 id="分布式爬虫"><a href="#分布式爬虫" class="headerlink" title="分布式爬虫"></a>分布式爬虫</h3><h2 id="框架："><a href="#框架：" class="headerlink" title="框架："></a>框架：</h2><h3 id="抓取，解析，保存"><a href="#抓取，解析，保存" class="headerlink" title="抓取，解析，保存"></a>抓取，解析，保存</h3><h3 id="域名，ip地址"><a href="#域名，ip地址" class="headerlink" title="域名，ip地址"></a>域名，ip地址</h3><h4 id="1-scrapy-异步并发-安装第三方库：pip-install-scrapy"><a href="#1-scrapy-异步并发-安装第三方库：pip-install-scrapy" class="headerlink" title="1. scrapy__异步并发 安装第三方库：pip install scrapy"></a>1. scrapy__异步并发 安装第三方库：pip install scrapy</h4><p>cmd 进入空白文件 通过scrapy 创建框架<br>    命令： </p><blockquote><p>scrapy startproject demo0520_scrapy（文件名,项目的名字）  回车<br><img src="/assets/2/20220520_1.jpg"><br>cd  demo0520_scrapy<br><img src="/assets/2/20220520_2.jpg"><br><img src="/assets/2/20220520_3.jpg"><br>scrapy genspider  movies（爬虫的类型，爬虫的名字） donban.com（域名）  # 需要加两个参数<br><img src="/assets/2/20220520_4.jpg"></p></blockquote><ol start="2"><li>打开pycharm<br> 打开项目：  项目位置</li></ol><p><img src="/assets/2/scrapy1.jpg"></p><ol start="3"><li>运行爬虫<br> 进入项目文件—&gt;&gt;&gt; cmd 或者pycharm 控制台<br> 输入 scrapy  crawl movies（爬虫的名字）</li></ol><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;官方文档&quot;&gt;&lt;a href=&quot;#官方文档&quot; class=&quot;headerlink&quot; title=&quot;官方文档&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://scrapy-chs.readthedocs.io/zh_CN/0.24/&quot;&gt;官方文档&lt;/a&gt;&lt;/h1&gt;&lt;h2 i</summary>
      
    
    
    
    <category term="03_测试高阶" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
    <category term="01_爬虫技术" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/"/>
    
    <category term="scrapy框架" scheme="http://example.com/categories/03-%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/01-%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/scrapy%E6%A1%86%E6%9E%B6/"/>
    
    
    <category term="测试高阶" scheme="http://example.com/tags/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%98%B6/"/>
    
  </entry>
  
</feed>
