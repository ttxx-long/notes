<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>软件测试技术分享</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-05-15T07:25:11.745Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>yulong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>selenium-webdriver常见报错问题</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06_%E8%87%AA%E5%8A%A8%E5%8C%96/02_%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01_UI%E8%87%AA%E5%8A%A8%E5%8C%96/UI%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/01_selenium/05_selenium-webdriver%E5%B8%B8%E8%A7%81%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06_%E8%87%AA%E5%8A%A8%E5%8C%96/02_%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01_UI%E8%87%AA%E5%8A%A8%E5%8C%96/UI%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/01_selenium/05_selenium-webdriver%E5%B8%B8%E8%A7%81%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/</id>
    <published>2022-05-15T07:16:36.084Z</published>
    <updated>2022-05-15T07:25:11.745Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前面也学了很多的selenium元素定位了，相信肯定也是遇到了很多的问题，此处列举出一些，来看看是否有你遇到过的还未解决的吧。"><a href="#一、前面也学了很多的selenium元素定位了，相信肯定也是遇到了很多的问题，此处列举出一些，来看看是否有你遇到过的还未解决的吧。" class="headerlink" title="一、前面也学了很多的selenium元素定位了，相信肯定也是遇到了很多的问题，此处列举出一些，来看看是否有你遇到过的还未解决的吧。"></a>一、前面也学了很多的selenium元素定位了，相信肯定也是遇到了很多的问题，此处列举出一些，来看看是否有你遇到过的还未解决的吧。</h2><h4 id="selenium-common-exceptions-WebDriverException-msg-x3D-None-screen-x3D-None-stacktrace-x3D-None"><a href="#selenium-common-exceptions-WebDriverException-msg-x3D-None-screen-x3D-None-stacktrace-x3D-None" class="headerlink" title="selenium.common.exceptions.WebDriverException(msg&#x3D;None, screen&#x3D;None, stacktrace&#x3D;None)"></a>selenium.common.exceptions.WebDriverException(msg&#x3D;None, screen&#x3D;None, stacktrace&#x3D;None)</h4><pre><code>    描述：WebDriver基础的异常类    解决思路：检查驱动版本与浏览器版本</code></pre><h4 id="selenium-common-exceptions-TimeoutException-msg-x3D-None-screen-x3D-None-stacktrace-x3D-None"><a href="#selenium-common-exceptions-TimeoutException-msg-x3D-None-screen-x3D-None-stacktrace-x3D-None" class="headerlink" title="selenium.common.exceptions.TimeoutException(msg&#x3D;None, screen&#x3D;None, stacktrace&#x3D;None)"></a>selenium.common.exceptions.TimeoutException(msg&#x3D;None, screen&#x3D;None, stacktrace&#x3D;None)</h4><pre><code>    描述：在足够的时间内没有完成某项操作    解决思路：适当的增加时长，等待界面元素的渲染</code></pre><h4 id="selenium-common-exceptions-NoSuchElementException-msg-x3D-None-screen-x3D-None-stacktrace-x3D-None"><a href="#selenium-common-exceptions-NoSuchElementException-msg-x3D-None-screen-x3D-None-stacktrace-x3D-None" class="headerlink" title="selenium.common.exceptions.NoSuchElementException(msg&#x3D;None, screen&#x3D;None, stacktrace&#x3D;None)"></a>selenium.common.exceptions.NoSuchElementException(msg&#x3D;None, screen&#x3D;None, stacktrace&#x3D;None)</h4><pre><code>    描述：定位元素不被找到    解决思路：检查是否写错了元素，更换定位元素</code></pre><h4 id="selenium-common-exceptions-NoSuchAttributeException-msg-x3D-None-screen-x3D-None-stacktrace-x3D-None"><a href="#selenium-common-exceptions-NoSuchAttributeException-msg-x3D-None-screen-x3D-None-stacktrace-x3D-None" class="headerlink" title="selenium.common.exceptions.NoSuchAttributeException(msg&#x3D;None, screen&#x3D;None, stacktrace&#x3D;None)"></a>selenium.common.exceptions.NoSuchAttributeException(msg&#x3D;None, screen&#x3D;None, stacktrace&#x3D;None)</h4><pre><code>    描述：元素属性不能被找到    解决思路：检查是否写错了元素属性</code></pre><h4 id="selenium-common-exceptions-NoAlertPresentException-msg-x3D-None-screen-x3D-None-stacktrace-x3D-None"><a href="#selenium-common-exceptions-NoAlertPresentException-msg-x3D-None-screen-x3D-None-stacktrace-x3D-None" class="headerlink" title="selenium.common.exceptions.NoAlertPresentException(msg&#x3D;None, screen&#x3D;None, stacktrace&#x3D;None)"></a>selenium.common.exceptions.NoAlertPresentException(msg&#x3D;None, screen&#x3D;None, stacktrace&#x3D;None)</h4><pre><code>    描述：切换到alert弹窗，alert并没有弹出    解决思路：增加等待时间</code></pre><h4 id="selenium-common-exceptions-NoSuchFrameException-msg-x3D-None-screen-x3D-None-stacktrace-x3D-None"><a href="#selenium-common-exceptions-NoSuchFrameException-msg-x3D-None-screen-x3D-None-stacktrace-x3D-None" class="headerlink" title="selenium.common.exceptions.NoSuchFrameException(msg&#x3D;None, screen&#x3D;None, stacktrace&#x3D;None)"></a>selenium.common.exceptions.NoSuchFrameException(msg&#x3D;None, screen&#x3D;None, stacktrace&#x3D;None)</h4><pre><code>    描述：没有iframe窗口    解决思路：检查是否存在此类窗口</code></pre><h4 id="selenium-common-exceptions-InvalidElementStateException-msg-x3D-None-screen-x3D-None-stacktrace-x3D-None"><a href="#selenium-common-exceptions-InvalidElementStateException-msg-x3D-None-screen-x3D-None-stacktrace-x3D-None" class="headerlink" title="selenium.common.exceptions.InvalidElementStateException(msg&#x3D;None, screen&#x3D;None, stacktrace&#x3D;None)"></a>selenium.common.exceptions.InvalidElementStateException(msg&#x3D;None, screen&#x3D;None, stacktrace&#x3D;None)</h4><pre><code>    描述：元素无效    解决思路：更改定位元素</code></pre><h4 id="selenium-common-exceptions-ElementNotSelectableException-msg-x3D-None-screen-x3D-None-stacktrace-x3D-None"><a href="#selenium-common-exceptions-ElementNotSelectableException-msg-x3D-None-screen-x3D-None-stacktrace-x3D-None" class="headerlink" title="selenium.common.exceptions.ElementNotSelectableException(msg&#x3D;None, screen&#x3D;None, stacktrace&#x3D;None)"></a>selenium.common.exceptions.ElementNotSelectableException(msg&#x3D;None, screen&#x3D;None, stacktrace&#x3D;None)</h4><pre><code>    描述：元素不能被选中    解决思路：检查是否是元素是否写错，检查属性</code></pre><h4 id="selenium-common-exceptions-ElementNotVisibleException-msg-x3D-None-screen-x3D-None-stacktrace-x3D-None"><a href="#selenium-common-exceptions-ElementNotVisibleException-msg-x3D-None-screen-x3D-None-stacktrace-x3D-None" class="headerlink" title="selenium.common.exceptions.ElementNotVisibleException(msg&#x3D;None, screen&#x3D;None, stacktrace&#x3D;None)"></a>selenium.common.exceptions.ElementNotVisibleException(msg&#x3D;None, screen&#x3D;None, stacktrace&#x3D;None)</h4><pre><code>    描述：元素不可见，不能操作    解决思路：检查元素是否带有display:none属性</code></pre><h4 id="selenium-common-exceptions-InvalidSwitchToTargetException-msg-x3D-None-screen-x3D-None-stacktrace-x3D-None"><a href="#selenium-common-exceptions-InvalidSwitchToTargetException-msg-x3D-None-screen-x3D-None-stacktrace-x3D-None" class="headerlink" title="selenium.common.exceptions.InvalidSwitchToTargetException(msg&#x3D;None, screen&#x3D;None, stacktrace&#x3D;None)"></a>selenium.common.exceptions.InvalidSwitchToTargetException(msg&#x3D;None, screen&#x3D;None, stacktrace&#x3D;None)</h4><pre><code>    描述：切换窗口或框架不存在    解决思路：检查页面元素，查看是否存在此类窗口或检查定位元素</code></pre><h4 id="selenium-common-exceptions-NoSuchWindowException-msg-x3D-None-screen-x3D-None-stacktrace-x3D-None"><a href="#selenium-common-exceptions-NoSuchWindowException-msg-x3D-None-screen-x3D-None-stacktrace-x3D-None" class="headerlink" title="selenium.common.exceptions.NoSuchWindowException(msg&#x3D;None, screen&#x3D;None, stacktrace&#x3D;None)"></a>selenium.common.exceptions.NoSuchWindowException(msg&#x3D;None, screen&#x3D;None, stacktrace&#x3D;None)</h4><pre><code>    描述：目标窗口不存在    解决思路：打印窗口信息，核对切换的窗口是否存在</code></pre><h2 id="二、关于selenium中webdriver版本报错"><a href="#二、关于selenium中webdriver版本报错" class="headerlink" title="二、关于selenium中webdriver版本报错"></a>二、关于selenium中webdriver版本报错</h2><p>###报错信息<br>####selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 95 Current browser version is 100.0.4896.88 with binary path C:\Program Files\Google\Chrome\Application\chrome.exe<br>解决办法<br>查看Chrome版本<br>chrome:&#x2F;&#x2F;settings&#x2F;help<br><img src="/assets/2/image-20220515152357-6kac3mb.png" alt="image.png"></p><p>webdriver下载地址<br><a href="http://chromedriver.storage.googleapis.com/index.html">http://chromedriver.storage.googleapis.com/index.html</a></p><p>永久解决办法<br>关闭Chrome版本更新</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、前面也学了很多的selenium元素定位了，相信肯定也是遇到了很多的问题，此处列举出一些，来看看是否有你遇到过的还未解决的吧。&quot;&gt;&lt;a href=&quot;#一、前面也学了很多的selenium元素定位了，相信肯定也是遇到了很多的问题，此处列举出一些，来看看是否有你遇</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="06_自动化" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="02_自动化实操" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/"/>
    
    <category term="01_UI自动化" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01-UI%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="UI自动化测试框架" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01-UI%E8%87%AA%E5%8A%A8%E5%8C%96/UI%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/"/>
    
    <category term="01_selenium" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01-UI%E8%87%AA%E5%8A%A8%E5%8C%96/UI%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/01-selenium/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>selenium-webdriver基础操作二</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06_%E8%87%AA%E5%8A%A8%E5%8C%96/02_%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01_UI%E8%87%AA%E5%8A%A8%E5%8C%96/UI%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/01_selenium/04_selenium-webdriver%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E4%BA%8C/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06_%E8%87%AA%E5%8A%A8%E5%8C%96/02_%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01_UI%E8%87%AA%E5%8A%A8%E5%8C%96/UI%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/01_selenium/04_selenium-webdriver%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E4%BA%8C/</id>
    <published>2022-05-15T07:02:34.152Z</published>
    <updated>2022-05-15T07:15:53.438Z</updated>
    
    <content type="html"><![CDATA[<p>查找页面元素<br>前置条件：①Firefox浏览器 ②例子里的网页为<a href="https://www.baidu.com/">https://www.baidu.com</a></p><p>1.按id属性查找  一般作为查找元素的首选属性  注意特殊情况-动态id</p><pre><code>from selenium import webdriver  # 从selenium库导入网络驱动包from time import sleep          # 从time库导入sleepfrom selenium.webdriver.common.by import By  # 用于对象的定位 browser = webdriver.Firefox()         # 定义一个变量browser，代表浏览器的驱动browser.get(&#39;https://www.baidu.com&#39;)  # 打开浏览器browser.maximize_window()             # 窗口最大化 browser.find_element(By.ID, &#39;kw&#39;).send_keys(&#39;Selenium&#39;)  # 在百度输入栏内输入Seleniumbrowser.find_element(By.ID, &#39;su&#39;).click()                # 点击“百度一下”sleep(2)</code></pre><p>2 class定位 可能重复</p><pre><code>browser.find_element(By.CLASS_NAME, &#39;s_ipt&#39;).send_keys(&#39;Selenium&#39;)browser.find_element(By.CLASS_NAME, &#39;s_btn&#39;).click()sleep(3)</code></pre><p>3 tag定位  极其容易重复</p><pre><code>browser.find_element(By.TAG_NAME, &#39;input&#39;).send_keys(&#39;Selenium&#39;)# 报错：ElementNotInteractableException 元素不可输入异常</code></pre><p>4 name定位 可能重复</p><pre><code>browser.find_element(By.NAME, &#39;wd&#39;).send_keys(&#39;Selenium&#39;)browser.find_element(By.ID, &#39;su&#39;).click()</code></pre><p>5 link精确定位</p><pre><code>browser.find_element(By.LINK_TEXT, &#39;新闻&#39;).click()</code></pre><p>6 link模糊定位</p><pre><code>browser.find_element(By.PARTIAL_LINK_TEXT, &#39;闻&#39;).click()</code></pre><p>7 CSS定位<br>7.1 id定位</p><pre><code>browser.find_element(By.CSS_SELECTOR, &#39;#kw&#39;).send_keys(&#39;Selenium&#39;)</code></pre><p>7.2 tag定位</p><pre><code>browser.find_element(By.CSS_SELECTOR, &#39;input&#39;).send_keys(&#39;Selenium&#39;)</code></pre><p>7.3 class定位</p><pre><code>browser.find_element(By.CSS_SELECTOR, &#39;.s_ipt&#39;).send_keys(&#39;Selenium&#39;)</code></pre><p>7.4 其余属性定位   [属性名&#x3D;’属性值’]</p><pre><code>browser.find_element(By.CSS_SELECTOR, &#39;[name=&quot;wd&quot;]&#39;).send_keys(&#39;Selenium&#39;)browser.find_element(By.CSS_SELECTOR, &#39;[maxlength=&quot;255&quot;]&#39;).send_keys(&#39;Selenium&#39;)</code></pre><p>7.5 父子定位 即层级定位</p><pre><code>browser.find_element(By.CSS_SELECTOR, &#39;span&gt;input&#39;).send_keys(&#39;Selenium&#39;)</code></pre><p>7.6 组合定位 特别不容易定位时才考虑</p><pre><code>browser.find_element(By.CSS_SELECTOR, &#39;span.quickdelete-wrap&gt;input[maxlength=&quot;255&quot;][name=&quot;wd&quot;]&#39;).send_keys(&#39;Selenium&#39;)</code></pre><p>8 XPATH定位</p><pre><code>browser.find_element(By.XPATH, &#39;//*[@id=&quot;kw&quot;]&#39;).send_keys(&#39;Selenium&#39;)</code></pre><p>在每一步骤间最好设定好sleep时间，可以解决响应延迟带来的问题</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;查找页面元素&lt;br&gt;前置条件：①Firefox浏览器 ②例子里的网页为&lt;a href=&quot;https://www.baidu.com/&quot;&gt;https://www.baidu.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1.按id属性查找  一般作为查找元素的首选属性  注意特殊情况-动态i</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="06_自动化" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="02_自动化实操" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/"/>
    
    <category term="01_UI自动化" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01-UI%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="UI自动化测试框架" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01-UI%E8%87%AA%E5%8A%A8%E5%8C%96/UI%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/"/>
    
    <category term="01_selenium" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01-UI%E8%87%AA%E5%8A%A8%E5%8C%96/UI%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/01-selenium/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>selenium-webdriver基础操作一</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06_%E8%87%AA%E5%8A%A8%E5%8C%96/02_%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01_UI%E8%87%AA%E5%8A%A8%E5%8C%96/UI%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/01_selenium/03_selenium-webdriver%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E4%B8%80/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06_%E8%87%AA%E5%8A%A8%E5%8C%96/02_%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01_UI%E8%87%AA%E5%8A%A8%E5%8C%96/UI%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/01_selenium/03_selenium-webdriver%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E4%B8%80/</id>
    <published>2022-05-15T07:02:33.182Z</published>
    <updated>2022-05-15T07:08:22.579Z</updated>
    
    <content type="html"><![CDATA[<p>基于Firefox浏览器的基本操作<br>1.浏览器的导航操作</p><pre><code>from selenium import webdriver        #从selenium库中导入webdriver模块firefox = webdriver.Firefox()         #定义一个firefox变量，用于代指浏览器firefox.get(&quot;https://www.baidu.com&quot;)  #打开浏览器并进入百度网页</code></pre><p>后退、前进、刷新操作对应的代码为：</p><pre><code>driver.back()    #后退driver.forward() #前进driver.refresh() #刷新</code></pre><p>2.浏览器的窗口操作<br>—窗口的位置和大小在一定程度上会影响页面的显示和操作，Selenium提供了一些函数，用于调整浏览器窗口的位置和大小，以及关闭浏览器的窗口等操作。</p><p>窗口最大化、最小化以及关闭操作的代码如下：</p><pre><code>driver.minimize_window()  #最大化窗口driver.minimize_window()  #最小化窗口driver.close()            #关闭窗口</code></pre><pre><code>也可以引入time模块，使用sleep函数在每个操作间休眠，具体示例代码如下：</code></pre><pre><code>from selenium import webdriver        #从selenium库中导入webdriver模块import time                           #引入time模块firefox = webdriver.Firefox()         #定义一个firefox变量，用于代指浏览器firefox.get(&quot;https://www.baidu.com&quot;)  #打开浏览器并进入百度网页firefox.maximize_window()             #最大化窗口time.sleep(3)                         #sleep函数，用于每个操作间休眠3秒firefox.quit()                        #关闭浏览器</code></pre><p>上述代码还可获知，关闭浏览器的代码是.quit()</p><p>3.获取浏览器信息<br>最常用的的获取：</p><pre><code>driver.title         #获取浏览器窗口的当前标题drive.current_url    #获取浏览器窗口的当前网址driver.get_window_position()    #获取位置对象driver.get_window_size()        #获取大小对象driver.get_window_rect()        #获取位置以及大小对象</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;基于Firefox浏览器的基本操作&lt;br&gt;1.浏览器的导航操作&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from selenium import webdriver        #从selenium库中导入webdriver模块
firefox = webdriver.Firefo</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="06_自动化" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="02_自动化实操" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/"/>
    
    <category term="01_UI自动化" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01-UI%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="UI自动化测试框架" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01-UI%E8%87%AA%E5%8A%A8%E5%8C%96/UI%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/"/>
    
    <category term="01_selenium" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01-UI%E8%87%AA%E5%8A%A8%E5%8C%96/UI%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/01-selenium/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>selenium-webdriver基础操作</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06_%E8%87%AA%E5%8A%A8%E5%8C%96/02_%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01_UI%E8%87%AA%E5%8A%A8%E5%8C%96/UI%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/01_selenium/02_selenium-webdriver%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06_%E8%87%AA%E5%8A%A8%E5%8C%96/02_%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01_UI%E8%87%AA%E5%8A%A8%E5%8C%96/UI%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/01_selenium/02_selenium-webdriver%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</id>
    <published>2022-05-15T06:47:30.528Z</published>
    <updated>2022-05-15T07:25:52.407Z</updated>
    
    <content type="html"><![CDATA[<p>这是<strong>Selenium</strong>里面最总要的东西。 <strong>Selenium Webdriver</strong> （也就是 <strong>Selenium2，Selenium3</strong> ）和 <strong>Selenium RC</strong> （ <strong>Selenium 1</strong> ）一样提供了<strong>web</strong>自动化的各种语言调用接口库。相比 <strong>Selenium RC</strong> ，<strong>Selenium WebDriver</strong>的编程接口更加直观易懂，也更加简练。但是和<strong>Selenium RC</strong>不同的是，<strong>Selenium Webdriver</strong>是通过各种浏览器的驱动（ <strong>web driver</strong> ）来驱动浏览器的，而不是通过注入<strong>JavaScript</strong>的方式，下面是其原理的示意图：</p><p><img src="/assets/2/image-20220515145116-jknthhg.png" alt="image.png"></p><p>image.png</p><p>我们的代码运行起来是一个进程，里面调用<strong>Selenium WebDriver</strong>的库 和 各个浏览器的驱动进程 进行交互，传递<strong>Selenium</strong>命令 给它们，并且获取命令执行的结果，返回给我们的代码进行处理。</p><p><strong>Selenium WebDriver</strong>目前包括两个版本<strong>Selenium 2</strong>和 <strong>Selenium 3</strong> 。这两个版本从开发代码调用接口上来看，几乎没什么区别。区别在于库的实现和<strong>web driver</strong>的实现。<strong>Selenium2</strong>是<strong>Selenium</strong>组织帮各种浏览器写<strong>web driver</strong>的，而<strong>Selenium 3</strong>里面的<strong>web driver</strong>是由各个浏览器厂商（ <strong>Apple,Google,Microsoft,Mozilla</strong> ）自己提供的。所以<strong>Selenium 3</strong>的自动化效率更高，成功率也更高。</p><p><strong>Selenium WebDriver</strong> 支持浏览器众多：</p><ul><li><strong>Google Chrome</strong></li><li><strong>Microsoft Internet Explorer 7，8，9，10，11</strong>在 <strong>Windows Vista，Windows 7，Windows 8，Windows 8.1.</strong></li><li>Microsoft Edge</li><li>Firefox</li><li>Safari</li><li>Opera</li></ul><h4 id="3-1安装"><a href="#3-1安装" class="headerlink" title="3.1安装"></a>3.1安装</h4><p><strong>Selenium WebDriver</strong>提供了各种语言的编程接口，来进行<strong>Web</strong>自动化开发。我们以<strong>Python</strong>来讲解它的使用。首先我们要确保<strong>Python</strong>解释器已经安装好了。由于我们习惯在<strong>Windows</strong>操作系统上进行操作，建议大家安装<strong>Python</strong>官方的<strong>Python 3.6</strong></p><ul><li><p>安装编程接口库</p><p><strong>python</strong>安装好后，我们用<strong>Pip</strong>来安装<strong>Selenium Web Driver</strong>的<strong>python</strong>库，执行下面的命令即可。（执行该命令之前，要确保<strong>python</strong>的<strong>script</strong>目录在系统环境变量<strong>path</strong>里面已经包括了）。命令为：<strong>pip install selenium</strong></p></li></ul><p>安装完成后，运行python解释器，执行命令 <strong>import selenium</strong> ，如果没有异常，则表示安装成功了，如下所示</p><p><img src="/assets/2/image-20220515145129-y4ykbjr.png" alt="image.png"></p><p>image.png</p><ul><li><p>安装各浏览器的驱动</p><p>当然我们是通过各浏览器的驱动程序 来操作浏览器的，所以，还要有各浏览器的驱动程序。我们主要以谷歌的<strong>chrome</strong>浏览器为例来演示。</p></li></ul><p><strong>chrom</strong>浏览器的 <strong>web driver</strong> （ <strong>chromedriver.exe</strong> ），可以在下面网址访问：</p><p><a href="https://links.jianshu.com/go?to=http://npm.taobao.org/mirrors/chromedriver/">http://npm.taobao.org/mirrors/chromedriver/</a></p><p> <strong>firefox</strong> （火狐浏览器）的 <strong>web driver （geckodriver.exe）</strong> 在这里访问：</p><p><a href="https://links.jianshu.com/go?to=https://github.com/mozilla/geckodriver/releases">https://github.com/mozilla/geckodriver/releases</a></p><p>其他浏览器驱动可以见下面列表:</p><p> <strong>Edge:</strong> <a href="https://links.jianshu.com/go?to=https://developer.microsoft.com/en-us/micrsosft-edage/tools/webdriver">https://developer.microsoft.com/en-us/micrsosft-edage/tools/webdriver</a></p><p> <strong>Safari:</strong> <a href="https://links.jianshu.com/go?to=https://webkit.org/blog/6900/webdriver-support-in-safari-10/">https://webkit.org/blog/6900/webdriver-support-in-safari-10/</a></p><h4 id="3-2从一个例子开始"><a href="#3-2从一个例子开始" class="headerlink" title="3.2从一个例子开始"></a>3.2从一个例子开始</h4><pre><code>#从selenium里面导入webdriverfrom selenium import webdriver#指定chrom的驱动#执行到这里的时候Selenium会到指定的路径将chrome driver程序运行起来driver = webdriver.Chrome(&#39;E:\ChromDriver\chromedriver.exe&#39;)#driver = webdriver.Firefox()#这里是火狐的浏览器运行方法#get 方法 打开指定网址driver.get(&#39;http://www.baidu.com&#39;)#选择网页元素element_keyword = driver.find_element_by_id(&#39;kw&#39;)#输入字符element_keyword.send_keys(&#39;宋曲&#39;)#找到搜索按钮element_search_button = driver.find_element_by_id(&#39;su&#39;)</code></pre><p>下面是对搜索结果的验证：</p><pre><code>import time#注意这里必须要等待时间，因为代码运行过快，代码运行完的时候页面还没加载出来就会找不到元素time.sleep(2)ret = driver.find_element_by_id(&#39;1&#39;)print(ret.text)if ret.text.startswith(&#39;宋曲&#39;):#是不是已宋曲开头    print(&#39;测试通过&#39;)else:    print(&#39;不通过&#39;)#最后，driver.quit()让浏览器和驱动进程一起退出，不然桌面会有好多窗口driver.quit()</code></pre><p>下面是对代码的详细分析：</p><pre><code>driver = webdriver.Chrome(&#39;E:\ChromDriver\chromedriver.exe&#39;)</code></pre><p>执行到这里的时候<strong>Selenium</strong>会到指定的路径将<strong>chrom driver</strong>程序运行起来，<strong>chrome driver</strong>会将浏览器运行起来。成功后会返回一个<strong>WebDriver</strong>实例对象，通过它的方法，可以控制浏览器，我们可以把它想象成浏览器的遥控器一样。</p><p>浏览器运行起来后，通常第一件事情就是打开网址了。一般我们通过控制对象的<strong>get</strong>方法来控制浏览器打开指定网址</p><pre><code>driver.get(&#39;http://www.baidu.com&#39;)</code></pre><p>这一行执行后，<strong>web</strong>浏览器将会访问<code>http://www.baidu.com</code>这个网址。<strong>Selenium</strong>的官方文档说，不同的<strong>WebDriver</strong>和浏览器行为可能会有所不同。有的浏览器不一定等<strong>web</strong>页面完全加载完成，就返回了。当然通常我们希望的是加载完毕，再返回，不然可能页面上有的元素还没有出现，后续的操作可能有问题。这样还需要加入一些其他的代码等待某个关键的页面元素出现再进行后续操作。个人测试的情况看，<strong>Selenium 3</strong>的<strong>Chrom WebDriver</strong>驱动相应的<strong>chrom</strong>浏览器是会等待页面完全加载完成才返回的。所以我们可以放心。</p><p>接下来我们要查找到那个搜索输入栏网页元素，这里是根据该网页元素的<strong>id</strong>来选择的。</p><pre><code>element_keyword = driver.find_element_by_id(&#39;kw&#39;)</code></pre><p>网页元素的信息可以通过浏览器的<strong>debug</strong>功能来查看。怎么寻找网页元素，可以说是<strong>web</strong>自动化最重要的东西之一。下一节会讲到。</p><p><strong>driver</strong>找到该元素的话，就会返回一个该元素的<strong>WebElement</strong>对象。我们接着就可以对其进行操作了，这个例子里面的操作，就是在这个输入框里面输入字符。</p><pre><code>element_keyword.send_keys(&#39;宋曲&#39;)</code></pre><p>后面就是在进行一次元素的选择和操作，找到搜索按钮，点击它。最后，执行下面的代码让浏览器和驱动进程一起退出</p><pre><code>driver.quit()</code></pre><p>这里大家要注意代码里我们用了 <strong>time</strong> ，<strong>注意这里必须</strong>要等待时间，因为代码运行过快，代码运行完的时候页面还没加载出来就会找不到元素。后面我们会想到更好的解决方法。</p><h4 id="3-3-Web元素选择"><a href="#3-3-Web元素选择" class="headerlink" title="3.3 Web元素选择"></a>3.3 Web元素选择</h4><p>浏览器读入页面文档（html格式）后，通过内置的 <strong>layout engine</strong> （就是页面渲染引擎，也成为浏览器内核，比如 <strong>Webkit、Gecko</strong> ）将整个页面显示出我们看到的样子。我们人在看<strong>web</strong>页面的时候，是用眼睛视觉上<strong>web</strong>页面的元素，比如上面有个输入框。下面有个按钮。可是对浏览器这个程序来说，他会创建一个 <strong>HTML DOM（Document Object Model）</strong> 来理解和操作整个页面结构。这是一个树状的结构，下面是一张示意图：</p><p><strong>DOM</strong>是<strong>W3C</strong>指定的标准，<strong>DOM</strong>是由一个个的 <strong>node</strong> （节点）组成。而 <strong>element</strong> （元素）是最重要的一种 <strong>node</strong> ，他是<strong>html</strong>中一个<strong>tag</strong>里面的内容，比如</p><pre><code>&lt;a href=&quot;www.baidu.com&quot;&gt;My link&lt;/a&gt;</code></pre><p>这个 <strong><a></strong> 就是一个 <strong>element</strong> ，我们中文称之为元素。<strong>HTML DOM</strong>就是一个用来给程序增删改查<strong>HTML</strong>元素的接口。</p><p>所以，我们在程序中选择元素，就是在网页的<strong>DOM</strong>结构里选择元素。就像上面说的，<strong>web</strong>元素的选择，是<strong>Selenium</strong>开发的重中之重。因为，我们首先必须要找到<strong>web</strong>元素，才能对其进行操作。<strong>web</strong>元素的选择，在<strong>Selenium</strong>可以通过<strong>WebDriver</strong>对象，也可以通过<strong>WebElement</strong>对象选择，它们都有成员 方法来进行选择。通过<strong>WebDriver</strong>对象选择，查找范围是 <strong>整个html文档</strong> 。而通过WebElement对象选择，查找范围是整个该对象的子元素，<strong>web</strong>元素的选择，有好几种方式。下面会一一讲述。</p><h4 id="3-3-1通过id选择属性"><a href="#3-3-1通过id选择属性" class="headerlink" title="3.3.1通过id选择属性"></a>3.3.1通过id选择属性</h4><p><strong>web</strong>元素可以有很多属性（ <strong>attribute</strong> ）</p><blockquote><p>&lt;input <strong>id&#x3D;”kw” name&#x3D;”wd” class&#x3D;”s_ipt” value&#x3D;”” maxlength&#x3D;”255” autocomplete&#x3D;”off”&gt;</strong></p></blockquote><p>上面元素的属性被用黑体显示了。这些属性中，id是非常特殊的一个，它是在<strong>DOM</strong>中唯一标志这个元素的。所以，如果<strong>web</strong>元素有<strong>id</strong>属性的话，是最好查找的，也是效率最高的，通过<strong>id</strong>就唯一的找到了它。</p><p>要找到该元素，可以用下面的方法</p><pre><code>element = driver.find_element_by_id(&quot;kw&quot;)</code></pre><p>或者换一种写法，导入Selenium by这个类，效果是一样的，个人更喜欢上面的方法</p><pre><code>from selenium.webdriver.common.by import Byelement = driver.find_element(by=By.ID, value=&quot;kw&quot;)</code></pre><p>都是可以的，大家以后看到别人的代码这样写，不要感到吃惊</p><p> <strong>注</strong> ：<strong>id</strong>其实还有重复的，虽然我们讲<strong>id</strong>不应该重复</p><p>的，但是有的人可能写错了，如果有重复的假如说你要查个某个<strong>id</strong>通过<strong>Webdriver</strong>对象查找，他查找的是整个页面查找的是第一个符合条件的，他可能不是你想要的，你可以先通过先缩小查找范围，先查找他的父节点 <strong>id</strong> ，再通过父节点<strong>id</strong>再去<strong>find_element_by_id</strong>这样就限制他的范围了，这是一种常用的方法。</p><p>没有找到会抛出如下异常</p><pre><code>selenium.common.exceptions.NoSuchElementException</code></pre><p>如果抛出异常，后面的程序就执行不到了，假如</p><p>你不希望由于某一个异常导致程序结束的话，我们可以加一个异常的捕获</p><pre><code>from selenium.common.exceptions import NoSuchElementExceptiontry:    ele = driver.find_element_by_id(&quot;food333&quot;)except NoSuchElementException:    print(&#39;NoSuchElementException&#39;)</code></pre><h4 id="3-3-2获取元素-inner-Text"><a href="#3-3-2获取元素-inner-Text" class="headerlink" title="3.3.2获取元素 inner Text"></a>3.3.2获取元素 inner Text</h4><p><strong>innerText</strong> 是 <strong>DOM</strong>节点的属性，它代表了 <strong>node</strong> 节点（通常是元素）可以显示出来的文本内容。通俗点说，就是我们能在界面上看到的文本内容，比如按钮上的问题、输入框里面的内容、 <strong><p></strong> 元素的内容、链接的文本内容，等等。可想而知，这是我们经常需要获取的东西。<strong>Selenium</strong> 通过 <strong>Webdriver</strong> 的 <strong>text</strong>属性来获取其内容。下面的代码将当前页面上的 <strong>id</strong> 为 <strong>1</strong> 的元素的可见文本打印出来。代码实例如下</p><ul><li><p><strong>text</strong>属性 显示该元素在<strong>web</strong>页面显示出来的文本内容。</p><pre><code>ret = driver.find_element_by_id(&#39;1&#39;)print(ret.text)</code></pre></li><li><p>我们有的时候，希望获取的不是某个元素的页面展示部分，而是它的一个属性的值， 这时候，我们可以通过一个方法<strong>get_attribute</strong>方法，这个方法就是返回元素的某个属性的值。看下面示例：</p></li></ul><blockquote><p>&lt;a href&#x3D;”<a href="https://links.jianshu.com/go?to=http://www.baidu.com">http://www.baidu.com</a>“ id&#x3D;”baidulink&gt;转到百度</a></p></blockquote><p>下面的代码就是获取<strong>href</strong>属性的值，就获取到了链接</p><pre><code>ele = driver.find_element_by_id(&quot;baidulink&quot;)print (ele.get_attribute(&#39;href&#39;))</code></pre><ul><li><p>有的时候，我们需要完整的获取这个元素对应的<strong>html</strong>进行分析，比如</p><p>我们还是通过<strong>get_attribute</strong>方法，只需要参数指定为<strong>outerHTML</strong>就可以了。</p><pre><code>ele = driver.find_element_by_id(&quot;baidulink&quot;)print (ele.get_attribute(&#39;outerHTML &#39;))</code></pre></li></ul><p>上面代码输出的结果就是：</p><pre><code>&lt;a href=&quot;http://www.baidu.com&quot; id=&quot;baidulink&gt;转到百度&lt;/a&gt;</code></pre><ul><li><p>如果我们只想获取 该元素的内部的<strong>html</strong>源代码，我们还是通过<strong>get_attribute</strong>方法， 只需要参数指定为<strong>innerHTML</strong>就可以了。</p><pre><code>ele = driver.find_element_by_id(&quot;baidulink&quot;)print (ele.get_attribute(&#39;innerHTML&#39;))</code></pre></li></ul><p>上面代码输出结果就是：</p><pre><code>转到百度</code></pre><p>有如下一段<strong>html</strong></p><pre><code>div id=&quot;food&quot; style=&quot;margin-top:10px;color:red&quot;&gt;    &lt;span calss=&quot;vegetable good&quot;&gt;黄瓜&lt;/span&gt;    &lt;span calss=&quot;meat&quot;&gt;牛肉&lt;/span&gt;    &lt;p calss=&quot;vegetable&quot;&gt;南瓜&lt;/p&gt;    &lt;p calss=&quot;vegetable&quot;&gt;青菜&lt;/p&gt;</code></pre><p>用attribute(‘innerHTML’)方法获取该元素的内部的html源代码效果如下:</p><pre><code>ele = driver.find_element_by_id(&quot;food&quot;)print (ele.get_attribute(&#39;innerHTML&#39;))</code></pre><p>上面代码输出结果就是：</p><pre><code>    &lt;span calss=&quot;vegetable good&quot;&gt;黄瓜&lt;/span&gt;    &lt;span calss=&quot;meat&quot;&gt;黄瓜&lt;/span&gt;    &lt;p calss=&quot;vegetable&quot;&gt;南瓜&lt;/p&gt;    &lt;p calss=&quot;vegetable&quot;&gt;青菜&lt;/p&gt;</code></pre><p>就是这个元素的内部的内容，不包括它本身的这段。</p><p>各位可能会疑惑我们获取这些东西干嘛？我们为什么要或整个<strong>html</strong>呢，因为有的时候我们开发自动化程序的时候，比如测试不通过，某个点不通过，这个时候想把比如说选择元素没选择到，或者元素的内容和预期的内容不一样，这个时候需要判断分析定位，这个时候把它放在自动化用例里面，就可以把他整个<strong>html</strong>信息弄回来，把它打印到日志里面，方便自动化用例执行完了用来分析和判断，用来定位问题的一种手段。</p><p>还有一种场景有时候你去选择一个元素的时候根据常规手段，无法去获取选择内容了比如看下面的例子。</p><pre><code>div id=&quot;food&quot; style=&quot;margin-top:10px;color:red&quot;&gt;    &lt;span calss=&quot;vegetable good&quot;&gt;黄瓜&lt;/span&gt;    &lt;span calss=&quot;meat&quot;&gt;牛肉&lt;/span&gt;    &lt;p calss=&quot;vegetable&quot;&gt;南瓜&lt;/p&gt;    &lt;p calss=&quot;vegetable&quot;&gt;青菜&lt;/p&gt;</code></pre><p>假如我要获取牛肉他的<strong>class</strong>属性是否是 <strong>meat</strong> ，我们后面学到的选择元素方法是很简单获取到的，假如根据现在的知识点，只有父元素有<strong>id</strong>他本身没有<strong>id</strong>的，根据当前的知识点获取不到他，那怎么办呢？我们可以把有<strong>id</strong>的父元素整个<strong>HTML</strong>拿回来，通过 <strong>get_arrtibute(innerHTML)</strong> 方法拿回来，然后通过 <strong>split()</strong> 切割字符串的方法得到。</p><p>代码如下：</p><pre><code>#找到id为food的元素ele = driver.find_element_by_id(&#39;food&#39;)#通过get_attribute(&#39;innerHTML&#39;)方法拿到内部元素foodText = ele.get_attribute(&#39;innerHTML&#39;)#通过split()方法得到数据ret1 = foodText.split(&#39;&lt;/span&gt;)[1]ret2 = ret1.split(&#39;&quot;&#39;)[1]</code></pre><p>通过这样一个方法，我们就得到了<strong>meat</strong>上面这种方法当然可以达到目的，但是比较丑陋代码多了一点让人费解，更重要的是不够健壮，比如属性值可以用单引号也可以用双引号，如果开发下次改代码改成了单引号，我们的代码就没用了。</p><p>我们怎么样让程序更健壮一点呢，不需要那么麻烦使用字符串分割，我们可以使用另外一种方法<strong>BeautifulSoup4</strong>这个库。</p><h4 id="3-3-3-BeautifulSoup4的介绍与安装"><a href="#3-3-3-BeautifulSoup4的介绍与安装" class="headerlink" title="3.3.3 BeautifulSoup4的介绍与安装"></a>3.3.3 BeautifulSoup4的介绍与安装</h4><p><strong>BS</strong>是可以从<strong>HTML</strong>或<strong>XMl</strong>文件中提取数据的库,他就是一个让你来<strong>HTML</strong>的工具，他可以把信息提取出来，不需要用字符串切割这种方法<strong>Selenium</strong>可以 用来远程获取数据。有的时候，感觉用<strong>Selenium</strong>获取某些元素数据不太方便</p><p>我们可以将它 和 <strong>Selenium</strong>两种技术融合使用达到我们的目的。</p><p><strong>beautifulSoup4</strong> 和** Selenium <strong>的关系：直接的讲他们 两者没有直接关系，</strong> beautifulSoup4** 是<strong>python</strong>程序直接对一个字符串进行分析的，这个字符串要符合<strong>HTML</strong>或<strong>XMl</strong>的格式，他是专门用来处理<strong>HTML</strong>或<strong>XMl</strong>格式的字符串的，他和<strong>selenium</strong>自动化没有直接的关系。他是<strong>python</strong>语言独有的</p><p><strong>beautifulSoup4</strong> 中文文档大家可以看一下：</p><p><a href="https://links.jianshu.com/go?to=https://www.crummy.com/software/BeautifulSoup/bs4/doc.zh/">https://www.crummy.com/software/BeautifulSoup/bs4/doc.zh/</a></p><ul><li><p>安装编程接口库</p><p>我们用<strong>Pip</strong>来安装<strong>BeautifulSoup4</strong>这个库，执行下面的命令即可。（执行该命令之前，要确保<strong>python</strong>的<strong>script</strong>目录在系统环境变量<strong>path</strong>里面已经包括了）。命令为：<strong>pip install beautifulsoup4</strong></p></li></ul><p>安装好<strong>beautifulsoup</strong>之后强烈要求大家安装<strong>html5lib</strong> 这个库，如果大家要进行<strong>HTML</strong>分析的话，因为<strong>beautifulsoup4</strong>内置分析<strong>HTML</strong>他对<strong>HTML</strong>语法兼容性不够好，指定用<strong>html5lib</strong>来分析，<strong>html5lib</strong>库对<strong>HTML</strong>兼容性比较好，这个库对<strong>html</strong>的兼容性基本和浏览器差不多。</p><ul><li><p>安装<strong>html5lib</strong></p><p><strong>pip install html5lib</strong></p></li></ul><h4 id="3-3-4-BeautifulSoup4的使用"><a href="#3-3-4-BeautifulSoup4的使用" class="headerlink" title="3.3.4 BeautifulSoup4的使用"></a>3.3.4 BeautifulSoup4的使用</h4><p>现在我们根据一个例子来讲解如何使用 <strong>bs</strong> ，本地有一个<strong>html</strong>文档，注意他只是本地的一个磁盘文件和Selenium没有关系，如下</p><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;三兄弟的故事&lt;/title&gt;    &lt;title&gt;三兄弟的故事23454554545&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    &lt;p class=&quot;title tile2&quot; style=&quot;color:red&quot;&gt;&lt;b&gt;三兄弟的故事&lt;/b&gt;&lt;/p&gt;    &lt;p class=&quot;story&quot;&gt;从前有三个兄弟，他们的名字是    &lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;张三&lt;/a&gt;,    &lt;a href=&quot;http://example.com/lacie&quot; class=&quot;sister&quot; id=&quot;link2&quot;&gt;李四&lt;/a&gt; 和    &lt;a href=&quot;http://example.com/tillie&quot; class=&quot;sister&quot; id=&quot;link3&quot;&gt;王二&lt;/a&gt;;    他们都住在一口井里.&lt;/p&gt;    &lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;    &lt;div id=&quot;d1&quot;&gt;        &lt;a href=&quot;http://baidu.com/tillie&quot; class=&quot;sister&quot; &gt;百度&lt;/a&gt;    &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>下面是使用<strong>BeautifulSoup</strong>库处理<strong>HTML</strong>字符串</p><pre><code>with open(&#39;bs1.html&#39;,encoding=&#39;utf8&#39;) as f:    html_doc = f.read()#从bs4这个库导入BeautifulSoup对象from bs4 import BeautifulSoup#指定用html5lib来解析文档soup = BeautifulSoup(html_doc,&#39;html5lib&#39;)</code></pre><p>下面我们从<strong>html</strong>文档获取我们想要获取的信息，比如说获取一个标签名为<strong>title</strong>的元素，怎么做呢？看示例</p><pre><code># 查找 标签名为title的第一个元素 ，# 返回一个 &lt;class &#39;bs4.element.Tag&#39;&gt; 实例print(soup.find(&#39;title&#39;))</code></pre><p><strong>find</strong>就是找，这里我们找到的是标签名为<strong>title</strong>的元素.</p><pre><code>&lt;titile&gt;三兄弟的故事&lt;/title&gt;</code></pre><p>大家看我上面<strong>HTML</strong>的截图，里面有两个元素标签名为 <strong>title</strong> ，他找的是第一个，这里代码运行会很快因为我们是本地运行，不需要和浏览器交互和<strong>Selenium</strong>没关系，假如我们想要获取<strong>title</strong>的内容进行分析的话该怎么办？</p><p>可以用<strong>string</strong>方法</p><pre><code>#.string就是获取内部的内容print(soup.find(title).string)#也可以这样写print(soup.title.string)</code></pre><p>也可以用<strong>get</strong></p><pre><code>print(soup.find(title).get_text())#也可以这样写print(soup.title.get_text())</code></pre><p>输出结果为:</p><pre><code>三兄弟的故事</code></pre><p>这两种方法是有区别的，建议大家使用get_text()方法，下面给大家举个例子，看下面的<strong>html</strong></p><pre><code>&lt;div id=&quot;dl&quot;&gt;    &lt;a herf=&quot;http://baidu.com/tillie&quot; class=&quot;sister&quot;&gt;百度&lt;/a&gt;&gt;&lt;div&gt;   </code></pre><p>如果想要获取<strong>div</strong>元素里面的文本内容，百度并不是直接内容，是他子节点的内容，这个时候就用 <strong>get_text()</strong> 才能获取到“百度”，如果用**.string<strong>的话会打印出 <strong>“None”</strong> ，</strong>None<strong>就是没有因为</strong>string<strong>优先显示</strong>div**元素的直接文本，但是这里面的文本是他子元素的文本，所以建议大家优先使用 <strong>get_text()</strong> 。</p><p>目前我们只简单介绍了<strong>BeautifulSoup</strong>如果获取文本，这还没有什么神奇的，我们还可以进行更为复杂的分析，比如我们想获取其中某一个属性的值，我们要获取第一个<strong>a</strong>的<strong>class</strong>属性值</p><pre><code>&lt;body&gt;    &lt;p class=&quot;title tile2&quot; style=&quot;color:red&quot;&gt;&lt;b&gt;三兄弟的故事&lt;/b&gt;&lt;/p&gt;    &lt;p class=&quot;story&quot;&gt;从前有三个兄弟，他们的名字是    &lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;张三&lt;/a&gt;,    &lt;a href=&quot;http://example.com/lacie&quot; class=&quot;sister&quot; id=&quot;link2&quot;&gt;李四&lt;/a&gt; 和    &lt;a href=&quot;http://example.com/tillie&quot; class=&quot;sister&quot; id=&quot;link3&quot;&gt;王二&lt;/a&gt;;    他们都住在一口井里.&lt;/p&gt;</code></pre><p>那我们该怎么写呢？</p><pre><code>#第一种方法print(soup.find(&#39;a&#39;)[&#39;class&#39;])#第二种方法print(soup.a[&#39;calss&#39;])</code></pre><p>就获取到了第一个<strong>a</strong>的<strong>class</strong>属性的值，这样我们就可以获取属性的值了，讲到这里大家发现我们都是找第一个元素，如果我想找第三个第四个怎么办?<strong>find</strong>还有一个方法叫 <strong>find_all</strong> ，那我们要找到所有的a该怎么写呢？？</p><pre><code>print(soup.find_all(&#39;a&#39;))</code></pre><p>这个时候打印出来的是一个列表，就全找到了</p><pre><code>[&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;张三&lt;/a&gt;, &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;李四&lt;/a&gt;,  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;王二&lt;/a&gt;, &lt;a class=&quot;sister&quot; href=&quot;http://baidu.com/tillie&quot;&gt;百度&lt;/a&gt;, &lt;a class=&quot;sister&quot; herf=&quot;http://baidu.com/tillie&quot;&gt;百度&lt;/a&gt;]</code></pre><p>我们想找第二个怎么办，直接用<strong>python</strong>的知识下标。</p><pre><code>print(soup.find_all(&#39;a&#39;))[1]</code></pre><p>就找到李四了，这种方法有时候比较麻烦，有的时候网页很大很大，比如有上百个 <strong>a</strong> ，你要找第几个你也不知道，一个个数肯定不现实，那怎么办？还一种方法根本不需要<strong>find_all</strong>把所有的都找出来再通过下标去找，可以通过其他的属性还限定他，假如说我们要找第二个 <strong>a</strong> ，发现他有id这个时候我们可以通过id属性来找。</p><pre><code>print(soup.find(&#39;a&#39;，id=&#39;link2&#39;))</code></pre><p>通过上面的代码就可以直接找到他，不一定要用<strong>id</strong>属性，任何属性都可以</p><p>这里就可以发现<strong>BeautifulSoup</strong>可以进行数据的提取，我们甚至可以用多个条件进行提取。</p><pre><code>print(soup.find(&#39;a&#39;，id=&#39;link2&#39;,herf=&#39;http://exaple.com/lacie&#39;))</code></pre><p>大家还记得上面我们想获取牛肉的<strong>calss</strong>属性是否是 <strong>meat</strong> ，当时我们用<strong>python</strong>字符串切割的方法得到的，我们可以通过<strong>BeautifulSoup</strong>直接获取啦！</p><pre><code>ele = driver.find_element_by_id(&#39;food&#39;)html= ele.get_Attribute(&#39;innerHTML)print(html)from bs4 import BeautifulSoupsoup = BeautifulSoup(html,&#39;html5lib&#39;)target = soup.find_all(&#39;span&#39;)[1][&#39;class&#39;]#列表print(taget)</code></pre><p>这种写法更稳定可靠，写法有很多种下面再介绍一种写法,目的就是判断值是不是 <strong>meat</strong> ，我们直接根据<strong>class</strong>属性去找，如果我们根据<strong>class</strong>等于<strong>meat</strong>能找到说明也有。</p><pre><code>from bs4 import BeautifulSoup soup = BeautifulSoup(html,&#39;html5lib&#39;)target = soup.find(&#39;span&#39;,&#123;&#39;class&#39;:&#39;meat&#39;&#125;)if target：  print(&#39;是meat&#39;)print(taget)</code></pre><p>注意这里不能直接这样写 <strong>find(‘span’,class&#x3D;’meat’)，</strong> 因为<strong>class</strong>是我们定义类的关键字</p><h4 id="3-3-5-查看元素的属性"><a href="#3-3-5-查看元素的属性" class="headerlink" title="3.3.5 查看元素的属性"></a>3.3.5 查看元素的属性</h4><p>上面讲了可以根据<strong>id</strong>来查找元素，可是，面对一个别人开发的网页，我们怎么知道元素的属性值呢？现在，基本上每款浏览器都会内置开发者工具（通常是在浏览器窗口下按<strong>F12</strong>按键打开），我们可以利用浏览器的开发者工具来查看。在<strong>chrom</strong>浏览器里，按 <strong>F12</strong> ，打开开发工具窗口，<strong>chrom</strong>界面如下所示：</p><p><img src="/assets/2/image-20220515145819-e706oly.png" alt="image.png"></p><p>image.png</p><p>其中右边红框里面的窗口就是开发者工具窗口。它的功能非常强大，<strong>web</strong>前端开发人员经常用来调试前端代码。我们这里先使用它来查看<strong>web</strong>元素的属性信息。工具栏的上边最左边的箭头，就是用来选择界面元素，并且查看其信息用的。我们点击这个箭头，再异动鼠标到左边的页面上，点击一下搜索输入框，结果右边的开发工具窗口内容如下：</p><p><img src="/assets/2/image-20220515145828-29kjp8a.png" alt="image.png"></p><p>image.png</p><p>大家请注意红圈里面的内容，这里就是该输入框的<strong>html</strong>代码内容，里面的属性有<strong>id，name，class</strong>等。这样我们就可以知道该元素的信息了。这是<strong>Chrom</strong>浏览器的用法。事实上，其他浏览器基本也大同小异。大家可以自己尝试一下</p><h4 id="3-3-6-通过name属性选择"><a href="#3-3-6-通过name属性选择" class="headerlink" title="3.3.6 通过name属性选择"></a>3.3.6 通过name属性选择</h4><p><strong>name</strong>也是<strong>html</strong>标准属性之一，假设要选择的元素具有该属性的话，也可以通过它来进行选择。假设<strong>html</strong>中有如下元素：</p><pre><code>&lt;input name=&quot;cheese&quot; type=&quot;text&quot;/&gt;</code></pre><p>要找到该元素，可以用下面的方法:</p><pre><code>cheese = driver.find_element_by_name(&quot;cheese&quot;)</code></pre><p>或者：</p><pre><code>from selenium.webdriver.common.by import Bycheese = driver.find_element(By.NAME, &quot;cheese&quot;)</code></pre><p>要注意的是，和<strong>id</strong>不同，<strong>name</strong>不一定是唯一的（当然通常是唯一的）。</p><p>当指定选择的名字，在网页中有多个元素都具有时，返回的是第一个找到的元素。</p><p>如果我们要找出所有具有该名字的元素可以这样，代码如下：</p><pre><code>cheeses = driver.find_elements_by_name(&quot;cheese&quot;)</code></pre><p>或者：</p><pre><code>from selenium.webdriver.common.by import Bycheeses = driver.find_elements(By.NAME,&quot;cheese&quot;)</code></pre><p>这时，返回的是一个 <strong>python list</strong> ，里面包含了所有找到的<strong>WebElement</strong>对象,如果找不到，返回空列表，不抛出异常。</p><h4 id="3-3-7-通过class选择元素"><a href="#3-3-7-通过class选择元素" class="headerlink" title="3.3.7 通过class选择元素"></a>3.3.7 通过class选择元素</h4><p><strong>class</strong>也是html标准属性之一，假设要选择的元素具有该属性的话，也可以通过它来进行查找。但是通常具有相同<strong>class</strong> 属性值的元素很多，我们往往调用选择多个元素的方法，而不是选择一个元素。假设<strong>html</strong>中有如下片段：</p><pre><code>&lt;div class=&quot;cheese&quot;&gt;&lt;span&gt;Cheddar&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;cheese&quot;&gt;&lt;span&gt;Gouda&lt;/span&gt;&lt;/div&gt;</code></pre><p>要找到该元素，可以用下面的方法:</p><pre><code>cheeses = driver.find_elements_by_class_name(&quot;cheese&quot;)</code></pre><p>或者：</p><pre><code>from selenium.webdriver.common.by import Bycheeses = driver.find_elements(By.CLASS_NAME, &quot;cheese&quot;)</code></pre><p>这时，返回的是一个python list，里面包含了所有找到的WebElement对象。</p><p>注意：通过elements这个返回的就不是一个webelement对象了，他是所有的符合条件的wedelement对象，既然是所有的返回的时候放在一个列表里面，所以他的返回值就是列表，这个时候我们就不能用这种写法了</p><pre><code>eles = find_elements_by_name(&#39;button&#39;)print(eles.get_attribute(&#39;outerHTMl&#39;))</code></pre><p>上面这种写法是不对的，因为eles是个列表，列表并没有get_attribute()方法，这个方法只有webelement对象才有的，只有列表里的每一个元素才有的，那我们该怎么写呢？</p><pre><code>eles = find_elements_by_name(&#39;button&#39;)for ele in eles:  print(ele.get_attribute(&#39;outerHTMl&#39;))</code></pre><p>这样就可以了，通过for循环去遍历class同理</p><h4 id="3-3-8通过-tag-名称选择"><a href="#3-3-8通过-tag-名称选择" class="headerlink" title="3.3.8通过 tag 名称选择"></a>3.3.8通过 tag 名称选择</h4><p>有的时候，有的上述的定位方式都不能定位到，比如 一个元素没有 <strong>id</strong> ，没有 <strong>class</strong> 、 <strong>name</strong> 。 但是它的<strong>tag</strong>名却是唯一的。可以根据<strong>tag</strong>名定位</p><p>假设<strong>html</strong>中有如下片段:</p><pre><code>&lt;iframe src=&quot;...&quot;&gt;&lt;/iframe&gt;</code></pre><p>如果<strong>iframe</strong>这个tag在本html中是唯一的，可以根据<strong>iframe</strong>这个<strong>tag</strong>名来找到该元素:</p><pre><code>frame = driver.find_element_by_tag_name(&quot;iframe&quot;)</code></pre><p>或者：</p><pre><code>from selenium.webdriver.common.by import Byframe = driver.find_element(By.TAG_NAME, &quot;iframe&quot;)</code></pre><h4 id="3-3-9-通过链接文本选择"><a href="#3-3-9-通过链接文本选择" class="headerlink" title="3.3.9 通过链接文本选择"></a>3.3.9 通过链接文本选择</h4><p><strong>web</strong>自动化的时候，经常会自动化点击某个链接，对于链接，可以通过其链接文本的内容或者部分内容进行选择。假设html中有如下片段：</p><pre><code>&lt;a href=&quot;http://www.baidu.com&quot;&gt;转到百度&lt;/a&gt;</code></pre><p>可以这样选择:</p><pre><code>ele = driver.find_element_by_link_text(&quot;转到百度&quot;)</code></pre><p>或者：</p><pre><code>from selenium.webdriver.common.by import Byele = driver.find_element(By.LINK_TEXT, &quot;转到百度&quot;)</code></pre><p>有的时候，链接的文本很长，我们甚至只需要通过部分文本去找到该链接元素只要这个链接文本是唯一的就行，可以这样选择。</p><pre><code>ele = driver.find_element_by_partial_link_text(&quot;百度&quot;)</code></pre><p>或者：</p><pre><code>from selenium.webdriver.common.by import Byele = driver.find_element(By.PARTIAL_LINK_TEXT, &quot;百度&quot;)</code></pre><hr><h4 id="下面是小练习，自己练习玩的"><a href="#下面是小练习，自己练习玩的" class="headerlink" title="下面是小练习，自己练习玩的"></a>下面是小练习，自己练习玩的</h4><p><strong>Selenium 练习1</strong></p><p>1.访问天气查询网站（网址如下），查询江苏省天气</p><p><a href="https://links.jianshu.com/go?to=http://www.weather.com.cn/html/province/jiangsu.shtml">http://www.weather.com.cn/html/province/jiangsu.shtml</a></p><p>获取江苏所有城市的天气，并找出其中每天最低气温最低的城市，显示出来，比如</p><p>温度最低为12℃, 城市有连云港 盐城</p><p> <strong>方法1：</strong> 取回 整个 <strong>html</strong> 代码片段， 用<strong>python</strong>语言， 直接分析</p><pre><code>from selenium import webdriverdriver = webdriver.Chrome(r&quot;d:\tools\webdrivers\chromedriver.exe&quot;)# ------------------------driver.get(&#39;http://www.weather.com.cn/html/province/jiangsu.shtml&#39;)ele = driver.find_element_by_id(&quot;forecastID&quot;)print(ele.text)citysWeather = ele.text.split(&#39;℃\n&#39;)# 这样：citysWeather是每个城市的温度信息 list## 每个元素像这样：# 南京# 12℃/27#下面就是算法，算出温度最低城市，# 有很多方法，大家看看这种# 我们循环 去遍历这个城市文档信息列表，# 得到城市名和 低气温的值，## 依次和取出当前的所有城市最低气温比较，# 如果更低，就记录到当前的低温城市列表中。lowest = None  #  记录目前最低温，先设置为NonelowestCitys = []  # 温度最低城市列表for one in citysWeather:    one = one.replace(&#39;℃&#39;,&#39;&#39;)    print(one)    parts = one.split(&#39;\n&#39;)    curcity = parts[0]    lowweather = min([int(one)  for one in parts[1].split(&#39;/&#39;)])    # 还没有最低温记录，或者发现气温更低的城市    # 注意 条件不能写反    if lowest==None or lowweather&lt;lowest:        lowest = lowweather        lowestCity = [curcity]    #  温度和当前最低相同，加入列表    elif lowweather ==lowest:        lowestCity.append(curcity)print(&#39;温度最低为%s℃, 城市有%s&#39; % (lowest, &#39; &#39;.join(lowestCity)))# ------------------------driver.quit()</code></pre><p> <strong>方法2：</strong> 用 <strong>selenium</strong> 直接的获取我们要的数据，我们分析一下 <strong>html</strong> ，看看能否精确的直接获取每个城市的名字和温度，发现每个城市的信息都在<strong>dl</strong>里面。</p><pre><code>driver.get(&#39;http://www.weather.com.cn/html/province/jiangsu.shtml&#39;)ele = driver.find_element_by_id(&quot;forecastID&quot;)print(ele.text)# 再从 forecastID 元素获取所有子元素dldls = ele.find_elements_by_tag_name(&#39;dl&#39;)# 将城市和气温信息保存到列表citys中citys = []for dl in dls:    # print dl.get_attribute(&#39;innerHTML&#39;)    name = dl.find_element_by_tag_name(&#39;dt&#39;).text    # 最高最低气温位置会变，根据位置决定是span还是b    ltemp = dl.find_element_by_tag_name(&#39;span&#39;).text    ltemp = int(ltemp.replace(&#39;℃&#39;,&#39;&#39;))    print(name, ltemp)    citys.append([name, ltemp])</code></pre><p>既然每个城市的名字和温度都有了， 下面的做法就和前面差不多</p><pre><code>lowest = NonelowestCitys = []  # 温度最低城市列表for one in citys:    curcity = one[0]    ltemp = one[1]    # 发现气温更低的城市    if lowest==None or ltemp&lt;lowest:        lowest = ltemp        lowestCitys = [curcity]    #  温度和当前最低相同，加入列表    elif ltemp ==lowest:        lowestCitys.append(curcity)print(&#39;温度最低为%s℃, 城市有%s&#39; % (lowest, &#39; &#39;.join(lowestCitys)))</code></pre><p> <strong>方法3:</strong> 取回 整个<strong>html</strong>代码片段， 用<strong>beatifulsoup</strong> 分析大体思路和方法二 一样， 唯一的区别在于，我们不是用<strong>selenium</strong>获取每个城市温度对应的<strong>web</strong>元素信息而是用<strong>BS</strong>本地操作。</p><pre><code>driver.get(&#39;http://www.weather.com.cn/html/province/jiangsu.shtml&#39;)ele = driver.find_element_by_id(&quot;forecastID&quot;)print(ele.text)# -----------------------------------# 再从 forecastID 元素获取所有子元素dlhtml_doc = ele.get_attribute(&#39;innerHTML&#39;)from bs4 import BeautifulSoupsoup = BeautifulSoup(html_doc, &quot;html5lib&quot;)# 发现每个城市的信息都在dl里面dls = soup.find_all(&#39;dl&#39;)# 将城市和气温信息保存到列表citys中citys = []for dl in dls:     name = dl.a.stringltemp = dl.b.stringltemp = int(ltemp.replace(&#39;℃&#39;,&#39;&#39;))    print(name, ltemp)    citys.append([name,ltemp])</code></pre><p>后面的代码一模一样，直接拷贝即可</p><pre><code>lowest = NonelowestCitys = []  # 温度最低城市列表for one in citys:    curcity = one[0]    ltemp = one[1]    # 发现气温更低的城市    if lowest==None or ltemp&lt;lowest:        lowest = ltemp        lowestCitys = [curcity]    #  温度和当前最低相同，加入列表    elif ltemp ==lowest:        lowestCitys.append(curcity)</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这是&lt;strong&gt;Selenium&lt;/strong&gt;里面最总要的东西。 &lt;strong&gt;Selenium Webdriver&lt;/strong&gt; （也就是 &lt;strong&gt;Selenium2，Selenium3&lt;/strong&gt; ）和 &lt;strong&gt;Selenium RC</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="06_自动化" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="02_自动化实操" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/"/>
    
    <category term="01_UI自动化" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01-UI%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="UI自动化测试框架" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01-UI%E8%87%AA%E5%8A%A8%E5%8C%96/UI%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/"/>
    
    <category term="01_selenium" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01-UI%E8%87%AA%E5%8A%A8%E5%8C%96/UI%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/01-selenium/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>UI自动化理论</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06_%E8%87%AA%E5%8A%A8%E5%8C%96/02_%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01_UI%E8%87%AA%E5%8A%A8%E5%8C%96/01_UI%E8%87%AA%E5%8A%A8%E5%8C%96%E7%90%86%E8%AE%BA/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06_%E8%87%AA%E5%8A%A8%E5%8C%96/02_%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01_UI%E8%87%AA%E5%8A%A8%E5%8C%96/01_UI%E8%87%AA%E5%8A%A8%E5%8C%96%E7%90%86%E8%AE%BA/</id>
    <published>2022-05-15T03:46:45.547Z</published>
    <updated>2022-05-15T06:27:30.824Z</updated>
    
    <content type="html"><![CDATA[<p>一、原理<br>1、什么是UI自动化测试<br>使用工具或者脚本对需要测试的软件的前端界面在预设的条件下和已经的测试数据下运行系统或者应用程序，并获取其前端页面显示的数据结果进行校验，评估得出测试结论。</p><p>2、UI自动化测试可用于哪里<br>基于测试渠道可分为：手机App、Pc web端、手机Web端等；</p><p>基于测试阶段可分为：冒烟测试、回归测试、生产验收、兼容性测试</p><p>3、为什么要使用UI自动化测试<br>（1）目前测试案例数量过多导致人工执行测试案例耗时过长，并且会出现无法执行完该执行的测试案例导致版本无法按预期上线；</p><p>（2）案例的步骤繁琐，场景复杂，制作测试数据的过程复杂，导致人工执行时间过长；</p><p>（3）需求简单，无前端功能开发的需求可以使用UI自动化进行测试并得出结论；</p><p>（4）可以帮助开发人员进行自测。</p><p>4、哪些测试可以执行UI自动化<br>（1）已经比较成熟的项目，暂无任何大的改动需求的项目；</p><p>（2）人工执行耗时长，流程繁琐的项目；</p><p>（3）单纯的数据校验，列表功能校验；</p><p>5、怎么执行自动化测试<br>（1）开发提测前自用，配置环境和工具，下载脚本执行，可通过测试报告查看执行情况和结果；</p><p>（2）冒烟测试中，测试在开发提测后执行，通过测试报告查看执行情况和测试结果；</p><p>（3）回归测试中，测试人员执行执行纳入回归测试的测试脚本并执行</p><p>（4）生产验收，UI自动化测试脚本可用于生产验收中，无须手动操作就可验证生产的情况。</p><p>6、UI自动化测试的利与弊<br>利处：快捷、方便、无须手工操作</p><p>弊端：脚本编写成本高、案例开发时间长、需要长期维护</p><p>二、总结<br>UI自动化应用于项目组的所负责的系统需求较多，测试案例数量也较多，测试场景复杂，测试数据制作复杂，并且有部分系统已经趋于成熟。</p><p>UI自动化测试其实是一门【水】很深的工作，因为UI自动化测试是需要根据前端页面元素，也就是HTML脚本来进行元素提取、操作、验证的测试流程，另外再加上项目的测试环境软件硬件的因素，在编写自动化测试脚本的时候需要考虑到很多的情况出现而要去判断当前页面出现的元素到底是什么情况，不然脚本的稳定性很不好，维护工作也会非常的高。另外在编写自动化脚本的时候，你会慢慢的熟悉你项目系统前端页面的代码，当下很多前端开发人员在制作新的项目前端页面时都会直接用现成的组件生成，这种HTML代码会使你开发脚本时难上加难，因为里面的标签命名根本就是乱来的。</p><p>三、自动化框架<br>搭建测试框架，框架目录解析</p><p><img src="/assets/2/image-20220510223500-pv7tycu.png" alt="image.png"></p><h2 id="config-配置文件，将项目相关的配置全放到这个文件夹中，python支持yaml，ini"><a href="#config-配置文件，将项目相关的配置全放到这个文件夹中，python支持yaml，ini" class="headerlink" title="config : 配置文件，将项目相关的配置全放到这个文件夹中，python支持yaml，ini"></a>config : 配置文件，将项目相关的配置全放到这个文件夹中，python支持yaml，ini</h2><p><strong>ini文件介绍</strong></p><p>以[section]开始</p><p>以[option&#x3D;value]结尾</p><p>备注以；开头</p><p>section不可重名</p><p><strong>yaml文件介绍</strong></p><p>以—开头，表明文件的开始</p><p>列表中的所有成员都开始于相同的缩进级别，并且使用一个“-”作为开头（一个横杠和一个空格）</p><p>一个字典是由一个简单的键：值的形式（这个冒号后面必须是一个空格）</p><p><strong>ini读取文件封装,yaml读取文件封装</strong></p><p><strong>configutil.py</strong></p><pre><code class="text">import configparserimport osimport yamlclass ReadIni():    def read_ini(file, section, option):        conf = configparser.ConfigParser()        conf.read(file)        res=conf.get(section, option)        print(res)        return resclass ReafYaml():    def read_yaml(file,key):        f=open(file,encoding=&#39;utf-8&#39;)        file_data =f.read()        res=yaml.load(file_data,Loader=yaml.FullLoader)        print(res.get(key))        return res.get(key)if __name__ == &#39;__main__&#39;:    current_path = os.path.dirname(os.path.realpath(__file__))    config_path = os.path.dirname(current_path) + os.sep + &quot;config&quot;    yaml_file = os.path.join(config_path, &#39;test.yaml&#39;)    ReafYaml.read_yaml(yaml_file, &#39;username&#39;)</code></pre><h2 id="data-数据文件，将测试用例参数化相关的文件放在这里，xlsx-csv-json"><a href="#data-数据文件，将测试用例参数化相关的文件放在这里，xlsx-csv-json" class="headerlink" title="data : 数据文件，将测试用例参数化相关的文件放在这里，xlsx,csv,json"></a>data : 数据文件，将测试用例参数化相关的文件放在这里，xlsx,csv,json</h2><h2 id="driver-：驱动文件"><a href="#driver-：驱动文件" class="headerlink" title="driver ：驱动文件"></a>driver ：驱动文件</h2><h2 id="log-：日志文件，如test-log-error-log"><a href="#log-：日志文件，如test-log-error-log" class="headerlink" title="log ：日志文件，如test log,error log"></a>log ：日志文件，如test log,error log</h2><h2 id="report-：测试报告"><a href="#report-：测试报告" class="headerlink" title="report ：测试报告"></a>report ：测试报告</h2><h2 id="test-：测试文件"><a href="#test-：测试文件" class="headerlink" title="test ：测试文件"></a>test ：测试文件</h2><p>case-测试用例</p><p><strong>test.py</strong></p><pre><code class="text">import unittestfrom selenium import webdriverfrom test.locators import *from utils.configutil import ReadIni,ReafYamlfrom test.page import *from utils.excelutil import *from selenium.webdriver.common.action_chains import ActionChainsimport yamlimport osfrom utils.logutil import *current_path = os.path.dirname(os.path.realpath(__file__))config_path = os.path.dirname(current_path) + os.sep + &quot;config&quot;ini_file = os.path.join(config_path, &#39;test.ini&#39;)ip = ReadIni.read_ini(ini_file, &#39;ip_address&#39;, &#39;ip&#39;)# print(ip)url = &#39;&#123;&#125;user/login?redirect=http%3A%2F%2Fmis-next.aunbox.ce%2FuserDetail&#39;.format(ip)excel_file = os.path.join(os.path.dirname(current_path) + os.sep + &quot;data&quot;, &#39;case.xlsx&#39;)username = ReadExcel.read_excel(excel_file,&#39;Sheet1&#39;,&#39;A&#39;)class LoginTest(unittest.TestCase):    def setUp(self):        self.driver = webdriver.Chrome()        self.driver.maximize_window()        self.driver.implicitly_wait(10)        self.driver.get(url)    def test_login(self):        Logger(&#39;C:\\Users\\Administrator\\PycharmProjects\\yunding\\log\\test.log&#39;,&#39;info&#39;).info(&#39;add project&#39;)        for user in username:            loginpage=LoginPage(self.driver)            loginpage.enter_username(user)            loginpage.enter_password()            loginpage.click_login_button()            self.assertEqual(&#39;超级管理员&#39;,loginpage.get_login_name())            quitlogin=self.driver.find_element_by_xpath(&#39;//*[@id=&quot;root&quot;]/section/section/header/div[2]/span&#39;)            ActionChains(self.driver).move_to_element(quitlogin).perform()            self.driver.find_element_by_class_name(&#39;ant-dropdown-menu-item&#39;).click()            self.driver.get(url)        # self.driver.find_element(*LoginLocators.username).send_keys(&quot;&#123;&#125;&quot;.format(user))        # self.driver.find_element(*LoginLocators.password).send_keys(&quot;&#123;&#125;&quot;.format(pad))        # self.driver.find_element(*LoginLocators.loginbutton).click()        # id=self.driver.find_element(*LoginLocators.loginname)        # self.assertEqual(&#39;超级管理员&#39;,id.text)    def tearDown(self):        self.driver.quit()if __name__ == &#39;__main__&#39;:    unittest.main()</code></pre><p>common-测试相关的抽象通用代码</p><p>page-页面类</p><p>元素定位</p><p><strong>locators.py</strong></p><pre><code class="text">from selenium.webdriver.common.by import By# 页面元素class LoginLocators():    username=(By.ID,&#39;account&#39;)    password=(By.ID,&#39;password&#39;)    loginbutton=(By.CLASS_NAME,&#39;ant-btn&#39;)    loginname=(By.CLASS_NAME,&#39;userName___fQOhV&#39;)</code></pre><p>元素操作</p><p><strong>page.py</strong></p><pre><code class="text">from test.locators import *# 页面元素的操作class BasePage():    def __init__(self,driver):        self.driver = driverclass LoginPage(BasePage):    &#39;&#39;&#39;    用户登录页面元素的操作,,,到这里消失    &#39;&#39;&#39;    UserName = (By.XPATH,&#39;//*[@id=&quot;username&quot;]&#39;) #登录名    def enter_username(self,name):        ele = self.driver.find_element(*LoginLocators.username)        # ele.clear()        ele.send_keys(name)  #对用户名元素进行输入    def enter_password(self):        ele = self.driver.find_element(*LoginLocators.password)        ele.send_keys(&#39;123456&#39;) #输入密码    def click_login_button(self):        ele = self.driver.find_element(*LoginLocators.loginbutton)        ele.click()  #点击登录按钮    def get_login_name(self):        ele = self.driver.find_element(*LoginLocators.loginname)        return ele.text  #返回登录名</code></pre><h2 id="utils-：公共方法"><a href="#utils-：公共方法" class="headerlink" title="utils ：公共方法"></a>utils ：公共方法</h2><p>config的类</p><p>log的类</p><p><strong>logutil.py</strong></p><pre><code class="text">import loggingfrom logging import handlersclass Logger(object):    level_relations = &#123;        &#39;debug&#39;:logging.DEBUG,        &#39;info&#39;:logging.INFO,        &#39;warning&#39;:logging.WARNING,        &#39;error&#39;:logging.ERROR,        &#39;critical&#39;:logging.CRITICAL    &#125;    def __init__(self,fp=&#39;d:\\Project_Redmine_01\\log\\test.log&#39;,level=&#39;info&#39;):        self.level = self.level_relations.get(level)        self.logger = logging.getLogger(fp)        self.logger.setLevel(self.level)        formatter = logging.Formatter(&#39;%(asctime)s - %(filename)s[line:%(lineno)d] - %(levelname)s: %(message)s&#39;)        th = handlers.TimedRotatingFileHandler(fp)        th.setFormatter(formatter)        th.setLevel(self.level)        self.logger.addHandler(th)    def debug(self,msg):        self.logger.debug(msg)    def info(self,msg):        self.logger.info(msg)    def warning(self,msg):        self.logger.warning(msg)    def error(self,msg):        self.logger.error(msg)    def critical(self,msg):        self.logger.critical(msg)if __name__ == &#39;__main__&#39;:    log = Logger(&#39;abcd.log&#39;,&#39;debug&#39;)    log.info(&#39;this is info msg&#39;)    log.critical(&#39;this is critical msg&#39;)</code></pre><p>读，写excel的类</p><p><strong>excelutil.py</strong></p><pre><code class="text">import configparserimport osimport yamlclass ReadIni():    def read_ini(file, section, option):        conf = configparser.ConfigParser()        conf.read(file)        res=conf.get(section, option)        print(res)        return resclass ReafYaml():    def read_yaml(file,key):        f=open(file,encoding=&#39;utf-8&#39;)        file_data =f.read()        res=yaml.load(file_data,Loader=yaml.FullLoader)        print(res.get(key))        return res.get(key)if __name__ == &#39;__main__&#39;:    current_path = os.path.dirname(os.path.realpath(__file__))    config_path = os.path.dirname(current_path) + os.sep + &quot;config&quot;    yaml_file = os.path.join(config_path, &#39;test.yaml&#39;)    ReafYaml.read_yaml(yaml_file, &#39;username&#39;)</code></pre><p>生成报告的类</p><p><strong>run.py</strong></p><pre><code class="text">import osimport timeimport unittestimport HTMLTestRunnercurrent_path = os.path.dirname(os.path.realpath(__file__))# print(current_path)report_path = os.path.join(current_path,&#39;report&#39;)# print(report_path)case_path = os.path.join(current_path,&#39;test&#39;)# print(case_path)report_name = time.strftime(&#39;%Y%m%d%H%M%S&#39;,time.localtime((time.time())))testsuite = unittest.TestLoader().discover(case_path)filename = &quot;&#123;&#125;\\&#123;&#125;.html&quot;.format(report_path,report_name)f = open(filename,&#39;wb&#39;)runner = HTMLTestRunner.HTMLTestRunner(stream=f,title=&#39;report&#39;,description=&#39;this is a report&#39;)runner.run(testsuite)f.close()</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一、原理&lt;br&gt;1、什么是UI自动化测试&lt;br&gt;使用工具或者脚本对需要测试的软件的前端界面在预设的条件下和已经的测试数据下运行系统或者应用程序，并获取其前端页面显示的数据结果进行校验，评估得出测试结论。&lt;/p&gt;
&lt;p&gt;2、UI自动化测试可用于哪里&lt;br&gt;基于测试渠道可分为：</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="06_自动化" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="02_自动化实操" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/"/>
    
    <category term="01_UI自动化" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-%E8%87%AA%E5%8A%A8%E5%8C%96/02-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E6%93%8D/01-UI%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    
    <category term="课后" scheme="http://example.com/tags/%E8%AF%BE%E5%90%8E/"/>
    
  </entry>
  
  <entry>
    <title>持续集成</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/15_%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2_%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/03_%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/15_%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2_%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/03_%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/</id>
    <published>2022-05-14T18:00:17.129Z</published>
    <updated>2022-05-14T16:12:47.156Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a><strong>一、准备工作</strong></h1><p>Java环境安装配置</p><h2 id="Java环境安装"><a href="#Java环境安装" class="headerlink" title="Java环境安装"></a>Java环境安装</h2><p><strong>由于许多工具配套支持的jdk版本为1.8版本，所以尽量选择</strong>jdk1.8<strong>版本使用。</strong></p><h3 id="1-下载jdk"><a href="#1-下载jdk" class="headerlink" title="1.  下载jdk"></a>1.  <strong>下载</strong>jdk</h3><p><a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html">https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html</a></p><p><strong>选择对应系统版本匹配的</strong>JDK<strong>，点击右边的下载。</strong></p><p><img src="/assets/1/image-20220324172511-lke1vl3.png" alt="image.png"></p><p><strong>在弹出的窗口中勾选同意用户协议，并点击下载，若没有登录则会弹出登录界面，注册一个账号进行下载即可。</strong></p><p><img src="/assets/1/image-20220324172521-1ya4f0w.png" alt="image.png"></p><p><strong>JDK</strong>下载完成后，直接双击运行安装，建议默认安装到C:\Program Files\Java，记住自己的安装路径。点击下一步等待安装即可。</p><p><img src="/assets/1/image-20220324172527-erl5zf5.png" alt="image.png"></p><p><strong>之后会弹出JRE环境安装的提示，建议同样使用默认路径，直接下一步。等待安装完成之后关闭。</strong></p><p><img src="/assets/1/image-20220324172533-ettqoz2.png" alt="image.png"></p><p><img src="/assets/1/image-20220324172539-8x11wj1.png" alt="image.png"></p><h3 id="2-配置环境变量"><a href="#2-配置环境变量" class="headerlink" title="2.  配置环境变量"></a>2.  <strong>配置环境变量</strong></h3><p><strong>配置环境变量之前，先检查确认java安装成功：</strong></p><p><strong>进入安装目录中，确认安装目录下jdk和jre都已经安装成功。确认jdk目录的bin目录下，包含java.exe，javac.exe,javaw.exe。如果没有，尝试卸载重装。</strong></p><p><img src="/assets/1/image-20220324172545-zymly6w.png" alt="image.png"></p><p><img src="/assets/1/image-20220324172550-2jd1t1a.png" alt="image.png"></p><p><strong>环境变量操作方法：</strong></p><p><strong>Win7</strong>：<a href="https://jingyan.baidu.com/article/d5a880eb6aca7213f047cc6c.html">https://jingyan.baidu.com/article/d5a880eb6aca7213f047cc6c.html</a></p><p><strong>Win10</strong>：<a href="https://jingyan.baidu.com/article/ad310e80d2ebe31848f49e59.html">https://jingyan.baidu.com/article/ad310e80d2ebe31848f49e59.html</a></p><p><strong>以</strong>WIN10<strong>为例：</strong></p><h4 id="一、在系统变量中，添加JAVA-HOME变量，值为JDK安装目录。"><a href="#一、在系统变量中，添加JAVA-HOME变量，值为JDK安装目录。" class="headerlink" title="一、在系统变量中，添加JAVA_HOME变量，值为JDK安装目录。"></a>一、在系统变量中，添加<strong>JAVA_HOME</strong>变量，值为<strong>JDK</strong>安装目录。</h4><p><img src="/assets/1/image-20220324172557-k5e0kcd.png" alt="image.png"></p><h4 id="二、编辑系统变量中的Path"><a href="#二、编辑系统变量中的Path" class="headerlink" title="二、编辑系统变量中的Path:"></a>二、编辑系统变量中的P<strong>ath</strong>:</h4><p><strong>1、删除变量</strong>C:\Program Files (x86)\Common Files\Oracle\Java\javapath，通常在第一个。</p><p><strong>确认是</strong>Oracle\Java\javapath再删除！！！<img src="/assets/1/image-20220324172606-hx3wr2s.png" alt="image.png"></p><p><strong>2、在Path中新建</strong>%<strong>JAVA_HOME%\bin</strong>请确保这个目录下包含<strong>java.exe</strong>和<strong>javac.exe。</strong></p><p><img src="/assets/1/image-20220324172626-q4ank4m.png" alt="image.png"></p><h4 id="三-安装检查"><a href="#三-安装检查" class="headerlink" title="三.  安装检查"></a>三.  <strong>安装检查</strong></h4><p><strong>检查</strong>path<strong>：在</strong>cmd<strong>下输入 echo %path% ，确保</strong>path<strong>里面，</strong>java<strong>的路径是正确的，并且没有其他</strong>java<strong>的路径。</strong></p><p><img src="/assets/1/image-20220324172632-c5i0tqu.png" alt="image.png"></p><p><strong>cmd</strong>在任意目录下，执行<strong>java -version</strong>和<strong>javac -version</strong>。两个版本与安装版本一致，说明配置成功。</p><p><img src="/assets/1/image-20220324172638-br4z8gt.png" alt="image.png"></p><h1 id="Jenkins安装部署"><a href="#Jenkins安装部署" class="headerlink" title="Jenkins安装部署"></a>Jenkins安装部署</h1><h2 id="Tomcat下载解压："><a href="#Tomcat下载解压：" class="headerlink" title="Tomcat下载解压："></a>Tomcat下载解压：</h2><p><strong>tomcat是非常常用的轻量级web应用服务器，用于进行web项目的发布。要完成jenkins的部署，首先需要安装Java环境和tomcat。</strong></p><p><strong>Java环境的安装请参考文档中的《java环境搭建》一文。</strong></p><p>1、下载tomcat： <a href="https://tomcat.apache.org/download-80.cgi">https://tomcat.apache.org/download-80.cgi</a></p><p><strong>2、下载之后直接解压即可使用。</strong></p><h2 id="Jenkins部署到tomcat启动"><a href="#Jenkins部署到tomcat启动" class="headerlink" title="Jenkins部署到tomcat启动"></a>Jenkins部署到tomcat启动</h2><p>1、下载Jenkins.war，联系悠米老师领取或者从官网下载均可： <a href="https://www.jenkins.io/download/">https://www.jenkins.io/download/</a></p><p><strong>2、将Jenkins.war包复制到到Tomcat的webapps目录下，然后在tomcat的bin目录下运行startup.bat，启动tomcat。</strong></p><p><img src="/assets/1/image-20220324172712-md4nob9.png" alt="image.png"></p><p><strong>3、   在浏览器中访问<a href="http://localhost:8080/jenkins%EF%BC%8C%E7%AD%89%E5%BE%85%E7%BD%91%E9%A1%B5%E5%88%9D%E5%A7%8B%E5%8C%96%E6%88%90%E5%8A%9F%EF%BC%8C%E7%9B%B4%E5%88%B0%E5%87%BA%E7%8E%B0%E4%B8%8B%E9%9D%A2%E7%9A%84%E7%95%8C%E9%9D%A2%EF%BC%9A">http://localhost:8080/jenkins，等待网页初始化成功，直到出现下面的界面：</a></strong></p><p><img src="/assets/1/image-20220324172717-fw32cnu.png" alt="image.png"></p><p><strong>4、  用记事本或Notepad++等文本编辑工具</strong>打开图中红色标识目录中的<strong>initialAdminPassword</strong>文件，复制里面的字符串，粘贴到图中输入框。然后点击图中的继续按钮。</p><p><strong>5、   跳转</strong>到下图页面，建议选择Install suggested plugins安装推荐插件，熟悉基本插件之后，可以选择Select plugins to install自定义配置安装的插件。</p><p><img src="/assets/1/image-20220324172725-r2o7lwv.png" alt="image.png"></p><hr><p><strong>6、    <strong>等待插件安装（需要较长时间），当进度条读满，所有插件项目都变成红色或者绿色之后，说明安装结束，如果安装完成页面没有自动跳转，请</strong>手动刷新浏览器页面。</strong></p><p><img src="/assets/1/image-20220324172731-py63260.png" alt="image.png"></p><p><strong>7、    <strong>忽略安装失败，点击</strong>continue</strong>。</p><p><img src="/assets/1/image-20220324172737-a5ccczb.png" alt="image.png"></p><p><strong>8、    <strong>创建一个管理员用户名密码，请</strong>记住</strong>用户名和密码，用于之后登录使用。配置完成点击<strong>save and finish</strong>结束。</p><p><img src="/assets/1/image-20220324172743-yybujku.png" alt="image.png"></p><p><strong>9、    <strong>进入</strong>Jenkins</strong>页面。此时，安装完成</p><p><img src="/assets/1/image-20220324172750-9wxgelu.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、准备工作&quot;&gt;&lt;a href=&quot;#一、准备工作&quot; class=&quot;headerlink&quot; title=&quot;一、准备工作&quot;&gt;&lt;/a&gt;&lt;strong&gt;一、准备工作&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;Java环境安装配置&lt;/p&gt;
&lt;h2 id=&quot;Java环境安装&quot;&gt;&lt;a h</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="15_环境部署_持续集成" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/15-%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2-%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Apache环境部署</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/15_%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2_%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/01_apache%E7%8E%AF%E5%A2%83/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/15_%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2_%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/01_apache%E7%8E%AF%E5%A2%83/</id>
    <published>2022-05-14T18:00:17.121Z</published>
    <updated>2022-05-14T16:12:47.141Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a><strong>一、准备工作</strong></h1><h2 id="1-1-环境"><a href="#1-1-环境" class="headerlink" title="1.1 环境"></a>1.1 环境</h2><p>操作系统：centos7（CentOS-7-x86_64-Minimal-1708）</p><p>硬件：（这个根据项目运行和配置建议设置，一般我先配个1核1G）</p><h2 id="1-2-关闭selinux"><a href="#1-2-关闭selinux" class="headerlink" title="1.2 关闭selinux"></a>1.2 关闭selinux</h2><p>#修改selinux的配置文件</p><pre><code>vim /etc/selinux/config</code></pre><p>将内容中的SELINUX&#x3D;enforcing修改为SELINUX&#x3D;disabled，wq保存。</p><p>#本次不重启关闭selinux</p><pre><code>setenforce 0</code></pre><h2 id="1-3-更新"><a href="#1-3-更新" class="headerlink" title="1.3 更新"></a>1.3 更新</h2><pre><code>yum update -y</code></pre><h2 id="1-4-安装vim、wget"><a href="#1-4-安装vim、wget" class="headerlink" title="1.4 安装vim、wget"></a>1.4 安装vim、wget</h2><pre><code>yum install -y vim wget    </code></pre><hr><h1 id="二、部署apache"><a href="#二、部署apache" class="headerlink" title="二、部署apache"></a>二、部署apache</h1><h2 id="2-1-安装"><a href="#2-1-安装" class="headerlink" title="2.1 安装"></a>2.1 安装</h2><pre><code>yum install -y httpd</code></pre><h2 id="2-2-启动服务"><a href="#2-2-启动服务" class="headerlink" title="2.2 启动服务"></a>2.2 启动服务</h2><h1 id="启动apache"><a href="#启动apache" class="headerlink" title="启动apache"></a>启动apache</h1><pre><code>systemctl start httpd</code></pre><h1 id="开机启动"><a href="#开机启动" class="headerlink" title="开机启动"></a>开机启动</h1><pre><code>systemctl enable httpd</code></pre><h2 id="2-3-查看apache版本"><a href="#2-3-查看apache版本" class="headerlink" title="2.3 查看apache版本"></a>2.3 查看apache版本</h2><pre><code>httpd -v</code></pre><p><img src="/assets/1/image-20211122230737-ixxygo6.png" alt="image.png"></p><p> 可以看到apache安装的是2.4.6，也可以知道apache安装成功。</p><h2 id="2-4-开启80端口"><a href="#2-4-开启80端口" class="headerlink" title="2.4 开启80端口"></a>2.4 开启80端口</h2><h1 id="添加80端口永久开启"><a href="#添加80端口永久开启" class="headerlink" title="添加80端口永久开启"></a>添加80端口永久开启</h1><pre><code>firewall-cmd --add-port=80/tcp --permanent</code></pre><h1 id="防火墙修改立即生效"><a href="#防火墙修改立即生效" class="headerlink" title="防火墙修改立即生效"></a>防火墙修改立即生效</h1><pre><code>firewall-cmd --reload</code></pre><h1 id=""><a href="#" class="headerlink" title=""></a></h1><hr><h1 id="三、部署mysql"><a href="#三、部署mysql" class="headerlink" title="三、部署mysql"></a>三、部署mysql</h1><h2 id="3-1-安装"><a href="#3-1-安装" class="headerlink" title="3.1 安装"></a>3.1 安装</h2><h1 id="获取rpm包"><a href="#获取rpm包" class="headerlink" title="获取rpm包"></a>获取rpm包</h1><pre><code>wget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm</code></pre><h1 id="安装rpm包"><a href="#安装rpm包" class="headerlink" title="安装rpm包"></a>安装rpm包</h1><pre><code>rpm -ivh mysql-community-release-el7-5.noarch.rpm</code></pre><h1 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h1><pre><code>yum install -y mysql-community-server</code></pre><h2 id="3-2-启动"><a href="#3-2-启动" class="headerlink" title="3.2 启动"></a>3.2 启动</h2><h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><pre><code>systemctl start mysql</code></pre><h1 id="开机启动-1"><a href="#开机启动-1" class="headerlink" title="开机启动"></a>开机启动</h1><pre><code>systemctl enable mysql</code></pre><h2 id="3-3-修改root密码并设置允许远程连接"><a href="#3-3-修改root密码并设置允许远程连接" class="headerlink" title="3.3 修改root密码并设置允许远程连接"></a>3.3 修改root密码并设置允许远程连接</h2><h1 id="进入mysql"><a href="#进入mysql" class="headerlink" title="进入mysql"></a>进入mysql</h1><pre><code>mysql -uroot</code></pre><h1 id="设置root密码为123456"><a href="#设置root密码为123456" class="headerlink" title="设置root密码为123456"></a>设置root密码为123456</h1><pre><code>mysql&gt; set password for &#39;root&#39;@&#39;localhost&#39; =password(&#39;123456&#39;);</code></pre><h1 id="设置允许用root账户进行远程连接，并设置其密码为123456"><a href="#设置允许用root账户进行远程连接，并设置其密码为123456" class="headerlink" title="设置允许用root账户进行远程连接，并设置其密码为123456"></a>设置允许用root账户进行远程连接，并设置其密码为123456</h1><pre><code>mysql&gt; grant all privileges on *.* to root@&#39;%&#39;identified by &#39;123456&#39;;</code></pre><h1 id="修改的配置立即生效"><a href="#修改的配置立即生效" class="headerlink" title="修改的配置立即生效"></a>修改的配置立即生效</h1><pre><code>mysql&gt; flush privileges;</code></pre><h1 id="退出"><a href="#退出" class="headerlink" title="退出"></a>退出</h1><pre><code>mysql&gt; exit;</code></pre><h2 id="3-4-查看mysql版本"><a href="#3-4-查看mysql版本" class="headerlink" title="3.4 查看mysql版本"></a>3.4 查看mysql版本</h2><pre><code>mysql -V</code></pre><p><img src="/assets/1/image-20211122230745-87is6zt.png" alt="image.png"></p><hr><h1 id="四、部署php"><a href="#四、部署php" class="headerlink" title="四、部署php"></a>四、部署php</h1><h2 id="4-1-安装"><a href="#4-1-安装" class="headerlink" title="4.1 安装"></a>4.1 安装</h2><pre><code>yum install -y php</code></pre><h2 id="4-2-安装组件是php支持mysql"><a href="#4-2-安装组件是php支持mysql" class="headerlink" title="4.2 安装组件是php支持mysql"></a>4.2 安装组件是php支持mysql</h2><pre><code>yum install -y php-mysql php-gd libjpeg* php-ldap php-odbc php-pear php-xml php-xmlrpc php-mbstring php-bcmath php-mhash</code></pre><h2 id="4-3-查看php版本"><a href="#4-3-查看php版本" class="headerlink" title="4.3 查看php版本"></a>4.3 查看php版本</h2><pre><code>php --version</code></pre><p><img src="/assets/1/image-20211122230751-hh1f83z.png" alt="image.png"></p><h2 id="4-4-查看详细信息"><a href="#4-4-查看详细信息" class="headerlink" title="4.4 查看详细信息"></a>4.4 查看详细信息</h2><h1 id="新增文件phpmess-php"><a href="#新增文件phpmess-php" class="headerlink" title="新增文件phpmess.php"></a>新增文件phpmess.php</h1><pre><code>vim /var/www/html/phpmess.php</code></pre><p> 增加下面的内容，wq保存。</p><pre><code>&lt;?php    phpinfo();</code></pre><p>浏览器访问ip&#x2F;phpmess.php查看，出现类似下面的内容就说明php安装是成功的。</p><p><img src="/assets/1/image-20211122230756-t0j1bii.png" alt="image.png"></p><h2 id="4-5-安全其他版本PHP"><a href="#4-5-安全其他版本PHP" class="headerlink" title="4.5 安全其他版本PHP"></a>4.5 安全其他版本PHP</h2><p>卸载原来低版本的PHP</p><pre><code>rpm -qa |grep php|xargs rpm -e</code></pre><p>更新yum源</p><p>&#x2F;&#x2F;CentOS&#x2F;RHEL 7.x<br>rpm -Uvh <a href="https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm">https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</a><br>rpm -Uvh <a href="http://rpms.famillecollet.com/enterprise/remi-release-7.rpm">http://rpms.famillecollet.com/enterprise/remi-release-7.rpm</a></p><p>查看可使用的php包</p><pre><code>yum list | grep php</code></pre><p>安装PHP常用模块</p><p>yum -y install php72-php php72-php-common php72-php-devel php72-php-gd php72-php-mysqlnd php72-php-pecl-mysql php72-php-pecl-memcached php72-php-pecl-memcache php72-php-pecl-redis php72-php-opcache</p><p>&#x2F;&#x2F;装好后看一下装了哪些包<br>yum list installed |grep php</p><p>&#x2F;&#x2F;最后重启下httpd<br>systemctl restart httpd<br><img src="/assets/1/image-20211122230802-4mgxljy.png" alt="image.png"></p><h2 id="5-更改Apache网站默认目录"><a href="#5-更改Apache网站默认目录" class="headerlink" title="5.更改Apache网站默认目录"></a>5.更改Apache网站默认目录</h2><p>Apache默认的网站目录是在&#x2F;var&#x2F;www&#x2F;html，</p><p>现在要把网站目录更改到&#x2F;home&#x2F;wwwroot&#x2F;web1&#x2F;htdocs，</p><p>操作如下<br><strong>准备工作：</strong><br>创建目录：<br>cd &#x2F;home<br>mkdir wwwroot<br>cd wwwroot<br>mkdir web1<br>cd web1<br>mkdir htdocs<br>touch index.php<br><strong>操作步骤：</strong><br>1、vi &#x2F;etc&#x2F;httpd&#x2F;conf&#x2F;httpd.conf<br>找到 DocumentRoot “&#x2F;var&#x2F;www&#x2F;html” 这一段     #apache的根目录<br>把&#x2F;var&#x2F;www&#x2F;html 这个目录改为&#x2F;home&#x2F;wwwroot&#x2F;web1&#x2F;htdocs<br>再找到 &lt;Directory “&#x2F;var&#x2F;www&#x2F;html”&gt;   #定义apache &#x2F;var&#x2F;www&#x2F;html这个区域<br>把 &#x2F;var&#x2F;www&#x2F;html改成&#x2F;home&#x2F;wwwroot&#x2F;web1&#x2F;htdocs<br>这样我们就把apahce的默认路径改掉了<br>service httpd restart  #重启Apache服务器<br>2、访问localhost的时候，会发现访问拒绝，这是为什么呢？<br>系统运维 <a href="http://www.osyunwei.com/">www.osyunwei.com</a> 温馨提醒：qihang01原创内容©版权所有,转载请注明出处及原文链接<br>主要是因为你的&#x2F;home&#x2F;wwwroot&#x2F;web1&#x2F;htdocs的权限是750，apache这个用户没有权限访问，你需要更改掉权限，可以这样改<br>chmod -R 755 &#x2F;home&#x2F;wwwroot&#x2F;web1&#x2F;htdocs<br>然后去访问 发现正常运行了（apache的用户：apache 运行apache的组：apache）<br> <strong>至此，</strong> <strong>Apache****默认网站目录更改成功。</strong></p><h2 id="6-绑定域名"><a href="#6-绑定域名" class="headerlink" title="6.绑定域名"></a>6.绑定域名</h2><p>vi &#x2F;etc&#x2F;httpd&#x2F;conf&#x2F;httpd.conf　　更改配置文件</p><p><img src="/assets/1/image-20211122230808-8zh112f.png" alt="image.png"></p><p> 在配置文件最后加入如下</p><h1 id="域名配置"><a href="#域名配置" class="headerlink" title="域名配置"></a>域名配置</h1><p>&lt;VirtualHost *:80&gt;<br>DocumentRoot “&#x2F;www&#x2F;dz&#x2F;“<br>ServerName dz.m616.top<br></VirtualHost></p><p><img src="/assets/1/image-20211122230814-l1ybpb2.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、准备工作&quot;&gt;&lt;a href=&quot;#一、准备工作&quot; class=&quot;headerlink&quot; title=&quot;一、准备工作&quot;&gt;&lt;/a&gt;&lt;strong&gt;一、准备工作&lt;/strong&gt;&lt;/h1&gt;&lt;h2 id=&quot;1-1-环境&quot;&gt;&lt;a href=&quot;#1-1-环境&quot; class=</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="15_环境部署_持续集成" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/15-%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2-%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat环境部署</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/15_%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2_%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/02_Tomcat%E7%8E%AF%E5%A2%83/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/15_%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2_%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/02_Tomcat%E7%8E%AF%E5%A2%83/</id>
    <published>2022-05-14T18:00:17.121Z</published>
    <updated>2022-05-14T16:12:47.149Z</updated>
    
    <content type="html"><![CDATA[<h2 id="yum方式安装JDK"><a href="#yum方式安装JDK" class="headerlink" title="yum方式安装JDK"></a>yum方式安装JDK</h2><p>“*”表示将java-1.8.0的所有相关Java程序都安装上（是不是很方便快捷）</p><pre><code>[root@test ~]# yum -y install java-1.8.0-openjdk*</code></pre><p>查看是否安装成功java -version（出现版本号代表安装成功）</p><pre><code>[root@test ~]# java -versionopenjdk version &quot;1.8.0_212&quot;OpenJDK Runtime Environment (build 1.8.0_212-b04)OpenJDK 64-Bit Server VM (build 25.212-b04, mixed mode)</code></pre><h2 id="安装tomcat"><a href="#安装tomcat" class="headerlink" title="安装tomcat"></a>安装tomcat</h2><p>1.将tomcat安装在usr&#x2F;lcoal下一般软件安装处</p><p>将入其文件夹</p><p>[root@test ~]# cd &#x2F;usr&#x2F;local</p><p>2.去tomcat官网复制你想下载的版本下载链接。注意一定要选择tar.gz这是liunx下的安装包，比如链接：<a href="https://links.jianshu.com/go?to=http://mirror.bit.edu.cn/apache/tomcat/tomcat-9/v9.0.19/bin/apache-tomcat-9.0.19.tar.gz">http://mirror.bit.edu.cn/apache/tomcat/tomcat-9/v9.0.19/bin/apache-tomcat-9.0.19.tar.gz</a></p><p><img src="/assets/1/image-20211125152847-ggl37xb.png" alt="image.png"></p><p>在这里插入图片描述</p><p>3.wget命令下载安装包</p><blockquote><ol><li>[root@test ~]# wget <a href="http://mirror.bit.edu.cn/apache/tomcat/tomcat-9/v9.0.62/bin/apache-tomcat-9.0.62.tar.gz">http://mirror.bit.edu.cn/apache/tomcat/tomcat-9/v9.0.62/bin/apache-tomcat-9.0.62.tar.gz</a></li></ol></blockquote><p>4.查看</p><pre><code>[root@instance-wi0t3arq local]# ls</code></pre><p><img src="/assets/1/image-20211125152852-2lujja3.png" alt="image.png"></p><p>在这里插入图片描述</p><p>5.解压</p><p>个人习惯喜欢把安装包改一下名字</p><blockquote><p>[root@instance-wi0t3arq local]# mv apache-tomcat-9.0.19.tar.gz tomcats<br>[root@instance-wi0t3arq local]# tar -zxvf tomcats<br>[root@instance-wi0t3arq local]# mv apache-tomcat-9.0.19  tomcat</p></blockquote><p>6.查看是否安装成功</p><p>进入tomcat bin目录启动Tomcat（显示Tomcat started.则启动成功）</p><pre><code>[root@instance-wi0t3arq local]# cd tomcat[root@instance-wi0t3arq tomcat]# cd bin[root@instance-wi0t3arq bin]# ./startup.shUsing CATALINA_BASE:   /usr/local/tomcatUsing CATALINA_HOME:   /usr/local/tomcatUsing CATALINA_TMPDIR: /usr/local/tomcat/tempUsing JRE_HOME:        /usrUsing CLASSPATH:       /usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jarTomcat started.</code></pre><p>用curl命令测试本地能不能访问8080端口</p><pre><code>[root@instance-wi0t3arq bin]# curl http://localhost:8080</code></pre><p>出现页面代码表示tomcat安装成功</p><p><img src="/assets/1/image-20211125152856-tpa141d.png" alt="image.png"></p><p>在这里插入图片描述</p><hr><p>如果curl <a href="http://localhost:8080出现未知错误：需修改配置文件">http://localhost:8080出现未知错误：需修改配置文件</a>  操作如下：</p><p>[root@instance-wi0t3arq bin]#  cd ..</p><p>[root@instance-wi0t3arq tomcat]#  cd conf</p><p>[root@instance-wi0t3arq conf]#  vi server.xml</p><pre><code class="把">~~~~~~~~~~~~~~~~ 把  8080  改为 其他如  80~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</code></pre><p><img src="/assets/1/image-20220415181625-p6oh0j3.png" alt="image.png"></p><p>7.启动远程访问（不要瞎改配置这只会让你陷入死循环。按照这三步来一点问题都没有）</p><p>a.关闭防火墙并关机禁止启动</p><pre><code>[root@instance-wi0t3arq bin]# systemctl stop firewalld[root@instance-wi0t3arq bin]# systemctl status firewalld ?firewalld.service - firewalld - dynamic firewall daemon   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled; vendor preset: enabled)   Active: inactive (dead)     Docs: man:firewalld(1)[root@instance-wi0t3arq bin]#  systemctl disable firewalld</code></pre><p>b.安全组配置8080端口(这个去云服务商网站配置一下就ok了)</p><p><img src="/assets/1/image-20211125152901-aehe6s1.png" alt="image.png"></p><p>在这里插入图片描述</p><p>c.重启tomcat</p><p>然后在你的浏览器里输入ip+:8080就可以访问到tomcat界面了</p><h2 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h2><p>1.准备</p><pre><code># 下载mysql源安装包 [root@instance-wi0t3arq bin]# wget http://dev.mysql.com/get/mysql57-community-release-el7-8.noarch.rpm# 安装mysql源 [root@instance-wi0t3arq bin]# yum localinstall mysql57-community-release-el7-8.noarch.rpm检查mysql源是否安装成功//不出现错误信息代表安装成功 [root@instance-wi0t3arq bin]#  yum repolist enabled | grep &quot;mysql.*-community.*&quot;</code></pre><p>2、安装MySQL</p><pre><code> [root@instance-wi0t3arq bin]#  yum install mysql-community-server</code></pre><p>3、启动MySQL服务</p><pre><code> [root@instance-wi0t3arq bin]#  systemctl start mysqld</code></pre><p>4.查看MySQL的启动状态</p><p>[root@instance-wi0t3arq bin] systemctl status mysqld</p><p>5.登录mysql修改本地登录密码</p><p>查看本机密码</p><p>[root@instance-wi0t3arq bin]  grep ‘temporary password’ &#x2F;var&#x2F;log&#x2F;mysqld.log</p><p><img src="/assets/1/image-20211125152906-kwvgdv6.png" alt="image.png"></p><p>在这里插入图片描述</p><p>登录修改密码：注意此处密码一定要按照此格式来因为有验证规则。</p><pre><code>  [root@instance-wi0t3arq local]#  mysql -u root -pEnter password: mysql&gt; ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;MyNewPass4!&#39;; </code></pre><p>6.开启远程连接</p><p>a.配置安全组3306端口</p><p><img src="/assets/1/image-20211125152910-ziubdm5.png" alt="image.png"></p><p>在这里插入图片描述</p><p>b.开启远程访问</p><blockquote><p><code>mysql &gt;  GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;fanggus@1s23&#39; WITH GRANT OPTION;</code></p></blockquote><p>远程连接一下即可连接。</p><h2 id="出现其他问题"><a href="#出现其他问题" class="headerlink" title="出现其他问题"></a>出现其他问题</h2><p>1.本机版本与我的不一致我的linux内核版本是：centos7.5(换一下系统)</p><p>2.系统本身存在jdk、tomcat、mysql（重装）</p><p>3.如果系统不是第一次使用，建议重装系统这样不至于出现覆盖现象。如果不方便重装的话，就先将本机的jdk、mysql、tomcat卸载。</p><p>检索命令：</p><pre><code>[root@test ~]# yum list installed |grep java</code></pre><p>查看版本命令：</p><pre><code>java -version</code></pre><p>移除命令</p><pre><code>yum -y remove java-1.7.0-openjdk*</code></pre><p>嗯哼，通过这三个命令移除吧</p><pre><code>yum -y install libaioyum -y install net-toolsyum -y install perl</code></pre><h2 id="上传安装包"><a href="#上传安装包" class="headerlink" title="上传安装包"></a>上传安装包</h2><blockquote><p>在&#x2F;usr&#x2F;local目录下新建mysql目录</p></blockquote><pre><code>mkdir /usr/local/mysql</code></pre><h2 id="解压缩"><a href="#解压缩" class="headerlink" title="解压缩"></a>解压缩</h2><blockquote><p>进入mysql目录,解压缩</p></blockquote><pre><code>tar xvf mysql-5.7.30-1.el7.x86_64.rpm-bundle.tar</code></pre><p>在这里插入图片描述<br><img src="https://lexiangla.com/assets/1/d1c7d855e0624a266d378bdde1956586?from_outside=1" alt="在这里插入图片描述"></p><h2 id="安装服务器端程序"><a href="#安装服务器端程序" class="headerlink" title="安装服务器端程序"></a>安装服务器端程序</h2><pre><code>[root@localhost src]# rpm -ivh mysql-community-common-5.7.32-1.el7.x86_64.rpm[root@localhost src]# rpm -ivh mysql-community-libs-5.7.32-1.el7.x86_64.rpm[root@localhost src]# rpm -ivh mysql-community-client-5.7.32-1.el7.x86_64.rpm[root@localhost src]# rpm -ivh mysql-community-server-5.7.32-1.el7.x86_64.rpm</code></pre><h2 id="启动mysql服务"><a href="#启动mysql服务" class="headerlink" title="启动mysql服务"></a>启动mysql服务</h2><p>查看mysql状态</p><pre><code>service mysqld status</code></pre><p>启动mysql</p><pre><code>service mysqld start</code></pre><h2 id="查看并修改临时MySQL密码"><a href="#查看并修改临时MySQL密码" class="headerlink" title="查看并修改临时MySQL密码"></a>查看并修改临时MySQL密码</h2><pre><code>#查看临时密码：得知临时密码就是如图grep password /var/log/mysqld.log</code></pre><p><img src="https://lexiangla.com/assets/1/33ff088d3189441e781c1276b12695fe?from_outside=1" alt="在这里插入图片描述"></p><pre><code>#用临时密码登录mysql[root@localhost src]# mysql -uroot –p#修改成新的密码mysql&gt; set password = password(&quot;Root_123&quot;);</code></pre><p><img src="https://lexiangla.com/assets/1/7a8743824a3c49b453cbfe5c9e37611d?from_outside=1" alt="在这里插入图片描述"></p><h2 id="开启远程连接-允许远程连接数据库"><a href="#开启远程连接-允许远程连接数据库" class="headerlink" title="开启远程连接,允许远程连接数据库"></a>开启远程连接,允许远程连接数据库</h2><blockquote><p>设置远程访问（使用root密码）</p></blockquote><pre><code>mysql&gt; GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;Mysql_123456&#39; WITH GRANT OPTION;</code></pre><h2 id="配置mysql的配置文件my-cnf"><a href="#配置mysql的配置文件my-cnf" class="headerlink" title="配置mysql的配置文件my.cnf"></a>配置mysql的配置文件my.cnf</h2><pre><code>#打开配置文件my.cnf[root@localhost src]# vi /etc/my.cnf#在[mysqld]下面配置几行lower_case_table_names=1   #配置表名不区分大小写 1：不区分大小写 0：区分大小写  这行必须配置 默认表名是区分大小写的，不利于开发character-set-server=utf8          #设置为默认编码为utf8init_connect=&#39;SET NAMES utf8&#39;max_connections=1024             #设置最大连接数skip-name-resolve                #在连接远程数据库的时候，直接跳过MySQL的DNS解析[root@localhost src]# service mysqld restart  #重启mysql 重启配置才能生效</code></pre><h2 id="防火墙设置允许3306端口"><a href="#防火墙设置允许3306端口" class="headerlink" title="防火墙设置允许3306端口"></a>防火墙设置允许3306端口</h2><pre><code>vim /etc/sysconfig/iptables</code></pre><p>模仿22端口开放命令添加如图所示的一行即表示对外开放3306端口<br><img src="https://lexiangla.com/assets/1/b075e7556ef2404d6bac3b3de8763b05?from_outside=1" alt="在这里插入图片描述"></p><blockquote><p>重启防火墙</p></blockquote><pre><code>service iptables restart</code></pre><p><strong>第二种方法启动远成端口</strong></p><pre><code>firewall-cmd --zone=public --add-port=3306/tcp --permanentfirewall-cmd --reload</code></pre><h2 id="设置开机启动MySQL"><a href="#设置开机启动MySQL" class="headerlink" title="设置开机启动MySQL"></a>设置开机启动MySQL</h2><blockquote><p>编辑文件</p></blockquote><pre><code>vi /etc/rc.local</code></pre><p>加入mysql启动命令<br><img src="https://lexiangla.com/assets/1/c07c0b30d3a7456a6e85c952a2034310?from_outside=1" alt="在这里插入图片描述"></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><blockquote><p>使用sqlyog连接mysql<br><img src="https://lexiangla.com/assets/1/719d1d2aec4b46437bfdabe5839cf993?from_outside=1" alt="在这里插入图片描述"></p></blockquote><h1 id="安装tomcat-1"><a href="#安装tomcat-1" class="headerlink" title="安装tomcat"></a>安装tomcat</h1><h2 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h2><blockquote><p>在&#x2F;usr&#x2F;local目录下新建tomcat目录</p></blockquote><pre><code>mkdir /usr/local/tomcat</code></pre><blockquote><p>将apache-tomcat-7.0.57.tar.gz 上传到该目录</p></blockquote><h2 id="解压缩-1"><a href="#解压缩-1" class="headerlink" title="解压缩"></a>解压缩</h2><blockquote><p>进入&#x2F;usr&#x2F;local&#x2F;tomcat 目录并解压apache-tomcat-7.0.57.tar.gz 文件</p></blockquote><pre><code>$ tar -xvf apache-tomcat-7.0.57.tar.gz</code></pre><h2 id="防火墙设置允许8080端口"><a href="#防火墙设置允许8080端口" class="headerlink" title="防火墙设置允许8080端口"></a>防火墙设置允许8080端口</h2><pre><code>/****in/iptables -I INPUT -p tcp --dport 8080 -j ACCEPT/etc/rc.d/init.d/iptables save</code></pre><h2 id="启动tomcat"><a href="#启动tomcat" class="headerlink" title="启动tomcat"></a>启动tomcat</h2><blockquote><p>进入到tomcat的安装目录下的bin目录：&#x2F;usr&#x2F;local&#x2F;tomcat&#x2F;apache-tomcat-7.0.57&#x2F;bin</p></blockquote><pre><code>./startup.sh</code></pre><h2 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h2><blockquote><p>访问 http:&#x2F;&#x2F;虚拟机地址:8080</p></blockquote><p><img src="https://lexiangla.com/assets/1/25bbfa73c8fe4d354ae7c2c10a38b22f?from_outside=1" alt="在这里插入图片描述"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;yum方式安装JDK&quot;&gt;&lt;a href=&quot;#yum方式安装JDK&quot; class=&quot;headerlink&quot; title=&quot;yum方式安装JDK&quot;&gt;&lt;/a&gt;yum方式安装JDK&lt;/h2&gt;&lt;p&gt;“*”表示将java-1.8.0的所有相关Java程序都安装上（是不是很方便</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="15_环境部署_持续集成" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/15-%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2-%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>truetimec++ java visual basic</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/14_%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/07_truetimec++%20java%20visual%20basic/01_truetimec++%20java%20visual%20basic/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/14_%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/07_truetimec++%20java%20visual%20basic/01_truetimec++%20java%20visual%20basic/</id>
    <published>2022-05-14T18:00:17.085Z</published>
    <updated>2022-05-12T15:49:36.203Z</updated>
    
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="14_白盒测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/14-%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="07_truetimec++ java visual basic" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/14-%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/07-truetimec-java-visual-basic/"/>
    
    
    <category term="课后" scheme="http://example.com/tags/%E8%AF%BE%E5%90%8E/"/>
    
  </entry>
  
  <entry>
    <title>phpunitphp</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/14_%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/05_phpunitphp/01_phpunitphp/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/14_%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/05_phpunitphp/01_phpunitphp/</id>
    <published>2022-05-14T18:00:17.067Z</published>
    <updated>2022-05-12T15:49:22.143Z</updated>
    
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="14_白盒测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/14-%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="05_phpunitphp" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/14-%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/05-phpunitphp/"/>
    
    
    <category term="课后" scheme="http://example.com/tags/%E8%AF%BE%E5%90%8E/"/>
    
  </entry>
  
  <entry>
    <title>boundscheckerc++ delphiapi ole</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/14_%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06_boundscheckerc++%20delphiapi%20ole/01_boundscheckerc++%20delphiapi%20ole/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/14_%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06_boundscheckerc++%20delphiapi%20ole/01_boundscheckerc++%20delphiapi%20ole/</id>
    <published>2022-05-14T18:00:17.067Z</published>
    <updated>2022-05-12T15:49:28.923Z</updated>
    
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="14_白盒测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/14-%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="06_boundscheckerc++ delphiapi ole" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/14-%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/06-boundscheckerc-delphiapi-ole/"/>
    
    
    <category term="课后" scheme="http://example.com/tags/%E8%AF%BE%E5%90%8E/"/>
    
  </entry>
  
  <entry>
    <title>gtest</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/14_%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04_gtest/01_gtest/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/14_%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04_gtest/01_gtest/</id>
    <published>2022-05-14T18:00:17.060Z</published>
    <updated>2022-05-12T15:49:14.769Z</updated>
    
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="14_白盒测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/14-%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="04_gtest" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/14-%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/04-gtest/"/>
    
    
    <category term="课后" scheme="http://example.com/tags/%E8%AF%BE%E5%90%8E/"/>
    
  </entry>
  
  <entry>
    <title>junit</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/14_%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/02_junit/01_junit/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/14_%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/02_junit/01_junit/</id>
    <published>2022-05-14T18:00:17.038Z</published>
    <updated>2022-05-12T15:49:03.449Z</updated>
    
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="14_白盒测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/14-%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="02_junit" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/14-%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/02-junit/"/>
    
    
    <category term="课后" scheme="http://example.com/tags/%E8%AF%BE%E5%90%8E/"/>
    
  </entry>
  
  <entry>
    <title>cppunit</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/14_%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03_cppunit/01_cppunit/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/14_%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03_cppunit/01_cppunit/</id>
    <published>2022-05-14T18:00:17.038Z</published>
    <updated>2022-05-12T15:49:09.785Z</updated>
    
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="14_白盒测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/14-%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="03_cppunit" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/14-%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/03-cppunit/"/>
    
    
    <category term="课后" scheme="http://example.com/tags/%E8%AF%BE%E5%90%8E/"/>
    
  </entry>
  
  <entry>
    <title>jtestjava</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/14_%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/01_jtestjava/01_jtestjava/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/14_%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/01_jtestjava/01_jtestjava/</id>
    <published>2022-05-14T18:00:17.033Z</published>
    <updated>2022-05-12T15:48:57.827Z</updated>
    
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="14_白盒测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/14-%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="01_jtestjava" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/14-%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/01-jtestjava/"/>
    
    
    <category term="课后" scheme="http://example.com/tags/%E8%AF%BE%E5%90%8E/"/>
    
  </entry>
  
  <entry>
    <title>charles安装与使用</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/13_web%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/12_Charles/01_charles%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/13_web%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/12_Charles/01_charles%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</id>
    <published>2022-05-14T18:00:17.021Z</published>
    <updated>2022-05-14T16:12:47.133Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、charles简介"><a href="#一、charles简介" class="headerlink" title="一、charles简介"></a>一、charles简介</h1><p>　　<a href="http://www.charlesproxy.com/">Charles</a> 是常用的网络封包截取工具，在做 移动开发时，我们为了调试与服务器端的网络通讯协议，常常需要截取网络封包来分析。</p><p>　　Charles 通过将自己设置成系统的网络访问代理服务器，使得所有的网络访问请求都通过它来完成，从而实现了网络封包的截取和分析。</p><p>　　除了在做移动开发中调试端口外，Charles 也可以用于分析第三方应用的通讯协议。配合 Charles 的 SSL 功能，Charles 还可以分析 Https 协议。</p><h1 id="二、charles安装与破解"><a href="#二、charles安装与破解" class="headerlink" title="二、charles安装与破解"></a>二、charles安装与破解</h1><h2 id="1-charles安装"><a href="#1-charles安装" class="headerlink" title="1.charles安装"></a>1.charles安装</h2><p>　　　charles的安装非常简单，直接通过<a href="http://www.charlesproxy.com/">charles官网</a>安装最新版即可。</p><p>　　　Charles 是收费软件，可以免费试用 30 天。试用期过后，未付费的用户仍然可以继续使用，但是每次使用时间不能超过 30 分钟，并且启动时将会有 10 秒种的延时。</p><h2 id="2-破解"><a href="#2-破解" class="headerlink" title="2.破解"></a>2.破解</h2><p>　　　在线破解：<a href="https://www.zzzmode.com/mytools/charles/">https://www.zzzmode.com/mytools/charles/</a></p><p>　　　注册名称随意填写，然后选择自己安装的charles版本号，点击即可生成一个charles.jar包，将生成的charles.jar替换原来安装目录lib下的charles.jar包即可。</p><p>　　　注意：生成的jar包只有10分钟的有效期，需要在10分钟内完成破解的操作</p><h1 id="三、基本配置"><a href="#三、基本配置" class="headerlink" title="三、基本配置"></a>三、基本配置</h1><p>　　我使用的是win7的系统，所以以下配置适用于win7的电脑系统，win10也是类似的配置</p><h2 id="1-PC端安装证书"><a href="#1-PC端安装证书" class="headerlink" title="1.PC端安装证书"></a>1.PC端安装证书</h2><p>　　打开charles，选择help–&gt;SSL Proxying–&gt; Install Charles Root Ceriticate，点击安装证书，一直点击下一步完成即可成功安装。如下图所示：</p><p><img src="/assets/1/image-20211122223234-nojtb3x.png" alt="image.png"></p><p><img src="/assets/1/image-20211122223242-xn8ntu6.png" alt="image.png"></p><p>　　</p><h2 id="2-web端抓包配置"><a href="#2-web端抓包配置" class="headerlink" title="2.web端抓包配置"></a>2.web端抓包配置</h2><p>　　　以火狐浏览器为例，其它浏览器类似配置即可。</p><p>　　　安装charles后访问火狐浏览器，无论访问什么链接都会提示您的连接不安全，解决办法与fiddler同理，需要安装charles证书</p><p><img src="/assets/1/image-20211122223251-00hwiqu.png" alt="image.png"></p><p>　　　　　a.将charles证书保存到本地，选择help→SSL Proxying→Save Charles Certificate</p><p><img src="/assets/1/image-20211122223300-pys14z8.png" alt="image.png"></p><p><img src="/assets/1/image-20211122223306-sd4git4.png" alt="image.png"></p><p>　　　　　b.进入Firefox浏览器选择—高级-证书，点击查看证书—导入，选择本地保存的证书，勾选信任，导入即可。</p><p><img src="/assets/1/image-20211122223313-6yf2nee.png" alt="image.png"></p><p>　　　　</p><p>　　　　　c.重启火狐浏览器，发现网页可以正常打开，charles也可以正常抓包</p><p> 　　</p><h2 id="3-手机抓包配置"><a href="#3-手机抓包配置" class="headerlink" title="3.手机抓包配置"></a>3.手机抓包配置</h2><h3 id="1-手机端设置代理"><a href="#1-手机端设置代理" class="headerlink" title="1)手机端设置代理"></a>1)手机端设置代理</h3><p>　　　　　此时你的手机必须和电脑在同一个网络&#x2F;wifi里,手机选择和电脑相同wifi—&gt;长按此wifi弹框中选择修改网络—&gt;显示高级选项—&gt;服务器主机名输入框中输入电脑ip地址,服务器端口号填写8888——&gt;保存即可,此时手机和电脑绑定在一起一遍电脑抓手机上请求网络数据</p><p><img src="/assets/1/image-20211122223322-4svba9s.png" alt="image.png"></p><p>　　　　第一次设置成功代理后，随便打开一个需要网络的应用，PC端会自动弹出以下提示，选择allow允许Charles代理</p><p><img src="/assets/1/image-20211122223329-5n7vd3g.png" alt="image.png"></p><p>　　　　如果没有弹出该提示，也可以在菜单栏中的proxy—Access Control settings中手动将手机和电脑的ip加入其中（手机的ip地址怎么查看可以自行百度）</p><p><img src="/assets/1/image-20211122223335-gs6uiq5.png" alt="image.png"></p><h3 id="2-手机安装charles证书"><a href="#2-手机安装charles证书" class="headerlink" title="2)手机安装charles证书"></a>2)手机安装charles证书</h3><h4 id="a-IOS客户端"><a href="#a-IOS客户端" class="headerlink" title="a.IOS客户端"></a>a.IOS客户端</h4><p>　　　　　　前提：手机WiFi代理已经设置好，参考前文设置　　　</p><p>　　　　　　1、打开Charles，选择help→SSL Proxying→Install Charles Root Certificate on a Mobile Device or Remote Browser</p><p>　　　　　　2、手机连接电脑代理，打开safari，输入网址：chls.pro&#x2F;ssl</p><p>　　　　　　3、手机弹出提示：此网站正尝试打开“设置”已向您显示一个配置描述文件。您要允许吗？忽略|允许，选择允许，安装描述文件，并信任</p><p>　　　　　　4、iOS10以上的手机需要在：设置→ 通用 → 关于本机 → 证书信任设置→ 找到charles proxy CA证书，打开信任即可</p><h4 id="b-android客户端"><a href="#b-android客户端" class="headerlink" title="b.android客户端"></a>b.android客户端</h4><h5 id="方式一："><a href="#方式一：" class="headerlink" title="方式一："></a>方式一：</h5><p>　　　　　　点击 help–&gt;SSL Proxying–&gt; Install Charles Root Ceriticate on a Mobile Device or Remote Browser,</p><p><img src="/assets/1/image-20211122223345-8gyec9n.png" alt="image.png"></p><p>　　　手机设置好WiFi代理后,在手机浏览器打开下面弹框里提到的链接chls.pro&#x2F;ssl,下载证书,安装即可(华为手机最好不要用自带的浏览器，因为自带的浏览器下载的证书为pem格式，无法直接安装，我用的百度浏览器)</p><p>　　　cer格式的证书下载完可以直接点击安装，安装证书过程中会要求输入锁屏密码</p><p><img src="/assets/1/image-20211122223353-794bj8s.png" alt="image.png"></p><h5 id="方式二："><a href="#方式二：" class="headerlink" title="方式二："></a>方式二：</h5><p>　　　　　　1、打开Charles，选择help→SSL Proxying→Save Charles Certificate，然后将证书导入到手机中</p><p>　　　　　　2、导入后直接点击安装证书，提示无法打开（pem格式），cer格式的key直接安装，可以忽略第三步</p><p>　　　　　　3、进入手机设置—&gt;安全和隐私—&gt;更多安全设置—&gt;加密和凭据—&gt;从存储设备安装—&gt;选择我们刚下载的证书,安装即可（华为手机的安装方式，其它安卓机型可以自行百度）</p><p><img src="/assets/1/image-20211122223400-1qxenel.png" alt="image.png"></p><p>　　　　　　常见手机：小米手机，华为手机，需要设置手机锁屏密码</p><p><img src="/assets/1/image-20211122223300-pys14z8.png" alt="image.png"></p><p><img src="/assets/1/image-20211122223422-xh9tzfh.png" alt="image.png"></p><p> 　</p><h2 id="4-设置抓取https"><a href="#4-设置抓取https" class="headerlink" title="4.设置抓取https"></a>4.设置抓取https</h2><p> 　　　　默认charles只可以抓取http协议的包，https的更安全，需要如下配置方可</p><p>　　　　菜单栏 Proxy–&gt;SSL Proxying Setting–&gt;选择SSL Proxying——&gt;点击add在弹框中port里填写443(443代表通用https端口号)， host中的*代表抓取所有地址的包</p><p><img src="/assets/1/image-20211122223428-zyk9mt1.png" alt="image.png"></p><p><img src="/assets/1/image-20211122223435-52u5oe8.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、charles简介&quot;&gt;&lt;a href=&quot;#一、charles简介&quot; class=&quot;headerlink&quot; title=&quot;一、charles简介&quot;&gt;&lt;/a&gt;一、charles简介&lt;/h1&gt;&lt;p&gt;　　&lt;a href=&quot;http://www.charlesproxy</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="13_web安全测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/13-web%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="12_Charles" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/13-web%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/12-Charles/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>fiddler弱网测试</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/13_web%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/11_fiddler/999_fiddler%E6%96%87%E4%BB%B6/07_fiddler%E5%BC%B1%E7%BD%91%E6%B5%8B%E8%AF%95/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/13_web%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/11_fiddler/999_fiddler%E6%96%87%E4%BB%B6/07_fiddler%E5%BC%B1%E7%BD%91%E6%B5%8B%E8%AF%95/</id>
    <published>2022-05-14T18:00:16.988Z</published>
    <updated>2022-05-14T16:12:47.125Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/assets/1/image-20220312103112-7w4grsr.png" alt="image.png"></p><h1 id="【Fiddler】Fiddler实现弱网测试"><a href="#【Fiddler】Fiddler实现弱网测试" class="headerlink" title="【Fiddler】Fiddler实现弱网测试"></a>【Fiddler】Fiddler实现弱网测试</h1><p><img src="/assets/1/image-20220312103118-u6c78jk.png" alt="image.png"></p><p>南京理工大学 理学硕士</p><p>57 人赞同了该文章</p><h2 id="一、弱网简介"><a href="#一、弱网简介" class="headerlink" title="一、弱网简介"></a><strong>一、弱网简介</strong></h2><p>弱网看字面意思就是网络比较弱，我们通称为信号差，网速慢。</p><p><strong>1、弱网的影响</strong></p><p>在地铁、隧道、电梯和车库等场景下使用APP ，网络会出现延时、中断和超时等情况。</p><ul><li>如果我们处于网速慢的地段，我们请求某个功能，app会响应非常慢，页面加载不出来，对于我们测试人员来看，就是用户请求这个API，API加载速度比较慢。</li><li>大家都喜欢刷抖音当我们在地铁上刷抖音，滑到下一个时候突然间就会页面卡住，这也是网络的原因导致的。</li><li>很多bug都会在弱网的情况下展现出来，如由于响应慢而多次请求，最终导致app出现ANR问题。</li></ul><p><img src="/assets/1/image-20220312103127-7z69ay8.png" alt="image.png"></p><p><strong>2、弱网定义</strong></p><p>现在很多时候2G或者在地铁、电梯等场景的3G网，均可定义为弱网，下面是常见网络制式的上行、下载速度表，可以参考。</p><p><img src="/assets/1/image-20220312103131-u2uo06z.png" alt="image.png"></p><h2 id="二、Fiddler实现弱网的测试"><a href="#二、Fiddler实现弱网的测试" class="headerlink" title="二、Fiddler实现弱网的测试"></a><strong>二、Fiddler实现弱网的测试</strong></h2><p>无论是做web端还是app端的测试，我们都需要对弱网进行测试，对于弱网方法有很多种，如：Fiddler模拟弱网，控制电脑的网速等，今天介绍下Fiddler如何进行弱网测试。</p><p><strong>1、Fiddler中启动弱网</strong></p><p>打开Fiddler，Rules-&gt;Performance-&gt;勾选 Simulate Modem Speeds，勾选之后访问网站会发现网络慢了很多。</p><p><img src="/assets/1/image-20220312103136-fl10m66.png" alt="image.png"></p><p><strong>2、设置弱网的参数</strong></p><p>菜单Rules—&gt;Cutomize Rules</p><p><img src="/assets/1/image-20220312103140-aj3g5w6.png" alt="image.png"></p><p>让我们来分析一下这几行代码：</p><pre><code class="text">        if (m_SimulateModem) &#123;            // Delay sends by 300ms per KB uploaded.            oSession[&quot;request-trickle-delay&quot;] = &quot;300&quot;;             // Delay receives by 150ms per KB downloaded.            oSession[&quot;response-trickle-delay&quot;] = &quot;150&quot;;         &#125;</code></pre><ul><li>首先来判断m_SimulateModem是否为true（是否开启），也就是是否设置了弱网模式。</li><li>oSession[“request-trickle-delay”] &#x3D; “300”;</li></ul><blockquote><p>Delay sends by 300ms per KB uploaded：上传1KB内容需要300ms，转化一下上传速度：1Kb&#x2F;0.3s &#x3D; 3.3KB&#x2F;s，也就是说网络上行速度只有3.3KB。</p></blockquote><ul><li>oSession[“response-trickle-delay”] &#x3D; “150”;</li></ul><blockquote><p>Delay receives by 150ms per KB downloaded：下载1KB内容需要150ms，转化后的下载速度：1KB&#x2F;0.15s&#x3D;6.6KB&#x2F;s,也就是说网络下载速度只有6.6KB。</p></blockquote><ul><li>如果你想设置下载的速度为50KB&#x2F;s，你则需要设置Delay 时间为 20ms。</li><li>也可以限制上传的速度，调整oSession[“response-trickle-delay”]的值即可。</li></ul><p><strong>3、验证效果</strong></p><p>同样的接口，开启弱网前后分别运行一次，查看统计数据。</p><p><img src="/assets/1/image-20220312103144-imlxacs.png" alt="image.png"></p><p><strong>4、恢复设置</strong></p><p>完成测试之后，需要再次执行：打开Fiddler，Rules-&gt;Performance-&gt;勾选 Simulate Modem Speeds，关闭弱网模拟。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/assets/1/image-20220312103112-7w4grsr.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;【Fiddler】Fiddler实现弱网测试&quot;&gt;&lt;a href=&quot;#【Fiddler】Fiddler实现弱网</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="13_web安全测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/13-web%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="11_fiddler" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/13-web%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/11-fiddler/"/>
    
    <category term="999_fiddler文件" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/13-web%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/11-fiddler/999-fiddler%E6%96%87%E4%BB%B6/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>fiddle实现手机抓包</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/13_web%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/11_fiddler/999_fiddler%E6%96%87%E4%BB%B6/06_fiddle%E5%AE%9E%E7%8E%B0%E6%89%8B%E6%9C%BA%E6%8A%93%E5%8C%85/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/13_web%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/11_fiddler/999_fiddler%E6%96%87%E4%BB%B6/06_fiddle%E5%AE%9E%E7%8E%B0%E6%89%8B%E6%9C%BA%E6%8A%93%E5%8C%85/</id>
    <published>2022-05-14T18:00:16.987Z</published>
    <updated>2022-05-14T16:12:47.118Z</updated>
    
    <content type="html"><![CDATA[<p>Fiddler是我最喜爱的工具，几乎每天都用， 我已经用了8年了。 至今我也只学会其中大概50%的功能。 Fiddler绝对称得上是”神器”， 任何一个搞IT的人都得着的。</p><p>小弟我立志， 一定要把Fiddler的所有的功能和用法都写出来。 写成一个完整系列的教程。</p><p>Fiddler不但能截获各种浏览器发出的HTTP请求, 也可以截获各种智能手机发出的HTTP&#x2F;HTTPS请求。</p><p>Fiddler能捕获IOS设备发出的请求，比如IPhone, IPad, MacBook. 等等苹果的设备。  同理，也可以截获Andriod，Windows Phone的等设备发出的HTTP&#x2F;HTTPS。</p><p>本文介绍Fiddler截获IPhone发出的HTTP&#x2F;HTTPS包</p><p>前提条件是：安装Fiddler的机器，跟Iphone 在同一个网络里， 否则IPhone不能把HTTP发送到Fiddler的机器上来。</p><p><img src="/assets/1/wpsBBA7.tmp-20211222153414-4k7ab2o.jpg"></p><h1 id="截获智能手机发出的HTTP包有什么用"><a href="#截获智能手机发出的HTTP包有什么用" class="headerlink" title="截获智能手机发出的HTTP包有什么用?"></a><strong>截获智能手机发出的HTTP包有什么用?</strong></h1><p>用处一： 手机软件程序员利用Fiddler，可以截获手机发出的HTTP包， 从而调试程序</p><p>用处二： 软件测试人员用于测试智能手机上的软件。</p><p>用处三： 可以用来在App应用商店中刷排名</p><p>用处四： 截获了HTTP&#x2F;HTTPS后，你想干什么就干什么，比如修改Request，或者Response.</p><h1 id="配置Fiddler-允许”远程连接”"><a href="#配置Fiddler-允许”远程连接”" class="headerlink" title="配置Fiddler,  允许”远程连接”"></a><strong>配置Fiddler,  允许”远程连接”</strong></h1><p>打开Fiddler,     Tools-&gt; Fiddler Options 。  （配置完后记得要重启Fiddler）.</p><p>选中”Decrpt HTTPS traffic”,    Fiddler就可以截获HTTPS请求</p><p>选中”Allow remote computers to connect”.  是允许别的机器把HTTP&#x2F;HTTPS请求发送到Fiddler上来</p><p><img src="/assets/1/wpsBBA8.tmp-20211222153414-p1ehtm5.png"><img src="/assets/1/wpsBBA9.tmp-20211222153414-e9jz0p5.jpg"></p><p><img src="/assets/1/wpsBBAA.tmp-20211222153414-m1e3p7w.png"><img src="/assets/1/wpsBBAB.tmp-20211222153414-1qorg2w.jpg"></p><h1 id="获取Fiddler所在机器的IP地址"><a href="#获取Fiddler所在机器的IP地址" class="headerlink" title="获取Fiddler所在机器的IP地址"></a><strong>获取Fiddler所在机器的IP地址</strong></h1><p>这个简单吧。   我Fidder所在的机器地址是: 192.168.1.104</p><h1 id="IPhone上安装Fiddler证书"><a href="#IPhone上安装Fiddler证书" class="headerlink" title="IPhone上安装Fiddler证书"></a><strong>IPhone上安装Fiddler证书</strong></h1><p>这一步是为了让Fiddler能捕获HTTPS请求。 如果你只需要截获HTTP请求， 可以忽略这一步</p><ol><li>首先要知道Fiddler所在的机器的IP地址：　假如我安装了Fiddler的机器的IP地址是:192.168.1.104</li><li>打开IPhone 的Safari, 访问  <a href="http://192.168.1.104:8888，">http://192.168.1.104:8888，</a> 点”FiddlerRoot certificate” 然后安装证书</li></ol><p><img src="/assets/1/wpsBBAC.tmp-20211222153414-c3e8vfu.png"><img src="/assets/1/wpsBBAD.tmp-20211222153414-7xz2llb.jpg"></p><p> <img src="/assets/1/wpsBBAE.tmp-20211222153414-6h56pvh.jpg"></p><p><img src="/assets/1/wpsBBAF.tmp-20211222153414-rc0e4xc.png"></p><h1 id="IPhone上配置Fiddler为代理"><a href="#IPhone上配置Fiddler为代理" class="headerlink" title="IPhone上配置Fiddler为代理"></a><strong>IPhone上配置Fiddler为代理</strong></h1><p> 打开IPhone,  找到你的网络连接， 打开HTTP代理， 输入Fiddler所在机器的IP地址(比如:192.168.1.104) 以及Fiddler的端口号8888</p><p><img src="/assets/1/wpsBBB0.tmp-20211222153414-1jct4ls.png"><img src="/assets/1/wpsBBB1.tmp-20211222153414-f7fgldl.jpg"></p><h1 id="大功告成，开始抓包"><a href="#大功告成，开始抓包" class="headerlink" title="大功告成，开始抓包"></a><strong>大功告成，开始抓包</strong></h1><p>现在IPhone上的应用（比如Safari, Firefox, Itunes, App Store）发出的HTTP&#x2F;HTTPS都可以被Fiddler获取。</p><p>实例：　打开Safari，　　</p><ol><li>输入<a href="http://www.cnblogs.com/tankxiao">http://www.cnblogs.com/tankxiao</a>.  看看Fiddler能否捕获。</li><li>输入<a href="https://dynamic.12306.cn/otsweb/">https://dynamic.12306.cn/otsweb/</a>   看看Fiddler能否捕获。</li></ol><p>是不是HTTP和HTTPS都截获到了？？？？，  你不但能截获， 还可以下断点，修改Request, 修改Response, Do what you want.</p><p>用完了， 记得把IPhone上的Fiddler代理关闭， 以免IPhone上不了网。</p><h1 id="只能捕获HTTP-而不能捕获HTTPS的解决办法"><a href="#只能捕获HTTP-而不能捕获HTTPS的解决办法" class="headerlink" title="只能捕获HTTP,而不能捕获HTTPS的解决办法"></a><strong>只能捕获HTTP,而不能捕获HTTPS的解决办法</strong></h1><p>有时候会发现， Fiddler 只能捕获IPhone发出得HTTP请求， 而不能捕获HTTPS请求， 原因可能是证书没有安装好。 解决办法是：</p><ol><li>先把IPhone上所有的Fiddler证书删除 (拿出IPhone， 点”设置“-&gt;“通用”-&gt;”描述文件”)</li><li>安装上面的方法，重新安装Fiddler证书</li></ol><h1 id="Fiddler捕获其他手机或者平板"><a href="#Fiddler捕获其他手机或者平板" class="headerlink" title="Fiddler捕获其他手机或者平板"></a><strong>Fiddler捕获其他手机或者平板</strong></h1><p>方法类似</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Fiddler是我最喜爱的工具，几乎每天都用， 我已经用了8年了。 至今我也只学会其中大概50%的功能。 Fiddler绝对称得上是”神器”， 任何一个搞IT的人都得着的。&lt;/p&gt;
&lt;p&gt;小弟我立志， 一定要把Fiddler的所有的功能和用法都写出来。 写成一个完整系列的教</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="13_web安全测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/13-web%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="11_fiddler" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/13-web%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/11-fiddler/"/>
    
    <category term="999_fiddler文件" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/13-web%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/11-fiddler/999-fiddler%E6%96%87%E4%BB%B6/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>FiddlerComposer创建和发送http请求</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/13_web%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/11_fiddler/999_fiddler%E6%96%87%E4%BB%B6/05_FiddlerComposer%E5%88%9B%E5%BB%BA%E5%92%8C%E5%8F%91%E9%80%81http%E8%AF%B7%E6%B1%82/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/13_web%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/11_fiddler/999_fiddler%E6%96%87%E4%BB%B6/05_FiddlerComposer%E5%88%9B%E5%BB%BA%E5%92%8C%E5%8F%91%E9%80%81http%E8%AF%B7%E6%B1%82/</id>
    <published>2022-05-14T18:00:16.980Z</published>
    <updated>2022-05-14T16:12:47.110Z</updated>
    
    <content type="html"><![CDATA[<p>Fiddler的功能还有很多， 很多功能都没有被挖掘出来。这次我们介绍Fiddler中的一个非常有用的功能Composer，是用来创建和发送HTTP Request的。Composer的使用方法很简单，看下就知道用了。</p><h1 id="Fiddler-Composer介绍"><a href="#Fiddler-Composer介绍" class="headerlink" title="Fiddler Composer介绍"></a><strong>Fiddler Composer介绍</strong></h1><p>Composer的官方帮助文档：<a href="http://www.fiddler2.com/fiddler/help/composer.asp">http://www.fiddler2.com/fiddler/help/composer.asp</a></p><p>Fiddler的作者把HTTP Request发射器取名叫Composer(中文意思是：乐曲的创造者), 很有诗意</p><p>Fiddler Composer的功能就是用来创建HTTP Request 然后发送。 你可以自定义一个Request, 也可以手写一个Request, 你甚至可以在Web会话列表中拖拽一个已有的Request. 来创建一个新的HTTP Request.</p><p><img src="/assets/1/wpsF35A.tmp-20211222153217-qqxckyq.png"></p><h1 id="Fiddler-Composer比其他工具的优势"><a href="#Fiddler-Composer比其他工具的优势" class="headerlink" title="Fiddler Composer比其他工具的优势"></a><strong>Fiddler Composer比其他工具的优势</strong></h1><p>能创建发送HTTP Request的工具很多很多。 但是Fiddler的功能有如下的优势。</p><ol><li>能从”Web会话列表”中 拖拽一个先前捕获到的Request, 然后稍微修改一下</li><li>发送Request后，还能设置断点，继续修改Request.</li><li>支持在Request中上传文件</li><li>支持发送多次Request.</li></ol><h1 id="实例-模拟京东商城的登录"><a href="#实例-模拟京东商城的登录" class="headerlink" title="实例: 模拟京东商城的登录"></a><strong>实例: 模拟京东商城的登录</strong></h1><p>启动Fiddler, 启动IE, 打开京东，然后输入用户名和密码，登录。   Fiddler 将捕获到这个登录的Request.</p><ol><li>首先找出哪个Request 是用来登录的， 然后把它拖拽到Composer中。</li></ol><p>[用来登录的request是这个: <a href="https://passport.360buy.com/uc/loginService?uuid=6bc79fbf-e882-49bb-b63a-6fd6ee448944%5D">https://passport.360buy.com/uc/loginService?uuid=6bc79fbf-e882-49bb-b63a-6fd6ee448944]</a></p><ol start="2"><li>在Composer可以看到， 登录是使用POST方法， 把用户名和密码发送给服务器。 那么我们可以修改Composer中的request内容， 比如用户名为:<a href="mailto:&#102;&#x69;&#100;&#x64;&#x6c;&#x65;&#114;&#116;&#101;&#115;&#x74;&#64;&#102;&#105;&#100;&#x64;&#108;&#101;&#114;&#46;&#99;&#111;&#109;">&#102;&#x69;&#100;&#x64;&#x6c;&#x65;&#114;&#116;&#101;&#115;&#x74;&#64;&#102;&#105;&#100;&#x64;&#108;&#101;&#114;&#46;&#99;&#111;&#109;</a>,密码为test1234。</li><li>Request造好了后， 我们按”Execute” 按钮就可以发送Request了(如果按住Shift键的同时，按”Execute”. Fiddler会自动给这个Request下断点)。</li><li>发送的Request，将出现在左边的Web Session列表中。</li></ol><p><img src="/assets/1/wpsF35B.tmp-20211222153217-zsavmzw.png"></p><h1 id="Parsed和Raw两种编辑模式"><a href="#Parsed和Raw两种编辑模式" class="headerlink" title="Parsed和Raw两种编辑模式"></a><strong>Parsed和Raw两种编辑模式</strong></h1><p>Fiddler Composer有两种编辑模式</p><p>Parsed模式(最常用),  把Request分为三个部分， Request line, Request Headesr,  Request Body。  很容易创建一个Request.</p><p>Raw模式，需要你一行一行手动写一个Request。</p><h1 id="同类工具-Firefox插件Rest-Client"><a href="#同类工具-Firefox插件Rest-Client" class="headerlink" title="同类工具- Firefox插件Rest Client"></a><strong>同类工具- Firefox插件Rest Client</strong></h1><p> Firefox也有一个插件叫Rest Client，  使用起来也很方便</p><p><img src="/assets/1/wpsF35C.tmp-20211222153217-bz2x5gm.png"></p><h1 id="同类工具-Linux上的Curl"><a href="#同类工具-Linux上的Curl" class="headerlink" title="同类工具: Linux上的Curl"></a><strong>同类工具: Linux上的Curl</strong></h1><p> curl是个命令行工具， 功能也很强大</p><p><img src="/assets/1/wpsF35D.tmp-20211222153217-wet74aw.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Fiddler的功能还有很多， 很多功能都没有被挖掘出来。这次我们介绍Fiddler中的一个非常有用的功能Composer，是用来创建和发送HTTP Request的。Composer的使用方法很简单，看下就知道用了。&lt;/p&gt;
&lt;h1 id=&quot;Fiddler-Compose</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="13_web安全测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/13-web%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="11_fiddler" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/13-web%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/11-fiddler/"/>
    
    <category term="999_fiddler文件" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/13-web%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/11-fiddler/999-fiddler%E6%96%87%E4%BB%B6/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>fiddle利用AutoResponder进行调试</title>
    <link href="http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/13_web%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/11_fiddler/999_fiddler%E6%96%87%E4%BB%B6/04_fiddle%E5%88%A9%E7%94%A8AutoResponder%E8%BF%9B%E8%A1%8C%E8%B0%83%E8%AF%95/"/>
    <id>http://example.com/07_%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/13_web%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/11_fiddler/999_fiddler%E6%96%87%E4%BB%B6/04_fiddle%E5%88%A9%E7%94%A8AutoResponder%E8%BF%9B%E8%A1%8C%E8%B0%83%E8%AF%95/</id>
    <published>2022-05-14T18:00:16.977Z</published>
    <updated>2022-05-14T16:12:47.102Z</updated>
    
    <content type="html"><![CDATA[<pre><code>一、将服务器的返回数据（即原资源）重定向到本地的文件进行调试</code></pre><p>1、打开fiddler，打开浏览器输入<a href="https://www.baidu.com(已百度为例),再回到fiddler进行设置/">https://www.baidu.com(已百度为例)，再回到fiddler进行设置</a></p><p>2、按照截图所示，分别将4个选购全部勾选，勾选完成后，将待重定向的网址直接拖到右方【手动填写完整地址&#x2F;正则表达式进行模糊匹配的地址】即可 </p><p><img src="/assets/1/wpsC4D9.tmp-20211222152849-xddwtw5.png"><img src="/assets/1/wpsC4E9.tmp-20211222152849-dnpk6z2.jpg"></p><p>3、填写要替换的内容，下拉框有很多选项可以选择， 比如201、302、404，502等status code<br>注，我的一开始是404_Plain.dat</p><p><img src="/assets/1/wpsC4EA.tmp-20211222152849-7l8x6s8.png"><img src="/assets/1/wpsC4EB.tmp-20211222152849-x7naahz.jpg"></p><p>4、设置完成之后，刷新百度网页，请求回来的数据已经是替换后的内容了 </p><p><img src="/assets/1/wpsC4EC.tmp-20211222152849-llrl5ig.jpg"></p><p><img src="/assets/1/wpsC4ED.tmp-20211222152849-0tffmuw.png"></p><p>注：想取消的话，直接将第1步中勾选的Enable rules去掉即可</p><p>二、利用AutoResponder【重定向功能】修改返回response的数据</p><p>1、在fiddler中打开百度<a href="http://www.baidu.com,选择syntaxview的内容进行复制,保存到本机上,以baidu.html格式进行保存/">www.baidu.com，选择SyntaxView的内容进行复制，保存到本机上，以baidu.html格式进行保存</a></p><p><img src="/assets/1/wpsC4EE.tmp-20211222152849-iqjyu7d.png"><img src="/assets/1/wpsC4EF.tmp-20211222152849-74zklii.jpg"></p><p><img src="/assets/1/wpsC4F0.tmp-20211222152849-ogk32ph.jpg"></p><p><img src="/assets/1/wpsC4F1.tmp-20211222152849-vounnot.png"></p><p>2、点击AutoResponder，把刚才的网址拖到右边</p><p><img src="/assets/1/wpsC4F2.tmp-20211222152849-58xedtk.png"><img src="/assets/1/wpsC4F3.tmp-20211222152849-51zx5n6.jpg"></p><p>3、第一个下拉框选择Header:Accept&#x3D;html</p><pre><code>第二个下拉框选择你刚才保存baidu.html的路径</code></pre><p><img src="/assets/1/wpsC4F4.tmp-20211222152849-8o1a79i.jpg"></p><p><img src="/assets/1/wpsC4F5.tmp-20211222152849-dy76gg8.png"></p><p>4、勾选Enable rules之类的四个，然后点击保存</p><p><img src="/assets/1/wpsC4F6.tmp-20211222152849-sgb5fjf.png"><img src="/assets/1/wpsC4F7.tmp-20211222152849-d28ppju.jpg"></p><p>5、再访问百度</p><p><img src="/assets/1/wpsC4F8.tmp-20211222152849-upurpao.jpg"></p><p><img src="/assets/1/wpsC4F9.tmp-20211222152849-o25jqlm.png"></p><p>注：想取消的话，直接将第1步中勾选的Enable rules去掉即可</p>]]></content>
    
    
      
      
    <summary type="html">&lt;pre&gt;&lt;code&gt;一、将服务器的返回数据（即原资源）重定向到本地的文件进行调试
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;1、打开fiddler，打开浏览器输入&lt;a href=&quot;https://www.baidu.com(已百度为例),再回到fiddler进行设置/&quot;&gt;https:/</summary>
      
    
    
    
    <category term="07_测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="13_web安全测试工具" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/13-web%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    <category term="11_fiddler" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/13-web%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/11-fiddler/"/>
    
    <category term="999_fiddler文件" scheme="http://example.com/categories/07-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/13-web%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/11-fiddler/999-fiddler%E6%96%87%E4%BB%B6/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
</feed>
